{"ast":null,"code":"import _defineProperty from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar _ACTIONS;\n\nimport { __decorate } from 'tslib';\nimport { EventEmitter, ElementRef, Output, Input, Component, Injectable, Renderer2, ContentChildren, ContentChild, HostListener, NgModule } from '@angular/core';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nfunction Ng2DropdownButton_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 3);\n    ɵngcc0.ɵɵnamespaceSVG();\n    ɵngcc0.ɵɵelementStart(1, \"svg\", 4);\n    ɵngcc0.ɵɵelement(2, \"path\", 5);\n    ɵngcc0.ɵɵelement(3, \"g\");\n    ɵngcc0.ɵɵelement(4, \"g\");\n    ɵngcc0.ɵɵelement(5, \"g\");\n    ɵngcc0.ɵɵelement(6, \"g\");\n    ɵngcc0.ɵɵelement(7, \"g\");\n    ɵngcc0.ɵɵelement(8, \"g\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c0 = [\"*\"];\n\nfunction Ng2DropdownMenu_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r2 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function Ng2DropdownMenu_div_3_Template_div_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r2);\n      var ctx_r1 = ɵngcc0.ɵɵnextContext();\n      return ctx_r1.hide();\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nvar _c1 = [[[\"ng2-dropdown-button\"]], [[\"ng2-dropdown-menu\"]]];\nvar _c2 = [\"ng2-dropdown-button\", \"ng2-dropdown-menu\"];\n\nvar Ng2DropdownButton = /*#__PURE__*/function () {\n  function Ng2DropdownButton(element) {\n    _classCallCheck(this, Ng2DropdownButton);\n\n    this.element = element;\n    this.onMenuToggled = new EventEmitter();\n    this.showCaret = true;\n  }\n  /**\n   * @name toggleMenu\n   * @desc emits event to toggle menu\n   */\n\n\n  _createClass(Ng2DropdownButton, [{\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      this.onMenuToggled.emit(true);\n    }\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     */\n\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.element.nativeElement.getBoundingClientRect();\n    }\n  }]);\n\n  return Ng2DropdownButton;\n}();\n\nNg2DropdownButton.ɵfac = function Ng2DropdownButton_Factory(t) {\n  return new (t || Ng2DropdownButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNg2DropdownButton.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2DropdownButton,\n  selectors: [[\"ng2-dropdown-button\"]],\n  inputs: {\n    showCaret: \"showCaret\"\n  },\n  outputs: {\n    onMenuToggled: \"onMenuToggled\"\n  },\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 1,\n  consts: [[\"type\", \"button\", \"tabindex\", \"0s\", 1, \"ng2-dropdown-button\", 3, \"click\"], [1, \"ng2-dropdown-button__label\"], [\"class\", \"ng2-dropdown-button__caret\", 4, \"ngIf\"], [1, \"ng2-dropdown-button__caret\"], [\"enable-background\", \"new 0 0 32 32\", \"height\", \"16px\", \"id\", \"\\u0421\\u043B\\u043E\\u0439_1\", \"version\", \"1.1\", \"viewBox\", \"0 0 32 32\", \"width\", \"16px\", 0, \"xml\", \"space\", \"preserve\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\"], [\"d\", \"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\", \"fill\", \"#121313\", \"id\", \"Expand_More\"]],\n  template: function Ng2DropdownButton_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"button\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function Ng2DropdownButton_Template_button_click_0_listener() {\n        return ctx.toggleMenu();\n      });\n      ɵngcc0.ɵɵelementStart(1, \"span\", 1);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, Ng2DropdownButton_span_3_Template, 9, 0, \"span\", 2);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showCaret);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\".ng2-dropdown-button[_ngcontent-%COMP%]{font-family:Roboto,\\\"Helvetica Neue\\\",Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button[_ngcontent-%COMP%]:hover{color:#222}.ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button[_ngcontent-%COMP%]:focus{color:#222;border-bottom:2px solid #2196f3}.ng2-dropdown-button__label[_ngcontent-%COMP%]{flex:1 1 95%}.ng2-dropdown-button__caret[_ngcontent-%COMP%]{width:12px;height:12px;display:flex;flex:1 1 6%}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%], .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]{border:none;min-width:40px;width:40px;border-radius:100%;transition:.2s;text-align:center;height:40px;padding:.5em}.ng2-dropdown-button--icon[_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active, .ng2-dropdown-button--icon   [_nghost-%COMP%]   .ng2-dropdown-button[_ngcontent-%COMP%]:active{background:rgba(0,0,0,.2)}\"]\n});\n\nNg2DropdownButton.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n\n__decorate([Output()], Ng2DropdownButton.prototype, \"onMenuToggled\", void 0);\n\n__decorate([Input()], Ng2DropdownButton.prototype, \"showCaret\", void 0);\n\nvar KEYS = {\n  BACKSPACE: 9,\n  PREV: 38,\n  NEXT: 40,\n  ENTER: 13,\n  ESCAPE: 27\n};\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\n\nvar onSwitchNext = function onSwitchNext(index, items, state) {\n  if (index < items.length - 1) {\n    state.select(items[index + 1], true);\n  }\n};\n\nvar ɵ0 = onSwitchNext;\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\n\nvar onSwitchPrev = function onSwitchPrev(index, items, state) {\n  if (index > 0) {\n    state.select(items[index - 1], true);\n  }\n};\n\nvar ɵ1 = onSwitchPrev;\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\n\nvar onBackspace = function onBackspace(index, items, state) {\n  if (index < items.length - 1) {\n    state.select(items[index + 1], true);\n  } else {\n    state.select(items[0], true);\n  }\n};\n\nvar ɵ2 = onBackspace;\n\nfunction onEscape() {\n  this.hide();\n}\n\n;\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\n\nvar onItemClicked = function onItemClicked(index, items, state) {\n  return state.selectedItem ? state.selectedItem.click() : undefined;\n};\n\nvar ɵ3 = onItemClicked;\nvar ACTIONS = (_ACTIONS = {}, _defineProperty(_ACTIONS, KEYS.BACKSPACE, onBackspace), _defineProperty(_ACTIONS, KEYS.PREV, onSwitchPrev), _defineProperty(_ACTIONS, KEYS.NEXT, onSwitchNext), _defineProperty(_ACTIONS, KEYS.ENTER, onItemClicked), _defineProperty(_ACTIONS, KEYS.ESCAPE, onEscape), _ACTIONS);\n\nfunction arrowKeysHandler(event) {\n  if ([38, 40].indexOf(event.keyCode) > -1) {\n    event.preventDefault();\n  }\n}\n\nvar Ng2DropdownState = /*#__PURE__*/function () {\n  function Ng2DropdownState() {\n    _classCallCheck(this, Ng2DropdownState);\n\n    this.onItemSelected = new EventEmitter();\n    this.onItemClicked = new EventEmitter();\n    this.onItemDestroyed = new EventEmitter();\n  }\n  /**\n   * @name selectedItem\n   * @desc getter for _selectedItem\n   */\n\n\n  _createClass(Ng2DropdownState, [{\n    key: \"selectedItem\",\n    get: function get() {\n      return this._selectedItem;\n    }\n    /**\n     * @name selects a menu item and emits event\n     * @param item\n     */\n\n  }, {\n    key: \"select\",\n    value: function select(item) {\n      var dispatchEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      this._selectedItem = item;\n\n      if (!dispatchEvent || !item) {\n        return;\n      }\n\n      item.focus();\n      this.onItemSelected.emit(item);\n    }\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n\n  }, {\n    key: \"unselect\",\n    value: function unselect() {\n      this._selectedItem = undefined;\n    }\n  }]);\n\n  return Ng2DropdownState;\n}();\n\nvar DropdownStateService = function DropdownStateService() {\n  _classCallCheck(this, DropdownStateService);\n\n  this.menuState = {\n    isVisible: false,\n    toString: function toString() {\n      return this.isVisible === true ? 'visible' : 'hidden';\n    }\n  };\n  this.dropdownState = new Ng2DropdownState();\n};\n\nDropdownStateService.ɵfac = function DropdownStateService_Factory(t) {\n  return new (t || DropdownStateService)();\n};\n\nDropdownStateService.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DropdownStateService,\n  factory: function factory(t) {\n    return DropdownStateService.ɵfac(t);\n  }\n});\n\nvar Ng2MenuItem = /*#__PURE__*/function () {\n  function Ng2MenuItem(state, element) {\n    _classCallCheck(this, Ng2MenuItem);\n\n    this.state = state;\n    this.element = element;\n    /**\n     * @preventClose\n     * @desc if true, clicking on the item won't close the dropdown\n     */\n\n    this.preventClose = false;\n  }\n\n  _createClass(Ng2MenuItem, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.state.dropdownState.onItemDestroyed.emit(this);\n    }\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     */\n\n  }, {\n    key: \"isSelected\",\n    get: function get() {\n      return this === this.state.dropdownState.selectedItem;\n    }\n    /**\n     * @name click\n     * @desc emits select event\n     */\n\n  }, {\n    key: \"select\",\n    value: function select($event) {\n      this.state.dropdownState.select(this, true);\n\n      if ($event) {\n        $event.stopPropagation();\n        $event.preventDefault();\n      }\n    }\n    /**\n     * @name click\n     * @desc emits click event\n     */\n\n  }, {\n    key: \"click\",\n    value: function click() {\n      this.state.dropdownState.onItemClicked.emit(this);\n    }\n    /**\n     * @name focus\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.element.nativeElement.children[0].focus();\n    }\n  }]);\n\n  return Ng2MenuItem;\n}();\n\nNg2MenuItem.ɵfac = function Ng2MenuItem_Factory(t) {\n  return new (t || Ng2MenuItem)(ɵngcc0.ɵɵdirectiveInject(DropdownStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nNg2MenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2MenuItem,\n  selectors: [[\"ng2-menu-item\"]],\n  inputs: {\n    preventClose: \"preventClose\",\n    value: \"value\"\n  },\n  ngContentSelectors: _c0,\n  decls: 2,\n  vars: 2,\n  consts: [[\"role\", \"button\", \"tabindex\", \"0\", 1, \"ng2-menu-item\", 3, \"keydown.enter\", \"click\", \"mouseover\"]],\n  template: function Ng2MenuItem_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"keydown.enter\", function Ng2MenuItem_Template_div_keydown_enter_0_listener() {\n        return ctx.click();\n      })(\"click\", function Ng2MenuItem_Template_div_click_0_listener() {\n        return ctx.click();\n      })(\"mouseover\", function Ng2MenuItem_Template_div_mouseover_0_listener() {\n        return ctx.select();\n      });\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ng2-menu-item--selected\", ctx.isSelected);\n    }\n  },\n  styles: [\".ng2-menu-item[_ngcontent-%COMP%]{font-family:Roboto,\\\"Helvetica Neue\\\",Helvetica,Arial;background:#fff;color:rgba(0,0,0,.87);cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected[_ngcontent-%COMP%]{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item[_ngcontent-%COMP%]:focus{outline:0}.ng2-menu-item[_ngcontent-%COMP%]:active{background:rgba(158,158,158,.4)}ng2-menu-item[_nghost-%COMP%]     [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:rgba(0,0,0,.44)}\"]\n});\n\nNg2MenuItem.ctorParameters = function () {\n  return [{\n    type: DropdownStateService\n  }, {\n    type: ElementRef\n  }];\n};\n\n__decorate([Input()], Ng2MenuItem.prototype, \"preventClose\", void 0);\n\n__decorate([Input()], Ng2MenuItem.prototype, \"value\", void 0);\n\nvar Ng2DropdownMenu = /*#__PURE__*/function () {\n  function Ng2DropdownMenu(dropdownState, element, renderer) {\n    _classCallCheck(this, Ng2DropdownMenu);\n\n    this.dropdownState = dropdownState;\n    this.element = element;\n    this.renderer = renderer;\n    /**\n     * @name width\n     */\n\n    this.width = 4;\n    /**\n     * @description if set to true, the first element of the dropdown will be automatically focused\n     * @name focusFirstElement\n     */\n\n    this.focusFirstElement = true;\n    /**\n     * @name appendToBody\n     */\n\n    this.appendToBody = true;\n    /**\n     * @name zIndex\n     */\n\n    this.zIndex = 1000;\n    this.listeners = {\n      arrowHandler: undefined,\n      handleKeypress: undefined\n    };\n  }\n  /**\n   * @name show\n   * @shows menu and selects first item\n   */\n\n\n  _createClass(Ng2DropdownMenu, [{\n    key: \"show\",\n    value: function show(position) {\n      var dynamic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var dc = typeof document !== 'undefined' ? document : undefined;\n      var wd = typeof window !== 'undefined' ? window : undefined;\n\n      if (!this.dropdownState.menuState.isVisible) {\n        // setting handlers\n        this.listeners.handleKeypress = this.renderer.listen(dc.body, 'keydown', this.handleKeypress.bind(this));\n        this.listeners.arrowHandler = this.renderer.listen(wd, 'keydown', arrowKeysHandler);\n      } // update state\n\n\n      this.dropdownState.menuState.isVisible = true;\n\n      if (position) {\n        this.updatePosition(position, dynamic);\n      }\n    }\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.dropdownState.menuState.isVisible = false; // reset selected item state\n\n      this.dropdownState.dropdownState.unselect(); // call function to unlisten\n\n      this.listeners.arrowHandler && this.listeners.arrowHandler();\n      this.listeners.handleKeypress && this.listeners.handleKeypress();\n    }\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     * @param dynamic {boolean}\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition(position, dynamic) {\n      this.position = position;\n      this.updateOnChange(dynamic);\n    }\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n\n  }, {\n    key: \"handleKeypress\",\n    value: function handleKeypress($event) {\n      var key = $event.keyCode;\n      var items = this.items.toArray();\n      var index = items.indexOf(this.dropdownState.dropdownState.selectedItem);\n\n      if (!ACTIONS.hasOwnProperty(key)) {\n        return;\n      }\n\n      ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n    }\n    /**\n     * @name getMenuElement\n     */\n\n  }, {\n    key: \"getMenuElement\",\n    value: function getMenuElement() {\n      return this.element.nativeElement.children[0];\n    }\n    /**\n     * @name calcPositionOffset\n     * @param position\n     */\n\n  }, {\n    key: \"calcPositionOffset\",\n    value: function calcPositionOffset(position) {\n      var wd = typeof window !== 'undefined' ? window : undefined;\n      var dc = typeof document !== 'undefined' ? document : undefined;\n\n      if (!wd || !dc || !position) {\n        return;\n      }\n\n      var element = this.getMenuElement();\n      var supportPageOffset = wd.pageXOffset !== undefined;\n      var isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n      var x = supportPageOffset ? wd.pageXOffset : isCSS1Compat ? dc.documentElement.scrollLeft : dc.body.scrollLeft;\n      var y = supportPageOffset ? wd.pageYOffset : isCSS1Compat ? dc.documentElement.scrollTop : dc.body.scrollTop;\n\n      var _this$applyOffset = this.applyOffset(\"\".concat(position.top + (this.appendToBody ? y - 15 : 0), \"px\"), \"\".concat(position.left + x - 5, \"px\")),\n          top = _this$applyOffset.top,\n          left = _this$applyOffset.left;\n\n      var clientWidth = element.clientWidth;\n      var clientHeight = element.clientHeight;\n      var marginFromBottom = parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n      var marginFromRight = parseInt(left) + clientWidth;\n      var windowScrollHeight = wd.innerHeight + wd.scrollY;\n      var windowScrollWidth = wd.innerWidth + wd.scrollX;\n\n      if (marginFromBottom >= windowScrollHeight) {\n        top = \"\".concat(parseInt(top.replace('px', '')) - clientHeight, \"px\");\n      }\n\n      if (marginFromRight >= windowScrollWidth) {\n        var marginRight = marginFromRight - windowScrollWidth + 30;\n        left = \"\".concat(parseInt(left.replace('px', '')) - marginRight, \"px\");\n      }\n\n      return {\n        top: top,\n        left: left\n      };\n    }\n  }, {\n    key: \"applyOffset\",\n    value: function applyOffset(top, left) {\n      if (!this.offset) {\n        return {\n          top: top,\n          left: left\n        };\n      }\n\n      var offset = this.offset.split(' ');\n\n      if (!offset[1]) {\n        offset[1] = '0';\n      }\n\n      top = \"\".concat(parseInt(top.replace('px', '')) + parseInt(offset[0]), \"px\");\n      left = \"\".concat(parseInt(left.replace('px', '')) + parseInt(offset[1]), \"px\");\n      return {\n        top: top,\n        left: left\n      };\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var dc = typeof document !== 'undefined' ? document : undefined;\n\n      if (this.appendToBody) {\n        // append menu element to the body\n        dc.body.appendChild(this.element.nativeElement);\n      }\n    }\n  }, {\n    key: \"updateOnChange\",\n    value: function updateOnChange() {\n      var dynamic = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var element = this.getMenuElement();\n      var position = this.calcPositionOffset(this.position);\n\n      if (position) {\n        this.renderer.setStyle(element, 'top', position.top.toString());\n        this.renderer.setStyle(element, 'left', position.left.toString());\n      } // select first item unless user disabled this option\n\n\n      if (this.focusFirstElement && this.items.first && !this.dropdownState.dropdownState.selectedItem) {\n        this.dropdownState.dropdownState.select(this.items.first, false);\n      }\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      var elem = this.element.nativeElement;\n      elem.parentNode.removeChild(elem);\n\n      if (this.listeners.handleKeypress) {\n        this.listeners.handleKeypress();\n      }\n    }\n  }]);\n\n  return Ng2DropdownMenu;\n}();\n\nNg2DropdownMenu.ɵfac = function Ng2DropdownMenu_Factory(t) {\n  return new (t || Ng2DropdownMenu)(ɵngcc0.ɵɵdirectiveInject(DropdownStateService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n};\n\nNg2DropdownMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2DropdownMenu,\n  selectors: [[\"ng2-dropdown-menu\"]],\n  contentQueries: function Ng2DropdownMenu_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, Ng2MenuItem, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    }\n  },\n  inputs: {\n    width: \"width\",\n    focusFirstElement: \"focusFirstElement\",\n    appendToBody: \"appendToBody\",\n    zIndex: \"zIndex\",\n    offset: \"offset\"\n  },\n  ngContentSelectors: _c0,\n  decls: 4,\n  vars: 12,\n  consts: [[1, \"ng2-dropdown-menu__options-container\"], [\"class\", \"ng2-dropdown-backdrop\", 3, \"click\", 4, \"ngIf\"], [1, \"ng2-dropdown-backdrop\", 3, \"click\"]],\n  template: function Ng2DropdownMenu_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\");\n      ɵngcc0.ɵɵelementStart(1, \"div\", 0);\n      ɵngcc0.ɵɵprojection(2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, Ng2DropdownMenu_div_3_Template, 1, 0, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassMapInterpolate1(\"ng2-dropdown-menu ng2-dropdown-menu---width--\", ctx.width, \"\");\n      ɵngcc0.ɵɵstyleProp(\"z-index\", ctx.zIndex);\n      ɵngcc0.ɵɵclassProp(\"ng2-dropdown-menu--inside-element\", !ctx.appendToBody)(\"ng2-dropdown-menu--open\", ctx.dropdownState.menuState.isVisible);\n      ɵngcc0.ɵɵproperty(\"@fade\", ctx.dropdownState.menuState.toString());\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"@opacity\", ctx.dropdownState.menuState.toString());\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dropdownState.menuState.isVisible);\n    }\n  },\n  directives: [ɵngcc1.NgIf],\n  styles: [\"[_nghost-%COMP%]{display:block}.ng2-dropdown-menu[_ngcontent-%COMP%]{overflow-y:auto;box-shadow:0 1px 2px 0 rgba(0,0,0,.3);position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element[_ngcontent-%COMP%]{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2[_ngcontent-%COMP%]{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4[_ngcontent-%COMP%]{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6[_ngcontent-%COMP%]{width:320px}.ng2-dropdown-backdrop[_ngcontent-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}[_nghost-%COMP%]     .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\"],\n  data: {\n    animation: [trigger('fade', [state('visible', style({\n      opacity: 1,\n      height: '*',\n      width: '*'\n    })), state('hidden', style({\n      opacity: 0,\n      overflow: 'hidden',\n      height: 0,\n      width: 0\n    })), transition('hidden => visible', [animate('250ms ease-in', style({\n      opacity: 1,\n      height: '*',\n      width: '*'\n    }))]), transition('visible => hidden', [animate('350ms ease-out', style({\n      opacity: 0,\n      width: 0,\n      height: 0\n    }))])]), trigger('opacity', [transition('hidden => visible', [animate('450ms ease-in', keyframes([style({\n      opacity: 0,\n      offset: 0\n    }), style({\n      opacity: 1,\n      offset: 1\n    })]))]), transition('visible => hidden', [animate('250ms ease-out', keyframes([style({\n      opacity: 1,\n      offset: 0\n    }), style({\n      opacity: 0.5,\n      offset: 0.3\n    }), style({\n      opacity: 0,\n      offset: 1\n    })]))])])]\n  }\n});\n\nNg2DropdownMenu.ctorParameters = function () {\n  return [{\n    type: DropdownStateService\n  }, {\n    type: ElementRef\n  }, {\n    type: Renderer2\n  }];\n};\n\n__decorate([Input()], Ng2DropdownMenu.prototype, \"width\", void 0);\n\n__decorate([Input()], Ng2DropdownMenu.prototype, \"focusFirstElement\", void 0);\n\n__decorate([Input()], Ng2DropdownMenu.prototype, \"offset\", void 0);\n\n__decorate([Input()], Ng2DropdownMenu.prototype, \"appendToBody\", void 0);\n\n__decorate([Input()], Ng2DropdownMenu.prototype, \"zIndex\", void 0);\n\n__decorate([ContentChildren(Ng2MenuItem, {\n  descendants: true\n})], Ng2DropdownMenu.prototype, \"items\", void 0);\n\nvar Ng2Dropdown = /*#__PURE__*/function () {\n  function Ng2Dropdown(state) {\n    _classCallCheck(this, Ng2Dropdown);\n\n    this.state = state;\n    this.dynamicUpdate = true; // outputs\n\n    this.onItemClicked = new EventEmitter();\n    this.onItemSelected = new EventEmitter();\n    this.onShow = new EventEmitter();\n    this.onHide = new EventEmitter();\n  }\n\n  _createClass(Ng2Dropdown, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this = this;\n\n      this.state.dropdownState.onItemClicked.subscribe(function (item) {\n        _this.onItemClicked.emit(item);\n\n        if (item.preventClose) {\n          return;\n        }\n\n        _this.hide.call(_this);\n      });\n\n      if (this.button) {\n        this.button.onMenuToggled.subscribe(function () {\n          _this.toggleMenu();\n        });\n      }\n\n      this.state.dropdownState.onItemSelected.subscribe(function (item) {\n        _this.onItemSelected.emit(item);\n      });\n      this.state.dropdownState.onItemDestroyed.subscribe(function (item) {\n        var newSelectedItem;\n\n        var items = _this.menu.items.toArray();\n\n        if (item !== _this.state.dropdownState.selectedItem) {\n          return;\n        }\n\n        if (_this.menu.focusFirstElement) {\n          newSelectedItem = item === items[0] && items.length > 1 ? items[1] : items[0];\n        }\n\n        _this.state.dropdownState.select(newSelectedItem);\n      });\n    }\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n\n  }, {\n    key: \"toggleMenu\",\n    value: function toggleMenu() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.button.getPosition();\n      this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.menu.hide();\n      this.onHide.emit(this);\n    }\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var position = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.button.getPosition();\n      this.menu.show(position, this.dynamicUpdate);\n      this.onShow.emit(this);\n    }\n    /**\n     * @name scrollListener\n     */\n\n  }, {\n    key: \"scrollListener\",\n    value: function scrollListener() {\n      if (this.button && this.dynamicUpdate) {\n        this.menu.updatePosition(this.button.getPosition(), true);\n      }\n    }\n  }]);\n\n  return Ng2Dropdown;\n}();\n\nNg2Dropdown.ɵfac = function Ng2Dropdown_Factory(t) {\n  return new (t || Ng2Dropdown)(ɵngcc0.ɵɵdirectiveInject(DropdownStateService));\n};\n\nNg2Dropdown.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: Ng2Dropdown,\n  selectors: [[\"ng2-dropdown\"]],\n  contentQueries: function Ng2Dropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, Ng2DropdownButton, true);\n      ɵngcc0.ɵɵstaticContentQuery(dirIndex, Ng2DropdownMenu, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.button = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menu = _t.first);\n    }\n  },\n  hostBindings: function Ng2Dropdown_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"scroll\", function Ng2Dropdown_scroll_HostBindingHandler() {\n        return ctx.scrollListener();\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    dynamicUpdate: \"dynamicUpdate\"\n  },\n  outputs: {\n    onItemClicked: \"onItemClicked\",\n    onItemSelected: \"onItemSelected\",\n    onShow: \"onShow\",\n    onHide: \"onHide\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([DropdownStateService])],\n  ngContentSelectors: _c2,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"ng2-dropdown-container\"]],\n  template: function Ng2Dropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef(_c1);\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵprojection(1);\n      ɵngcc0.ɵɵprojection(2, 1);\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\nNg2Dropdown.ctorParameters = function () {\n  return [{\n    type: DropdownStateService\n  }];\n};\n\n__decorate([ContentChild(Ng2DropdownButton, {\n  static: true\n})], Ng2Dropdown.prototype, \"button\", void 0);\n\n__decorate([ContentChild(Ng2DropdownMenu, {\n  static: true\n})], Ng2Dropdown.prototype, \"menu\", void 0);\n\n__decorate([Input()], Ng2Dropdown.prototype, \"dynamicUpdate\", void 0);\n\n__decorate([Output()], Ng2Dropdown.prototype, \"onItemClicked\", void 0);\n\n__decorate([Output()], Ng2Dropdown.prototype, \"onItemSelected\", void 0);\n\n__decorate([Output()], Ng2Dropdown.prototype, \"onShow\", void 0);\n\n__decorate([Output()], Ng2Dropdown.prototype, \"onHide\", void 0);\n\n__decorate([HostListener('window:scroll')], Ng2Dropdown.prototype, \"scrollListener\", null);\n\nvar Ng2DropdownModule = function Ng2DropdownModule() {\n  _classCallCheck(this, Ng2DropdownModule);\n};\n\nNg2DropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: Ng2DropdownModule\n});\nNg2DropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function Ng2DropdownModule_Factory(t) {\n    return new (t || Ng2DropdownModule)();\n  },\n  imports: [[CommonModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2DropdownButton, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-dropdown-button',\n      template: \"<button class='ng2-dropdown-button' type=\\\"button\\\" (click)=\\\"toggleMenu()\\\" tabindex=\\\"0s\\\">\\n    <span class=\\\"ng2-dropdown-button__label\\\">\\n        <ng-content></ng-content>\\n    </span>\\n\\n    <span class=\\\"ng2-dropdown-button__caret\\\" *ngIf=\\\"showCaret\\\">\\n        <svg enable-background=\\\"new 0 0 32 32\\\" height=\\\"16px\\\" id=\\\"\\u0421\\u043B\\u043E\\u0439_1\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 32 32\\\" width=\\\"16px\\\" xml:space=\\\"preserve\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\"><path d=\\\"M24.285,11.284L16,19.571l-8.285-8.288c-0.395-0.395-1.034-0.395-1.429,0  c-0.394,0.395-0.394,1.035,0,1.43l8.999,9.002l0,0l0,0c0.394,0.395,1.034,0.395,1.428,0l8.999-9.002  c0.394-0.395,0.394-1.036,0-1.431C25.319,10.889,24.679,10.889,24.285,11.284z\\\" fill=\\\"#121313\\\" id=\\\"Expand_More\\\"/><g/><g/><g/><g/><g/><g/></svg>\\n    </span>\\n</button>\\n\",\n      styles: [\".ng2-dropdown-button{font-family:Roboto,\\\"Helvetica Neue\\\",Helvetica,Arial;background:#fff;padding:.45rem .25rem;font-size:14px;letter-spacing:.08rem;color:#444;outline:0;cursor:pointer;font-weight:400;border:none;border-bottom:1px solid #efefef;text-align:left;min-width:100px;width:100%;display:flex;flex-direction:row;max-width:150px}.ng2-dropdown-button:hover{color:#222}.ng2-dropdown-button:active,.ng2-dropdown-button:focus{color:#222;border-bottom:2px solid #2196f3}.ng2-dropdown-button__label{flex:1 1 95%}.ng2-dropdown-button__caret{width:12px;height:12px;display:flex;flex:1 1 6%}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button{border:none;min-width:40px;width:40px;border-radius:100%;transition:.2s;text-align:center;height:40px;padding:.5em}:host-context(.ng2-dropdown-button--icon) .ng2-dropdown-button:active{background:rgba(0,0,0,.2)}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    onMenuToggled: [{\n      type: Output\n    }],\n    showCaret: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DropdownStateService, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2MenuItem, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-menu-item',\n      template: \"\\n        <div\\n            class=\\\"ng2-menu-item\\\"\\n            role=\\\"button\\\"\\n            tabindex=\\\"0\\\"\\n            [class.ng2-menu-item--selected]=\\\"isSelected\\\"\\n            (keydown.enter)=\\\"click()\\\"\\n            (click)=\\\"click()\\\"\\n            (mouseover)=\\\"select()\\\"\\n        >\\n            <ng-content></ng-content>\\n        </div>\\n    \",\n      styles: [\".ng2-menu-item{font-family:Roboto,\\\"Helvetica Neue\\\",Helvetica,Arial;background:#fff;color:rgba(0,0,0,.87);cursor:pointer;font-size:.9em;text-transform:none;font-weight:400;letter-spacing:.03em;height:48px;line-height:48px;padding:.3em 1.25rem;text-overflow:ellipsis;white-space:nowrap;overflow:hidden;transition:background .25s}.ng2-menu-item--selected{background:rgba(158,158,158,.2);outline:0}.ng2-menu-item:focus{outline:0}.ng2-menu-item:active{background:rgba(158,158,158,.4)}:host(ng2-menu-item) ::ng-deep [ng2-menu-item-icon]{vertical-align:middle;font-size:28px;width:1.5em;height:30px;color:rgba(0,0,0,.44)}\"]\n    }]\n  }], function () {\n    return [{\n      type: DropdownStateService\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    preventClose: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2DropdownMenu, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-dropdown-menu',\n      template: \"\\n        <!-- MENU -->\\n        <div\\n            class=\\\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\\\"\\n            [class.ng2-dropdown-menu--inside-element]=\\\"!appendToBody\\\"\\n            [class.ng2-dropdown-menu--open]=\\\"dropdownState.menuState.isVisible\\\"\\n            [style.z-index]=\\\"zIndex\\\"\\n            [@fade]=\\\"dropdownState.menuState.toString()\\\"\\n        >\\n            <div\\n                class=\\\"ng2-dropdown-menu__options-container\\\"\\n                [@opacity]=\\\"dropdownState.menuState.toString()\\\"\\n            >\\n                <ng-content></ng-content>\\n            </div>\\n        </div>\\n\\n        <!-- BACKDROP -->\\n        <div\\n            class=\\\"ng2-dropdown-backdrop\\\"\\n            *ngIf=\\\"dropdownState.menuState.isVisible\\\"\\n            (click)=\\\"hide()\\\"\\n        ></div>\\n    \",\n      animations: [trigger('fade', [state('visible', style({\n        opacity: 1,\n        height: '*',\n        width: '*'\n      })), state('hidden', style({\n        opacity: 0,\n        overflow: 'hidden',\n        height: 0,\n        width: 0\n      })), transition('hidden => visible', [animate('250ms ease-in', style({\n        opacity: 1,\n        height: '*',\n        width: '*'\n      }))]), transition('visible => hidden', [animate('350ms ease-out', style({\n        opacity: 0,\n        width: 0,\n        height: 0\n      }))])]), trigger('opacity', [transition('hidden => visible', [animate('450ms ease-in', keyframes([style({\n        opacity: 0,\n        offset: 0\n      }), style({\n        opacity: 1,\n        offset: 1\n      })]))]), transition('visible => hidden', [animate('250ms ease-out', keyframes([style({\n        opacity: 1,\n        offset: 0\n      }), style({\n        opacity: 0.5,\n        offset: 0.3\n      }), style({\n        opacity: 0,\n        offset: 1\n      })]))])])],\n      styles: [\":host{display:block}.ng2-dropdown-menu{overflow-y:auto;box-shadow:0 1px 2px 0 rgba(0,0,0,.3);position:absolute;padding:.5em 0;background:#fff;border-radius:1px;max-height:400px;width:260px;min-height:0;display:block}.ng2-dropdown-menu.ng2-dropdown-menu--inside-element{position:fixed}.ng2-dropdown-menu.ng2-dropdown-menu--width--2{width:200px}.ng2-dropdown-menu.ng2-dropdown-menu--width--4{width:260px}.ng2-dropdown-menu.ng2-dropdown-menu--width--6{width:320px}.ng2-dropdown-backdrop{position:fixed;top:0;left:0;width:100%;height:100%;z-index:1;overflow:hidden}:host ::ng-deep .ng2-menu-divider{height:1px;min-height:1px;max-height:1px;width:100%;display:block;background:#f9f9f9}\"]\n    }]\n  }], function () {\n    return [{\n      type: DropdownStateService\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }];\n  }, {\n    width: [{\n      type: Input\n    }],\n    focusFirstElement: [{\n      type: Input\n    }],\n    appendToBody: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    offset: [{\n      type: Input\n    }],\n    items: [{\n      type: ContentChildren,\n      args: [Ng2MenuItem, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2Dropdown, [{\n    type: Component,\n    args: [{\n      selector: 'ng2-dropdown',\n      template: \"\\n        <div class=\\\"ng2-dropdown-container\\\">\\n            <ng-content select=\\\"ng2-dropdown-button\\\"></ng-content>\\n            <ng-content select=\\\"ng2-dropdown-menu\\\"></ng-content>\\n        </div>\\n    \",\n      providers: [DropdownStateService]\n    }]\n  }], function () {\n    return [{\n      type: DropdownStateService\n    }];\n  }, {\n    dynamicUpdate: [{\n      type: Input\n    }],\n    onItemClicked: [{\n      type: Output\n    }],\n    onItemSelected: [{\n      type: Output\n    }],\n    onShow: [{\n      type: Output\n    }],\n    onHide: [{\n      type: Output\n    }],\n\n    /**\n     * @name scrollListener\n     */\n    scrollListener: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }],\n    button: [{\n      type: ContentChild,\n      args: [Ng2DropdownButton, {\n        static: true\n      }]\n    }],\n    menu: [{\n      type: ContentChild,\n      args: [Ng2DropdownMenu, {\n        static: true\n      }]\n    }]\n  });\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2DropdownModule, {\n    declarations: function declarations() {\n      return [Ng2Dropdown, Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu, Ng2Dropdown];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(Ng2DropdownModule, [{\n    type: NgModule,\n    args: [{\n      exports: [Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu, Ng2Dropdown],\n      declarations: [Ng2Dropdown, Ng2MenuItem, Ng2DropdownButton, Ng2DropdownMenu],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DropdownStateService, Ng2Dropdown, Ng2DropdownButton, Ng2DropdownMenu, Ng2DropdownModule, Ng2MenuItem };","map":{"version":3,"sources":["ng2-material-dropdown/src/modules/components/button/ng2-dropdown-button.ts","ng2-material-dropdown/src/modules/components/menu/actions.ts","ng2-material-dropdown/src/modules/services/ng2-dropdown-state.ts","ng2-material-dropdown/src/modules/services/dropdown-state.service.ts","ng2-material-dropdown/src/modules/components/menu-item/ng2-menu-item.ts","ng2-material-dropdown/src/modules/components/menu/ng2-dropdown-menu.ts","ng2-material-dropdown/src/modules/components/dropdown/ng2-dropdown.ts","ng2-material-dropdown/src/modules/ng2-dropdown.module.ts","ng2-material-dropdown/ng2-material-dropdown.ts"],"names":["tslib_1.__decorate"],"mappings":"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","sourcesContent":["import {\n    Component,\n    Output,\n    Input,\n    EventEmitter,\n    ElementRef\n} from '@angular/core';\n\n@Component({\n    selector: 'ng2-dropdown-button',\n    styleUrls: [ './style.scss' ],\n    templateUrl: './template.html'\n})\nexport class Ng2DropdownButton {\n    @Output() public onMenuToggled: EventEmitter<boolean> = new EventEmitter<boolean>();\n    @Input() public showCaret: boolean = true;\n\n    constructor(private element: ElementRef) {}\n\n    /**\n     * @name toggleMenu\n     * @desc emits event to toggle menu\n     */\n    public toggleMenu(): void {\n        this.onMenuToggled.emit(true);\n    }\n\n    /**\n     * @name getPosition\n     * @desc returns position of the button\n     */\n    public getPosition(): ClientRect {\n      return this.element.nativeElement.getBoundingClientRect();\n    }\n}\n","import { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { Ng2DropdownMenu } from './ng2-dropdown-menu';\nimport { Ng2DropdownState } from '../../services/ng2-dropdown-state';\n\nconst KEYS = {\n    BACKSPACE: 9,\n    PREV: 38,\n    NEXT: 40,\n    ENTER: 13,\n    ESCAPE: 27\n};\n\n/**\n * @name onSwitchNext\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchNext = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    }\n};\n\n/**\n * @name onSwitchPrev\n * @param index\n * @param items\n * @param state\n */\nconst onSwitchPrev = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index > 0) {\n        state.select(items[index - 1], true);\n    }\n};\n\n/**\n * @name onBackspace\n * @param index\n * @param items\n * @param state\n */\nconst onBackspace = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    if (index < items.length - 1) {\n        state.select(items[index + 1], true);\n    } else {\n        state.select(items[0], true);\n    }\n};\n\nfunction onEscape(this: Ng2DropdownMenu) {\n    this.hide();\n};\n\n/**\n * @name onItemClicked\n * @param index\n * @param items\n * @param state\n */\nconst onItemClicked = (index: number, items: Ng2MenuItem[], state: Ng2DropdownState) => {\n    return state.selectedItem ? state.selectedItem.click() : undefined;\n};\n\nexport const ACTIONS = {\n    [KEYS.BACKSPACE]: onBackspace,\n    [KEYS.PREV]: onSwitchPrev,\n    [KEYS.NEXT]: onSwitchNext,\n    [KEYS.ENTER]: onItemClicked,\n    [KEYS.ESCAPE]: onEscape\n};\n\nexport function arrowKeysHandler(event): void {\n    if ([38, 40].indexOf(event.keyCode) > -1) {\n        event.preventDefault();\n    }\n}\n","import { EventEmitter } from '@angular/core';\nimport { Ng2MenuItem } from '../components/menu-item/ng2-menu-item';\nexport class Ng2DropdownState {\n    public onItemSelected: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n    public onItemClicked: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n    public onItemDestroyed: EventEmitter<Ng2MenuItem> = new EventEmitter<\n        Ng2MenuItem\n    >();\n\n    private _selectedItem: Ng2MenuItem;\n\n    /**\n     * @name selectedItem\n     * @desc getter for _selectedItem\n     */\n    public get selectedItem(): Ng2MenuItem {\n        return this._selectedItem;\n    }\n\n    /**\n     * @name selects a menu item and emits event\n     * @param item\n     */\n    public select(item: Ng2MenuItem | undefined, dispatchEvent = true): void {\n        this._selectedItem = item;\n\n        if (!dispatchEvent || !item) {\n            return;\n        }\n\n        item.focus();\n\n        this.onItemSelected.emit(item);\n    }\n\n    /**\n     * @name unselect\n     * @desc sets _selectedItem as undefined\n     */\n    public unselect(): void {\n        this._selectedItem = undefined;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Ng2DropdownState } from './ng2-dropdown-state';\n\n@Injectable()\nexport class DropdownStateService {\n    public menuState = {\n        isVisible: false,\n        toString(): string {\n            return this.isVisible === true ? 'visible' : 'hidden';\n        }\n    };\n\n    public dropdownState = new Ng2DropdownState();\n}\n","import { Component, Input, ElementRef, OnDestroy } from '@angular/core';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-menu-item',\n    styleUrls: ['./style.scss'],\n    template: `\n        <div\n            class=\"ng2-menu-item\"\n            role=\"button\"\n            tabindex=\"0\"\n            [class.ng2-menu-item--selected]=\"isSelected\"\n            (keydown.enter)=\"click()\"\n            (click)=\"click()\"\n            (mouseover)=\"select()\"\n        >\n            <ng-content></ng-content>\n        </div>\n    `\n})\nexport class Ng2MenuItem implements OnDestroy {\n    /**\n     * @preventClose\n     * @desc if true, clicking on the item won't close the dropdown\n     */\n    @Input() public preventClose = false;\n\n    /**\n     * @name value\n     * @desc any value associated to the item\n     */\n    @Input() public value: any;\n\n    constructor(\n        private state: DropdownStateService,\n        private element: ElementRef\n    ) {}\n\n    public ngOnDestroy(): void {\n        this.state.dropdownState.onItemDestroyed.emit(this);\n    }\n\n    /**\n     * @name isSelected\n     * @desc returns current selected item\n     */\n    public get isSelected(): boolean {\n        return this === this.state.dropdownState.selectedItem;\n    }\n\n    /**\n     * @name click\n     * @desc emits select event\n     */\n    public select($event?): void {\n        this.state.dropdownState.select(this, true);\n\n        if ($event) {\n            $event.stopPropagation();\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name click\n     * @desc emits click event\n     */\n    public click(): void {\n        this.state.dropdownState.onItemClicked.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus() {\n        this.element.nativeElement.children[0].focus();\n    }\n}\n","import {\n    Component,\n    ElementRef,\n    Renderer2,\n    ContentChildren,\n    QueryList,\n    Input\n} from '@angular/core';\n\nimport {\n    trigger,\n    style,\n    transition,\n    animate,\n    keyframes,\n    state\n} from '@angular/animations';\n\nimport { ACTIONS, arrowKeysHandler } from './actions';\n\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\n\n@Component({\n    selector: 'ng2-dropdown-menu',\n    styleUrls: ['./style.scss'],\n    template: `\n        <!-- MENU -->\n        <div\n            class=\"ng2-dropdown-menu ng2-dropdown-menu---width--{{ width }}\"\n            [class.ng2-dropdown-menu--inside-element]=\"!appendToBody\"\n            [class.ng2-dropdown-menu--open]=\"dropdownState.menuState.isVisible\"\n            [style.z-index]=\"zIndex\"\n            [@fade]=\"dropdownState.menuState.toString()\"\n        >\n            <div\n                class=\"ng2-dropdown-menu__options-container\"\n                [@opacity]=\"dropdownState.menuState.toString()\"\n            >\n                <ng-content></ng-content>\n            </div>\n        </div>\n\n        <!-- BACKDROP -->\n        <div\n            class=\"ng2-dropdown-backdrop\"\n            *ngIf=\"dropdownState.menuState.isVisible\"\n            (click)=\"hide()\"\n        ></div>\n    `,\n    animations: [\n        trigger('fade', [\n            state('visible', style({ opacity: 1, height: '*', width: '*' })),\n            state(\n                'hidden',\n                style({ opacity: 0, overflow: 'hidden', height: 0, width: 0 })\n            ),\n            transition('hidden => visible', [\n                animate(\n                    '250ms ease-in',\n                    style({ opacity: 1, height: '*', width: '*' })\n                )\n            ]),\n            transition('visible => hidden', [\n                animate(\n                    '350ms ease-out',\n                    style({ opacity: 0, width: 0, height: 0 })\n                )\n            ])\n        ]),\n        trigger('opacity', [\n            transition('hidden => visible', [\n                animate(\n                    '450ms ease-in',\n                    keyframes([\n                        style({ opacity: 0, offset: 0 }),\n                        style({ opacity: 1, offset: 1 })\n                    ])\n                )\n            ]),\n            transition('visible => hidden', [\n                animate(\n                    '250ms ease-out',\n                    keyframes([\n                        style({ opacity: 1, offset: 0 }),\n                        style({ opacity: 0.5, offset: 0.3 }),\n                        style({ opacity: 0, offset: 1 })\n                    ])\n                )\n            ])\n        ])\n    ]\n})\nexport class Ng2DropdownMenu {\n    /**\n     * @name width\n     */\n    @Input() public width = 4;\n\n    /**\n     * @description if set to true, the first element of the dropdown will be automatically focused\n     * @name focusFirstElement\n     */\n    @Input() public focusFirstElement = true;\n\n    /**\n     * @description sets dropdown offset from the button\n     * @name offset {string} follow format '<number> <number>' ex. '0 20'\n     */\n    @Input() public offset: string;\n\n    /**\n     * @name appendToBody\n     */\n    @Input() public appendToBody = true;\n\n    /**\n     * @name zIndex\n     */\n    @Input() public zIndex = 1000;\n\n    /**\n     * @name items\n     */\n    @ContentChildren(Ng2MenuItem, { descendants: true })\n    public items!: QueryList<Ng2MenuItem>;\n\n    private position: ClientRect;\n\n    private listeners = {\n        arrowHandler: undefined,\n        handleKeypress: undefined\n    };\n\n    constructor(\n        public dropdownState: DropdownStateService,\n        private element: ElementRef,\n        private renderer: Renderer2\n    ) {}\n\n    /**\n     * @name show\n     * @shows menu and selects first item\n     */\n    public show(position?: ClientRect, dynamic = true): void {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        const wd = typeof window !== 'undefined' ? window : undefined;\n\n        if (!this.dropdownState.menuState.isVisible) {\n            // setting handlers\n            this.listeners.handleKeypress = this.renderer.listen(\n                dc.body,\n                'keydown',\n                this.handleKeypress.bind(this)\n            );\n            this.listeners.arrowHandler = this.renderer.listen(\n                wd,\n                'keydown',\n                arrowKeysHandler\n            );\n        }\n\n        // update state\n        this.dropdownState.menuState.isVisible = true;\n\n        if (position) {\n            this.updatePosition(position, dynamic);\n        }\n    }\n\n    /**\n     * @name hide\n     * @desc hides menu\n     */\n    public hide(): void {\n        this.dropdownState.menuState.isVisible = false;\n\n        // reset selected item state\n        this.dropdownState.dropdownState.unselect();\n\n        // call function to unlisten\n        this.listeners.arrowHandler && this.listeners.arrowHandler();\n        this.listeners.handleKeypress && this.listeners.handleKeypress();\n    }\n\n    /**\n     * @name updatePosition\n     * @desc updates the menu position every time it is toggled\n     * @param position {ClientRect}\n     * @param dynamic {boolean}\n     */\n    public updatePosition(position: ClientRect, dynamic: boolean): void {\n        this.position = position;\n        this.updateOnChange(dynamic);\n    }\n\n    /**\n     * @name handleKeypress\n     * @desc executes functions on keyPress based on the key pressed\n     * @param $event\n     */\n    public handleKeypress($event): void {\n        const key = $event.keyCode;\n        const items = this.items.toArray();\n        const index = items.indexOf(\n            this.dropdownState.dropdownState.selectedItem\n        );\n\n        if (!ACTIONS.hasOwnProperty(key)) {\n            return;\n        }\n\n        ACTIONS[key].call(this, index, items, this.dropdownState.dropdownState);\n    }\n\n    /**\n     * @name getMenuElement\n     */\n    private getMenuElement(): Element {\n        return this.element.nativeElement.children[0];\n    }\n\n    /**\n     * @name calcPositionOffset\n     * @param position\n     */\n    private calcPositionOffset(position): { top: string; left: string } {\n        const wd = typeof window !== 'undefined' ? window : undefined;\n        const dc = typeof document !== 'undefined' ? document : undefined;\n\n        if (!wd || !dc || !position) {\n            return;\n        }\n\n        const element = this.getMenuElement();\n        const supportPageOffset = wd.pageXOffset !== undefined;\n        const isCSS1Compat = (dc.compatMode || '') === 'CSS1Compat';\n\n        const x = supportPageOffset\n            ? wd.pageXOffset\n            : isCSS1Compat\n            ? dc.documentElement.scrollLeft\n            : dc.body.scrollLeft;\n\n        const y = supportPageOffset\n            ? wd.pageYOffset\n            : isCSS1Compat\n            ? dc.documentElement.scrollTop\n            : dc.body.scrollTop;\n\n        let { top, left } = this.applyOffset(\n            `${position.top + (this.appendToBody ? y - 15 : 0)}px`,\n            `${position.left + x - 5}px`\n        );\n\n        const clientWidth = element.clientWidth;\n        const clientHeight = element.clientHeight;\n\n        const marginFromBottom =\n            parseInt(top) + clientHeight + (this.appendToBody ? 0 : y - 15);\n        const marginFromRight = parseInt(left) + clientWidth;\n\n        const windowScrollHeight = wd.innerHeight + wd.scrollY;\n        const windowScrollWidth = wd.innerWidth + wd.scrollX;\n\n        if (marginFromBottom >= windowScrollHeight) {\n            top = `${parseInt(top.replace('px', '')) - clientHeight}px`;\n        }\n\n        if (marginFromRight >= windowScrollWidth) {\n            const marginRight = marginFromRight - windowScrollWidth + 30;\n            left = `${parseInt(left.replace('px', '')) - marginRight}px`;\n        }\n\n        return { top, left };\n    }\n\n    private applyOffset(\n        top: string,\n        left: string\n    ): { top: string; left: string } {\n        if (!this.offset) {\n            return { top, left };\n        }\n\n        const offset = this.offset.split(' ');\n\n        if (!offset[1]) {\n            offset[1] = '0';\n        }\n\n        top = `${parseInt(top.replace('px', '')) + parseInt(offset[0])}px`;\n        left = `${parseInt(left.replace('px', '')) + parseInt(offset[1])}px`;\n\n        return { top, left };\n    }\n\n    public ngOnInit() {\n        const dc = typeof document !== 'undefined' ? document : undefined;\n        if (this.appendToBody) {\n            // append menu element to the body\n            dc.body.appendChild(this.element.nativeElement);\n        }\n    }\n\n    public updateOnChange(dynamic = true) {\n        const element = this.getMenuElement();\n        const position = this.calcPositionOffset(this.position);\n\n        if (position) {\n            this.renderer.setStyle(element, 'top', position.top.toString());\n            this.renderer.setStyle(element, 'left', position.left.toString());\n        }\n\n        // select first item unless user disabled this option\n        if (\n            this.focusFirstElement &&\n            this.items.first &&\n            !this.dropdownState.dropdownState.selectedItem\n        ) {\n            this.dropdownState.dropdownState.select(this.items.first, false);\n        }\n    }\n\n    public ngOnDestroy() {\n        const elem = this.element.nativeElement;\n        elem.parentNode.removeChild(elem);\n\n        if (this.listeners.handleKeypress) {\n            this.listeners.handleKeypress();\n        }\n    }\n}\n","import {\n    HostListener,\n    Component,\n    ContentChild,\n    Output,\n    EventEmitter,\n    Input\n} from '@angular/core';\n\nimport { Ng2DropdownButton } from '../button/ng2-dropdown-button';\nimport { Ng2DropdownMenu } from '../menu/ng2-dropdown-menu';\nimport { DropdownStateService } from '../../services/dropdown-state.service';\nimport { Ng2MenuItem } from '../menu-item/ng2-menu-item';\n\n@Component({\n    selector: 'ng2-dropdown',\n    template: `\n        <div class=\"ng2-dropdown-container\">\n            <ng-content select=\"ng2-dropdown-button\"></ng-content>\n            <ng-content select=\"ng2-dropdown-menu\"></ng-content>\n        </div>\n    `,\n    providers: [DropdownStateService]\n})\nexport class Ng2Dropdown {\n    // get children components\n    @ContentChild(Ng2DropdownButton, { static: true })\n    public button!: Ng2DropdownButton;\n    @ContentChild(Ng2DropdownMenu, { static: true })\n    public menu!: Ng2DropdownMenu;\n\n    @Input() public dynamicUpdate = true;\n\n    // outputs\n    @Output() public onItemClicked: EventEmitter<string> = new EventEmitter<\n        string\n    >();\n    @Output() public onItemSelected: EventEmitter<string> = new EventEmitter<\n        string\n    >();\n    @Output() public onShow: EventEmitter<Ng2Dropdown> = new EventEmitter<\n        Ng2Dropdown\n    >();\n    @Output() public onHide: EventEmitter<Ng2Dropdown> = new EventEmitter<\n        Ng2Dropdown\n    >();\n\n    constructor(private state: DropdownStateService) {}\n\n    public ngOnInit() {\n        this.state.dropdownState.onItemClicked.subscribe(item => {\n            this.onItemClicked.emit(item);\n\n            if (item.preventClose) {\n                return;\n            }\n\n            this.hide.call(this);\n        });\n\n        if (this.button) {\n            this.button.onMenuToggled.subscribe(() => {\n                this.toggleMenu();\n            });\n        }\n\n        this.state.dropdownState.onItemSelected.subscribe(item => {\n            this.onItemSelected.emit(item);\n        });\n\n        this.state.dropdownState.onItemDestroyed.subscribe(\n            (item: Ng2MenuItem) => {\n                let newSelectedItem: Ng2MenuItem | undefined;\n                const items = this.menu.items.toArray();\n\n                if (item !== this.state.dropdownState.selectedItem) {\n                    return;\n                }\n\n                if (this.menu.focusFirstElement) {\n                    newSelectedItem =\n                        item === items[0] && items.length > 1\n                            ? items[1]\n                            : items[0];\n                }\n\n                this.state.dropdownState.select(newSelectedItem);\n            }\n        );\n    }\n\n    /**\n     * @name toggleMenu\n     * @desc toggles menu visibility\n     */\n    public toggleMenu(position = this.button.getPosition()): void {\n        this.state.menuState.isVisible ? this.hide() : this.show(position);\n    }\n\n    /**\n     * - hides dropdown\n     * @name hide\n     */\n    public hide(): void {\n        this.menu.hide();\n        this.onHide.emit(this);\n    }\n\n    /**\n     * - shows dropdown\n     * @name show\n     * @param position\n     */\n    public show(position = this.button.getPosition()): void {\n        this.menu.show(position, this.dynamicUpdate);\n        this.onShow.emit(this);\n    }\n\n    /**\n     * @name scrollListener\n     */\n    @HostListener('window:scroll')\n    public scrollListener() {\n        if (this.button && this.dynamicUpdate) {\n            this.menu.updatePosition(this.button.getPosition(), true);\n        }\n    }\n}\n","import { Ng2Dropdown } from './components/dropdown/ng2-dropdown';\nimport { Ng2DropdownMenu } from './components/menu/ng2-dropdown-menu';\nimport { Ng2DropdownButton } from './components/button/ng2-dropdown-button';\nimport { Ng2MenuItem } from './components/menu-item/ng2-menu-item';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DropdownStateService } from './services/dropdown-state.service';\n\n@NgModule({\n    exports: [\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n        Ng2Dropdown\n    ],\n    declarations: [\n        Ng2Dropdown,\n        Ng2MenuItem,\n        Ng2DropdownButton,\n        Ng2DropdownMenu,\n    ],\n    imports: [\n        CommonModule\n    ]\n})\nexport class Ng2DropdownModule {}\n\nexport {\n    Ng2Dropdown,\n    Ng2DropdownMenu,\n    Ng2MenuItem,\n    Ng2DropdownButton,\n    DropdownStateService\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]},"metadata":{},"sourceType":"module"}