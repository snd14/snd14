{"ast":null,"code":"import _toConsumableArray from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _assertThisInitialized from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _regeneratorRuntime from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/regenerator\";\nimport _defineProperty from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { __decorate, __metadata, __awaiter } from 'tslib';\nimport { Pipe, Injectable, Input, EventEmitter, Output, ViewChild, Component, TemplateRef, HostBinding, HostListener, ElementRef, Renderer2, ChangeDetectorRef, ContentChildren, QueryList, Injector, forwardRef, ContentChild, ViewChildren, NgModule } from '@angular/core';\nimport { FormControl, FormGroup, NG_VALUE_ACCESSOR, ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2Dropdown, Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { first, debounceTime, filter, map } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/forms';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from 'ng2-material-dropdown';\nvar _c0 = [\"input\"];\n\nfunction TagComponent_div_1_ng_template_1_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0, a1) {\n  return {\n    item: a0,\n    index: a1\n  };\n};\n\nfunction TagComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TagComponent_div_1_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵattribute(\"contenteditable\", ctx_r0.editing);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(3, _c1, ctx_r0.model, ctx_r0.index))(\"ngTemplateOutlet\", ctx_r0.template);\n  }\n}\n\nfunction TagComponent_div_2_delete_icon_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"delete-icon\", 8);\n    ɵngcc0.ɵɵlistener(\"click\", function TagComponent_div_2_delete_icon_3_Template_delete_icon_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r5.remove($event);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n}\n\nfunction TagComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"keydown.enter\", function TagComponent_div_2_Template_div_keydown_enter_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.disableEditMode($event);\n    })(\"keydown.escape\", function TagComponent_div_2_Template_div_keydown_escape_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.disableEditMode($event);\n    })(\"click\", function TagComponent_div_2_Template_div_click_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.editing ? $event.stopPropagation() : undefined;\n    })(\"blur\", function TagComponent_div_2_Template_div_blur_1_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.onBlurred($event);\n    });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, TagComponent_div_2_delete_icon_3_Template, 1, 0, \"delete-icon\", 7);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"contenteditable\", ctx_r1.editing)(\"title\", ctx_r1.getDisplayValue(ctx_r1.model));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r1.getDisplayValue(ctx_r1.model), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.isDeleteIconVisible());\n  }\n}\n\nfunction TagComponent_tag_ripple_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tag-ripple\", 9);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"state\", ctx_r2.rippleState);\n    ɵngcc0.ɵɵattribute(\"tabindex\", -1);\n  }\n}\n\nfunction TagInputDropdown_ng2_menu_item_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"span\", 6);\n    ɵngcc0.ɵɵpipe(1, \"highlight\");\n  }\n\n  if (rf & 2) {\n    var item_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind2(1, 1, item_r1[ctx_r4.displayBy], ctx_r4.tagInput.inputForm.value.value), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template(rf, ctx) {}\n\nvar _c2 = function _c2(a0, a1, a2) {\n  return {\n    item: a0,\n    index: a1,\n    last: a2\n  };\n};\n\nfunction TagInputDropdown_ng2_menu_item_2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TagInputDropdown_ng2_menu_item_2_2_ng_template_0_Template, 0, 0, \"ng-template\", 7);\n  }\n\n  if (rf & 2) {\n    var ctx_r8 = ɵngcc0.ɵɵnextContext();\n    var item_r1 = ctx_r8.$implicit;\n    var index_r2 = ctx_r8.index;\n    var last_r3 = ctx_r8.last;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r5.templates.first)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c2, item_r1, index_r2, last_r3));\n  }\n}\n\nfunction TagInputDropdown_ng2_menu_item_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ng2-menu-item\", 3);\n    ɵngcc0.ɵɵtemplate(1, TagInputDropdown_ng2_menu_item_2_span_1_Template, 2, 4, \"span\", 4);\n    ɵngcc0.ɵɵtemplate(2, TagInputDropdown_ng2_menu_item_2_2_Template, 1, 6, undefined, 5);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", item_r1)(\"ngSwitch\", !!ctx_r0.templates.length);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n  }\n}\n\nfunction TagInputComponent_tag_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"tag\", 6);\n    ɵngcc0.ɵɵlistener(\"onSelect\", function TagInputComponent_tag_2_Template_tag_onSelect_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var item_r3 = ctx.$implicit;\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.selectItem(item_r3);\n    })(\"onRemove\", function TagInputComponent_tag_2_Template_tag_onRemove_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var item_r3 = ctx.$implicit;\n      var i_r4 = ctx.index;\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.onRemoveRequested(item_r3, i_r4);\n    })(\"onKeyDown\", function TagInputComponent_tag_2_Template_tag_onKeyDown_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.handleKeydown($event);\n    })(\"onTagEdited\", function TagInputComponent_tag_2_Template_tag_onTagEdited_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.updateEditedTag($event);\n    })(\"onBlur\", function TagInputComponent_tag_2_Template_tag_onBlur_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var i_r4 = ctx.index;\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.onTagBlurred($event, i_r4);\n    })(\"dragstart\", function TagInputComponent_tag_2_Template_tag_dragstart_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var item_r3 = ctx.$implicit;\n      var i_r4 = ctx.index;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.dragZone ? ctx_r11.onDragStarted($event, item_r3, i_r4) : undefined;\n    })(\"drop\", function TagInputComponent_tag_2_Template_tag_drop_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var i_r4 = ctx.index;\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.dragZone ? ctx_r12.onTagDropped($event, i_r4) : undefined;\n    })(\"dragenter\", function TagInputComponent_tag_2_Template_tag_dragenter_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n      return ctx_r13.dragZone ? ctx_r13.onDragOver($event) : undefined;\n    })(\"dragover\", function TagInputComponent_tag_2_Template_tag_dragover_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var i_r4 = ctx.index;\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.dragZone ? ctx_r14.onDragOver($event, i_r4) : undefined;\n    })(\"dragleave\", function TagInputComponent_tag_2_Template_tag_dragleave_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.dragZone ? ctx_r15.dragProvider.onDragEnd() : undefined;\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var item_r3 = ctx.$implicit;\n    var i_r4 = ctx.index;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵpropertyInterpolate(\"draggable\", ctx_r0.editable);\n    ɵngcc0.ɵɵproperty(\"canAddTag\", ctx_r0.isTagValid)(\"disabled\", ctx_r0.disable)(\"@animation\", ctx_r0.animationMetadata)(\"hasRipple\", ctx_r0.ripple)(\"index\", i_r4)(\"removable\", ctx_r0.removable)(\"editable\", ctx_r0.editable)(\"displayBy\", ctx_r0.displayBy)(\"identifyBy\", ctx_r0.identifyBy)(\"template\", !!ctx_r0.hasCustomTemplate() ? ctx_r0.templates.first : undefined)(\"draggable\", ctx_r0.dragZone)(\"model\", item_r3);\n    ɵngcc0.ɵɵattribute(\"tabindex\", 0);\n  }\n}\n\nfunction TagInputComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n  }\n}\n\nfunction TagInputComponent_div_6_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"p\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"span\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var error_r17 = ctx.$implicit;\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(error_r17);\n  }\n}\n\nfunction TagInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, TagInputComponent_div_6_p_1_Template, 3, 1, \"p\", 9);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ctx_r2.theme);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.errors);\n  }\n}\n\nvar _c3 = [\"*\"];\n\nvar escape = function escape(s) {\n  return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n};\n\nvar HighlightPipe = /*#__PURE__*/function () {\n  function HighlightPipe() {\n    _classCallCheck(this, HighlightPipe);\n  }\n\n  _createClass(HighlightPipe, [{\n    key: \"transform\",\n    value:\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    function transform(value, arg) {\n      if (!arg.trim()) {\n        return value;\n      }\n\n      try {\n        var regex = new RegExp(\"(\".concat(escape(arg), \")\"), 'i');\n        return value.replace(regex, '<b>$1</b>');\n      } catch (e) {\n        return value;\n      }\n    }\n  }]);\n\n  return HighlightPipe;\n}();\n\nHighlightPipe.ɵfac = function HighlightPipe_Factory(t) {\n  return new (t || HighlightPipe)();\n};\n\nHighlightPipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n  name: \"highlight\",\n  type: HighlightPipe,\n  pure: true\n});\n/*\n** constants and default values for <tag-input>\n */\n\nvar PLACEHOLDER = '+ Tag';\nvar SECONDARY_PLACEHOLDER = 'Enter a new tag';\nvar KEYDOWN = 'keydown';\nvar KEYUP = 'keyup';\nvar MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\nvar ACTIONS_KEYS = {\n  DELETE: 'DELETE',\n  SWITCH_PREV: 'SWITCH_PREV',\n  SWITCH_NEXT: 'SWITCH_NEXT',\n  TAB: 'TAB'\n};\nvar KEY_PRESS_ACTIONS = {\n  8: ACTIONS_KEYS.DELETE,\n  37: ACTIONS_KEYS.SWITCH_PREV,\n  39: ACTIONS_KEYS.SWITCH_NEXT,\n  9: ACTIONS_KEYS.TAB\n};\nvar DRAG_AND_DROP_KEY = 'Text';\nvar NEXT = 'NEXT';\nvar PREV = 'PREV';\n\nvar DragProvider = /*#__PURE__*/function () {\n  function DragProvider() {\n    _classCallCheck(this, DragProvider);\n\n    this.state = {\n      dragging: false,\n      dropping: false,\n      index: undefined\n    };\n  }\n  /**\n   * @name setDraggedItem\n   * @param event\n   * @param tag\n   */\n\n\n  _createClass(DragProvider, [{\n    key: \"setDraggedItem\",\n    value: function setDraggedItem(event, tag) {\n      if (event && event.dataTransfer) {\n        event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n      }\n    }\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n\n  }, {\n    key: \"getDraggedItem\",\n    value: function getDraggedItem(event) {\n      if (event && event.dataTransfer) {\n        var data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n\n        try {\n          return JSON.parse(data);\n        } catch (_a) {\n          return;\n        }\n      }\n    }\n    /**\n     * @name setSender\n     * @param sender\n     */\n\n  }, {\n    key: \"setSender\",\n    value: function setSender(sender) {\n      this.sender = sender;\n    }\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n\n  }, {\n    key: \"setReceiver\",\n    value: function setReceiver(receiver) {\n      this.receiver = receiver;\n    }\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n\n  }, {\n    key: \"onTagDropped\",\n    value: function onTagDropped(tag, indexDragged, indexDropped) {\n      this.onDragEnd();\n      this.sender.onRemoveRequested(tag, indexDragged);\n      this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n    /**\n     * @name setState\n     * @param state\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      this.state = Object.assign({}, this.state, state);\n    }\n    /**\n     * @name getState\n     * @param key\n     */\n\n  }, {\n    key: \"getState\",\n    value: function getState(key) {\n      return key ? this.state[key] : this.state;\n    }\n    /**\n     * @name onDragEnd\n     */\n\n  }, {\n    key: \"onDragEnd\",\n    value: function onDragEnd() {\n      this.setState({\n        dragging: false,\n        dropping: false,\n        index: undefined\n      });\n    }\n  }]);\n\n  return DragProvider;\n}();\n\nDragProvider.ɵfac = function DragProvider_Factory(t) {\n  return new (t || DragProvider)();\n};\n\nDragProvider.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: DragProvider,\n  factory: function factory(t) {\n    return DragProvider.ɵfac(t);\n  }\n});\nvar defaults = {\n  tagInput: {\n    separatorKeys: [],\n    separatorKeyCodes: [],\n    maxItems: Infinity,\n    placeholder: PLACEHOLDER,\n    secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n    validators: [],\n    asyncValidators: [],\n    onlyFromAutocomplete: false,\n    errorMessages: {},\n    theme: '',\n    onTextChangeDebounce: 250,\n    inputId: null,\n    inputClass: '',\n    clearOnBlur: false,\n    hideForm: false,\n    addOnBlur: false,\n    addOnPaste: false,\n    pasteSplitPattern: ',',\n    blinkIfDupe: true,\n    removable: true,\n    editable: false,\n    allowDupes: false,\n    modelAsStrings: false,\n    trimTags: true,\n    ripple: true,\n    tabIndex: '',\n    disable: false,\n    dragZone: '',\n    onRemoving: undefined,\n    onAdding: undefined,\n    displayBy: 'display',\n    identifyBy: 'value',\n    animationDuration: {\n      enter: '250ms',\n      leave: '150ms'\n    }\n  },\n  dropdown: {\n    displayBy: 'display',\n    identifyBy: 'value',\n    appendToBody: true,\n    offset: '50 0',\n    focusFirstElement: false,\n    showDropdownIfEmpty: false,\n    minimumTextLength: 1,\n    limitItemsTo: Infinity,\n    keepOpen: true,\n    dynamicUpdate: true,\n    zIndex: 1000,\n    matchingFn: matchingFn\n  }\n};\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\n\nfunction matchingFn(value, target) {\n  var targetValue = target[this.displayBy].toString();\n  return targetValue && targetValue.toLowerCase().indexOf(value.toLowerCase()) >= 0;\n}\n\nvar OptionsProvider = /*#__PURE__*/function () {\n  function OptionsProvider() {\n    _classCallCheck(this, OptionsProvider);\n  }\n\n  _createClass(OptionsProvider, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      OptionsProvider.defaults.tagInput = Object.assign({}, defaults.tagInput, options.tagInput);\n      OptionsProvider.defaults.dropdown = Object.assign({}, defaults.dropdown, options.dropdown);\n    }\n  }]);\n\n  return OptionsProvider;\n}();\n\nOptionsProvider.defaults = defaults;\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\nvar TagInputAccessor = /*#__PURE__*/function () {\n  function TagInputAccessor() {\n    _classCallCheck(this, TagInputAccessor);\n\n    this._items = [];\n    /**\n     * @name displayBy\n     */\n\n    this.displayBy = OptionsProvider.defaults.tagInput.displayBy;\n    /**\n     * @name identifyBy\n     */\n\n    this.identifyBy = OptionsProvider.defaults.tagInput.identifyBy;\n  }\n\n  _createClass(TagInputAccessor, [{\n    key: \"items\",\n    get: function get() {\n      return this._items;\n    },\n    set: function set(items) {\n      this._items = items;\n\n      this._onChangeCallback(this._items);\n    }\n  }, {\n    key: \"onTouched\",\n    value: function onTouched() {\n      this._onTouchedCallback();\n    }\n  }, {\n    key: \"writeValue\",\n    value: function writeValue(items) {\n      this._items = items || [];\n    }\n  }, {\n    key: \"registerOnChange\",\n    value: function registerOnChange(fn) {\n      this._onChangeCallback = fn;\n    }\n  }, {\n    key: \"registerOnTouched\",\n    value: function registerOnTouched(fn) {\n      this._onTouchedCallback = fn;\n    }\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n\n  }, {\n    key: \"getItemValue\",\n    value: function getItemValue(item) {\n      var fromDropdown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n      return isObject(item) ? item[property] : item;\n    }\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n\n  }, {\n    key: \"getItemDisplay\",\n    value: function getItemDisplay(item) {\n      var fromDropdown = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n      return isObject(item) ? item[property] : item;\n    }\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n\n  }, {\n    key: \"getItemsWithout\",\n    value: function getItemsWithout(index) {\n      return this.items.filter(function (item, position) {\n        return position !== index;\n      });\n    }\n  }]);\n\n  return TagInputAccessor;\n}();\n\nTagInputAccessor.ɵfac = function TagInputAccessor_Factory(t) {\n  return new (t || TagInputAccessor)();\n};\n\nTagInputAccessor.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: TagInputAccessor,\n  inputs: {\n    displayBy: \"displayBy\",\n    identifyBy: \"identifyBy\"\n  }\n});\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputAccessor.prototype, \"displayBy\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputAccessor.prototype, \"identifyBy\", void 0);\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\n\n\nfunction listen(listenerType, action) {\n  var condition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n  // if the event provided does not exist, throw an error\n  if (!this.listeners.hasOwnProperty(listenerType)) {\n    throw new Error('The event entered may be wrong');\n  } // if a condition is present and is false, exit early\n\n\n  if (!condition) {\n    return;\n  } // fire listener\n\n\n  this.listeners[listenerType].push(action);\n}\n\nvar TagInputForm = /*#__PURE__*/function () {\n  function TagInputForm() {\n    _classCallCheck(this, TagInputForm);\n\n    /**\n     * @name onSubmit\n     */\n    this.onSubmit = new EventEmitter();\n    /**\n     * @name onBlur\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * @name onFocus\n     */\n\n    this.onFocus = new EventEmitter();\n    /**\n     * @name onKeyup\n     */\n\n    this.onKeyup = new EventEmitter();\n    /**\n     * @name onKeydown\n     */\n\n    this.onKeydown = new EventEmitter();\n    /**\n     * @name inputTextChange\n     */\n\n    this.inputTextChange = new EventEmitter();\n    /**\n     * @name validators\n     */\n\n    this.validators = [];\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n\n    this.asyncValidators = [];\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n\n    this.tabindex = '';\n    /**\n     * @name disabled\n     */\n\n    this.disabled = false;\n    this.item = new FormControl({\n      value: '',\n      disabled: this.disabled\n    });\n  }\n  /**\n   * @name inputText\n   */\n\n\n  _createClass(TagInputForm, [{\n    key: \"inputText\",\n    get: function get() {\n      return this.item.value;\n    }\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    ,\n    set: function set(text) {\n      this.item.setValue(text);\n      this.inputTextChange.emit(text);\n    }\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      this.item.setValidators(this.validators);\n      this.item.setAsyncValidators(this.asyncValidators); // creating form\n\n      this.form = new FormGroup({\n        item: this.item\n      });\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.disabled && !changes.disabled.firstChange) {\n        if (changes.disabled.currentValue) {\n          this.form.controls['item'].disable();\n        } else {\n          this.form.controls['item'].enable();\n        }\n      }\n    }\n    /**\n     * @name value\n     */\n\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.form.get('item');\n    }\n    /**\n     * @name isInputFocused\n     */\n\n  }, {\n    key: \"isInputFocused\",\n    value: function isInputFocused() {\n      var doc = typeof document !== 'undefined' ? document : undefined;\n      return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n\n  }, {\n    key: \"getErrorMessages\",\n    value: function getErrorMessages(messages) {\n      var _this = this;\n\n      return Object.keys(messages).filter(function (err) {\n        return _this.value.hasError(err);\n      }).map(function (err) {\n        return messages[err];\n      });\n    }\n    /**\n     * @name hasErrors\n     */\n\n  }, {\n    key: \"hasErrors\",\n    value: function hasErrors() {\n      var _this$form = this.form,\n          dirty = _this$form.dirty,\n          value = _this$form.value,\n          valid = _this$form.valid;\n      return dirty && value.item && !valid;\n    }\n    /**\n     * @name focus\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.input.nativeElement.focus();\n    }\n    /**\n     * @name blur\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.input.nativeElement.blur();\n    }\n    /**\n     * @name getElementPosition\n     */\n\n  }, {\n    key: \"getElementPosition\",\n    value: function getElementPosition() {\n      return this.input.nativeElement.getBoundingClientRect();\n    }\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var input = this.input.nativeElement;\n      input.parentElement.removeChild(input);\n    }\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown($event) {\n      this.inputText = this.value.value;\n\n      if ($event.key === 'Enter') {\n        this.submit($event);\n      } else {\n        return this.onKeydown.emit($event);\n      }\n    }\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp($event) {\n      this.inputText = this.value.value;\n      return this.onKeyup.emit($event);\n    }\n    /**\n     * @name submit\n     */\n\n  }, {\n    key: \"submit\",\n    value: function submit($event) {\n      $event.preventDefault();\n      this.onSubmit.emit($event);\n    }\n  }]);\n\n  return TagInputForm;\n}();\n\nTagInputForm.ɵfac = function TagInputForm_Factory(t) {\n  return new (t || TagInputForm)();\n};\n\nTagInputForm.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TagInputForm,\n  selectors: [[\"tag-input-form\"]],\n  viewQuery: function TagInputForm_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(_c0, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.input = _t.first);\n    }\n  },\n  inputs: {\n    validators: \"validators\",\n    asyncValidators: \"asyncValidators\",\n    tabindex: \"tabindex\",\n    disabled: \"disabled\",\n    inputText: \"inputText\",\n    placeholder: \"placeholder\",\n    inputId: \"inputId\",\n    inputClass: \"inputClass\"\n  },\n  outputs: {\n    onSubmit: \"onSubmit\",\n    onBlur: \"onBlur\",\n    onFocus: \"onFocus\",\n    onKeyup: \"onKeyup\",\n    onKeydown: \"onKeydown\",\n    inputTextChange: \"inputTextChange\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"autocomplete\", \"off\", \"minlength\", \"1\", \"formControlName\", \"item\", 1, \"ng2-tag-input__text-input\", 3, \"tabindex\", \"ngClass\", \"focus\", \"blur\", \"keydown\", \"keyup\"], [\"input\", \"\"]],\n  template: function TagInputForm_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"form\", 0);\n      ɵngcc0.ɵɵlistener(\"ngSubmit\", function TagInputForm_Template_form_ngSubmit_0_listener($event) {\n        return ctx.submit($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"input\", 1, 2);\n      ɵngcc0.ɵɵlistener(\"focus\", function TagInputForm_Template_input_focus_1_listener($event) {\n        return ctx.onFocus.emit($event);\n      })(\"blur\", function TagInputForm_Template_input_blur_1_listener($event) {\n        return ctx.onBlur.emit($event);\n      })(\"keydown\", function TagInputForm_Template_input_keydown_1_listener($event) {\n        return ctx.onKeyDown($event);\n      })(\"keyup\", function TagInputForm_Template_input_keyup_1_listener($event) {\n        return ctx.onKeyUp($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"formGroup\", ctx.form);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵpropertyInterpolate(\"tabindex\", ctx.disabled ? -1 : ctx.tabindex ? ctx.tabindex : 0);\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.inputClass);\n      ɵngcc0.ɵɵattribute(\"id\", ctx.inputId)(\"placeholder\", ctx.placeholder)(\"aria-label\", ctx.placeholder)(\"tabindex\", ctx.tabindex)(\"disabled\", ctx.disabled ? ctx.disabled : null);\n    }\n  },\n  directives: [ɵngcc1.ɵangular_packages_forms_forms_y, ɵngcc1.NgControlStatusGroup, ɵngcc1.FormGroupDirective, ɵngcc1.DefaultValueAccessor, ɵngcc1.MinLengthValidator, ɵngcc1.NgControlStatus, ɵngcc1.FormControlName, ɵngcc2.NgClass],\n  styles: [\".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.ng2-tag-input__text-input[_ngcontent-%COMP%]{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.ng2-tag-input__text-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input__text-input[disabled=true][_ngcontent-%COMP%]{opacity:.5;background:#fff}\"]\n});\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputForm.prototype, \"onSubmit\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputForm.prototype, \"onBlur\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputForm.prototype, \"onFocus\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputForm.prototype, \"onKeyup\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputForm.prototype, \"onKeydown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputForm.prototype, \"inputTextChange\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputForm.prototype, \"placeholder\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], TagInputForm.prototype, \"validators\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], TagInputForm.prototype, \"asyncValidators\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputForm.prototype, \"inputId\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputForm.prototype, \"inputClass\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputForm.prototype, \"tabindex\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputForm.prototype, \"disabled\", void 0);\n\n__decorate([ViewChild('input', {\n  static: false\n}), __metadata(\"design:type\", Object)], TagInputForm.prototype, \"input\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], TagInputForm.prototype, \"inputText\", null);\n\nvar TagRipple = function TagRipple() {\n  _classCallCheck(this, TagRipple);\n\n  this.state = 'none';\n};\n\nTagRipple.ɵfac = function TagRipple_Factory(t) {\n  return new (t || TagRipple)();\n};\n\nTagRipple.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TagRipple,\n  selectors: [[\"tag-ripple\"]],\n  inputs: {\n    state: \"state\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[1, \"tag-ripple\"]],\n  template: function TagRipple_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelement(0, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"@ink\", ctx.state);\n    }\n  },\n  styles: [\"[_nghost-%COMP%] {\\n            width: 100%;\\n            height: 100%;\\n            left: 0;\\n            overflow: hidden;\\n            position: absolute;\\n        }\\n\\n        .tag-ripple[_ngcontent-%COMP%] {\\n            background: rgba(0, 0, 0, 0.1);\\n            top: 50%;\\n            left: 50%;\\n            height: 100%;\\n            transform: translate(-50%, -50%);\\n            position: absolute;\\n        }\"],\n  data: {\n    animation: [trigger('ink', [state('none', style({\n      width: 0,\n      opacity: 0\n    })), transition('none => clicked', [animate(300, keyframes([style({\n      opacity: 1,\n      offset: 0,\n      width: '30%',\n      borderRadius: '100%'\n    }), style({\n      opacity: 1,\n      offset: 0.5,\n      width: '50%'\n    }), style({\n      opacity: 0.5,\n      offset: 1,\n      width: '100%',\n      borderRadius: '16px'\n    })]))])])]\n  }\n});\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagRipple.prototype, \"state\", void 0); // mocking navigator\n\n\nvar navigator = typeof window !== 'undefined' ? window.navigator : {\n  userAgent: 'Chrome',\n  vendor: 'Google Inc'\n};\nvar isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\nvar TagComponent = /*#__PURE__*/function () {\n  function TagComponent(element, renderer, cdRef) {\n    _classCallCheck(this, TagComponent);\n\n    this.element = element;\n    this.renderer = renderer;\n    this.cdRef = cdRef;\n    /**\n     * @name disabled\n     */\n\n    this.disabled = false;\n    /**\n     * @name onSelect\n     */\n\n    this.onSelect = new EventEmitter();\n    /**\n     * @name onRemove\n     */\n\n    this.onRemove = new EventEmitter();\n    /**\n     * @name onBlur\n     */\n\n    this.onBlur = new EventEmitter();\n    /**\n     * @name onKeyDown\n     */\n\n    this.onKeyDown = new EventEmitter();\n    /**\n     * @name onTagEdited\n     */\n\n    this.onTagEdited = new EventEmitter();\n    /**\n     * @name editing\n     */\n\n    this.editing = false;\n    /**\n     * @name rippleState\n     */\n\n    this.rippleState = 'none';\n  }\n  /**\n   * @name readonly {boolean}\n   */\n\n\n  _createClass(TagComponent, [{\n    key: \"readonly\",\n    get: function get() {\n      return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n    /**\n     * @name select\n     */\n\n  }, {\n    key: \"select\",\n    value: function select($event) {\n      if (this.readonly || this.disabled) {\n        return;\n      }\n\n      if ($event) {\n        $event.stopPropagation();\n      }\n\n      this.focus();\n      this.onSelect.emit(this.model);\n    }\n    /**\n     * @name remove\n     */\n\n  }, {\n    key: \"remove\",\n    value: function remove($event) {\n      $event.stopPropagation();\n      this.onRemove.emit(this);\n    }\n    /**\n     * @name focus\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      this.element.nativeElement.focus();\n    }\n  }, {\n    key: \"move\",\n    value: function move() {\n      this.moving = true;\n    }\n    /**\n     * @name keydown\n     * @param event\n     */\n\n  }, {\n    key: \"keydown\",\n    value: function keydown(event) {\n      if (this.editing) {\n        if (event.keyCode === 13) {\n          return this.disableEditMode(event);\n        }\n      } else {\n        this.onKeyDown.emit({\n          event: event,\n          model: this.model\n        });\n      }\n    }\n    /**\n     * @name blink\n     */\n\n  }, {\n    key: \"blink\",\n    value: function blink() {\n      var classList = this.element.nativeElement.classList;\n      classList.add('blink');\n      setTimeout(function () {\n        return classList.remove('blink');\n      }, 50);\n    }\n    /**\n     * @name toggleEditMode\n     */\n\n  }, {\n    key: \"toggleEditMode\",\n    value: function toggleEditMode() {\n      if (this.editable) {\n        return this.editing ? undefined : this.activateEditMode();\n      }\n    }\n    /**\n     * @name onBlurred\n     * @param event\n     */\n\n  }, {\n    key: \"onBlurred\",\n    value: function onBlurred(event) {\n      // Checks if it is editable first before handeling the onBlurred event in order to prevent\n      // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n      if (!this.editable) {\n        return;\n      }\n\n      this.disableEditMode();\n      var value = event.target.innerText;\n      var result = typeof this.model === 'string' ? value : Object.assign({}, this.model, _defineProperty({}, this.displayBy, value));\n      this.onBlur.emit(result);\n    }\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n\n  }, {\n    key: \"getDisplayValue\",\n    value: function getDisplayValue(item) {\n      return typeof item === 'string' ? item : item[this.displayBy];\n    }\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n\n  }, {\n    key: \"isRippleVisible\",\n    get: function get() {\n      return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n\n  }, {\n    key: \"disableEditMode\",\n    value: function disableEditMode($event) {\n      var classList = this.element.nativeElement.classList;\n      var input = this.getContentEditableText();\n      this.editing = false;\n      classList.remove('tag--editing');\n\n      if (!input) {\n        this.setContentEditableText(this.model);\n        return;\n      }\n\n      this.storeNewValue(input);\n      this.cdRef.detectChanges();\n\n      if ($event) {\n        $event.preventDefault();\n      }\n    }\n    /**\n     * @name isDeleteIconVisible\n     */\n\n  }, {\n    key: \"isDeleteIconVisible\",\n    value: function isDeleteIconVisible() {\n      return !this.readonly && !this.disabled && this.removable && !this.editing;\n    }\n    /**\n     * @name getContentEditableText\n     */\n\n  }, {\n    key: \"getContentEditableText\",\n    value: function getContentEditableText() {\n      var input = this.getContentEditable();\n      return input ? input.innerText.trim() : '';\n    }\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n\n  }, {\n    key: \"setContentEditableText\",\n    value: function setContentEditableText(model) {\n      var input = this.getContentEditable();\n      var value = this.getDisplayValue(model);\n      input.innerText = value;\n    }\n    /**\n     * @name\n     */\n\n  }, {\n    key: \"activateEditMode\",\n    value: function activateEditMode() {\n      var classList = this.element.nativeElement.classList;\n      classList.add('tag--editing');\n      this.editing = true;\n    }\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n\n  }, {\n    key: \"storeNewValue\",\n    value: function storeNewValue(input) {\n      var _this2 = this,\n          _ref;\n\n      var exists = function exists(tag) {\n        return typeof tag === 'string' ? tag === input : tag[_this2.displayBy] === input;\n      };\n\n      var hasId = function hasId() {\n        return _this2.model[_this2.identifyBy] !== _this2.model[_this2.displayBy];\n      }; // if the value changed, replace the value in the model\n\n\n      if (exists(this.model)) {\n        return;\n      }\n\n      var model = typeof this.model === 'string' ? input : (_ref = {\n        index: this.index\n      }, _defineProperty(_ref, this.identifyBy, hasId() ? this.model[this.identifyBy] : input), _defineProperty(_ref, this.displayBy, input), _ref);\n\n      if (this.canAddTag(model)) {\n        this.onTagEdited.emit({\n          tag: model,\n          index: this.index\n        });\n      } else {\n        this.setContentEditableText(this.model);\n      }\n    }\n    /**\n     * @name getContentEditable\n     */\n\n  }, {\n    key: \"getContentEditable\",\n    value: function getContentEditable() {\n      return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n  }]);\n\n  return TagComponent;\n}();\n\nTagComponent.ɵfac = function TagComponent_Factory(t) {\n  return new (t || TagComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef));\n};\n\nTagComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TagComponent,\n  selectors: [[\"tag\"]],\n  viewQuery: function TagComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TagRipple, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function TagComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"keydown\", function TagComponent_keydown_HostBindingHandler($event) {\n        return ctx.keydown($event);\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"moving\", ctx.moving);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    model: \"model\",\n    removable: \"removable\",\n    editable: \"editable\",\n    template: \"template\",\n    displayBy: \"displayBy\",\n    identifyBy: \"identifyBy\",\n    index: \"index\",\n    hasRipple: \"hasRipple\",\n    canAddTag: \"canAddTag\"\n  },\n  outputs: {\n    onSelect: \"onSelect\",\n    onRemove: \"onRemove\",\n    onBlur: \"onBlur\",\n    onKeyDown: \"onKeyDown\",\n    onTagEdited: \"onTagEdited\"\n  },\n  decls: 4,\n  vars: 8,\n  consts: [[3, \"ngSwitch\", \"click\", \"dblclick\", \"mousedown\", \"mouseup\"], [4, \"ngSwitchCase\"], [\"class\", \"tag-wrapper\", 4, \"ngSwitchCase\"], [3, \"state\", 4, \"ngIf\"], [3, \"ngTemplateOutletContext\", \"ngTemplateOutlet\"], [1, \"tag-wrapper\"], [\"spellcheck\", \"false\", 1, \"tag__text\", \"inline\", 3, \"keydown.enter\", \"keydown.escape\", \"click\", \"blur\"], [\"aria-label\", \"Remove tag\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"aria-label\", \"Remove tag\", \"role\", \"button\", 3, \"click\"], [3, \"state\"]],\n  template: function TagComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TagComponent_Template_div_click_0_listener($event) {\n        return ctx.select($event);\n      })(\"dblclick\", function TagComponent_Template_div_dblclick_0_listener() {\n        return ctx.toggleEditMode();\n      })(\"mousedown\", function TagComponent_Template_div_mousedown_0_listener() {\n        return ctx.rippleState = \"clicked\";\n      })(\"mouseup\", function TagComponent_Template_div_mouseup_0_listener() {\n        return ctx.rippleState = \"none\";\n      });\n      ɵngcc0.ɵɵtemplate(1, TagComponent_div_1_Template, 2, 6, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, TagComponent_div_2_Template, 4, 4, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, TagComponent_tag_ripple_3_Template, 1, 2, \"tag-ripple\", 3);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n      ɵngcc0.ɵɵproperty(\"ngSwitch\", !!ctx.template);\n      ɵngcc0.ɵɵattribute(\"tabindex\", -1)(\"aria-label\", ctx.getDisplayValue(ctx.model));\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngSwitchCase\", false);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isRippleVisible);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc2.NgIf, ɵngcc2.NgTemplateOutlet, DeleteIconComponent, TagRipple];\n  },\n  styles: [\"[_nghost-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%], [_nghost-%COMP%] > div[_ngcontent-%COMP%]:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}[_nghost-%COMP%]{max-width:400px}.blink[_nghost-%COMP%]{-webkit-animation:.3s ease-in-out forwards blink;animation:.3s ease-in-out forwards blink}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}[_nghost-%COMP%]   .disabled[_ngcontent-%COMP%]{cursor:not-allowed}[_nghost-%COMP%]   [contenteditable=true][_ngcontent-%COMP%]{outline:0}.tag-wrapper[_ngcontent-%COMP%]{flex-direction:row;display:flex}.tag__text[_ngcontent-%COMP%]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\"]\n});\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagComponent.prototype, \"model\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagComponent.prototype, \"removable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagComponent.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", TemplateRef)], TagComponent.prototype, \"template\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagComponent.prototype, \"displayBy\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagComponent.prototype, \"identifyBy\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], TagComponent.prototype, \"index\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagComponent.prototype, \"hasRipple\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagComponent.prototype, \"disabled\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Function)], TagComponent.prototype, \"canAddTag\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagComponent.prototype, \"onSelect\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagComponent.prototype, \"onRemove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagComponent.prototype, \"onBlur\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagComponent.prototype, \"onKeyDown\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagComponent.prototype, \"onTagEdited\", void 0);\n\n__decorate([HostBinding('class.moving'), __metadata(\"design:type\", Boolean)], TagComponent.prototype, \"moving\", void 0);\n\n__decorate([ViewChild(TagRipple, {\n  static: false\n}), __metadata(\"design:type\", TagRipple)], TagComponent.prototype, \"ripple\", void 0);\n\n__decorate([HostListener('keydown', ['$event']), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [Object]), __metadata(\"design:returntype\", void 0)], TagComponent.prototype, \"keydown\", null);\n\nTagComponent = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2, ChangeDetectorRef])], TagComponent);\n/**\n * @name animations\n */\n\nvar animations = [trigger('animation', [state('in', style({\n  opacity: 1\n})), state('out', style({\n  opacity: 0\n})), transition(':enter', [animate('{{ enter }}', keyframes([style({\n  opacity: 0,\n  offset: 0,\n  transform: 'translate(0px, 20px)'\n}), style({\n  opacity: 0.3,\n  offset: 0.3,\n  transform: 'translate(0px, -10px)'\n}), style({\n  opacity: 0.5,\n  offset: 0.5,\n  transform: 'translate(0px, 0px)'\n}), style({\n  opacity: 0.75,\n  offset: 0.75,\n  transform: 'translate(0px, 5px)'\n}), style({\n  opacity: 1,\n  offset: 1,\n  transform: 'translate(0px, 0px)'\n})]))]), transition(':leave', [animate('{{ leave }}', keyframes([style({\n  opacity: 1,\n  transform: 'translateX(0)',\n  offset: 0\n}), style({\n  opacity: 1,\n  transform: 'translateX(-15px)',\n  offset: 0.7\n}), style({\n  opacity: 0,\n  transform: 'translateX(100%)',\n  offset: 1.0\n})]))])])];\n\nvar TagInputDropdown = /*#__PURE__*/function () {\n  function TagInputDropdown(injector) {\n    var _this3 = this;\n\n    _classCallCheck(this, TagInputDropdown);\n\n    this.injector = injector;\n    /**\n     * @name offset\n     */\n\n    this.offset = defaults.dropdown.offset;\n    /**\n     * @name focusFirstElement\n     */\n\n    this.focusFirstElement = defaults.dropdown.focusFirstElement;\n    /**\n     * - show autocomplete dropdown if the value of input is empty\n     * @name showDropdownIfEmpty\n     */\n\n    this.showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n    /**\n     * - desc minimum text length in order to display the autocomplete dropdown\n     * @name minimumTextLength\n     */\n\n    this.minimumTextLength = defaults.dropdown.minimumTextLength;\n    /**\n     * - number of items to display in the autocomplete dropdown\n     * @name limitItemsTo\n     */\n\n    this.limitItemsTo = defaults.dropdown.limitItemsTo;\n    /**\n     * @name displayBy\n     */\n\n    this.displayBy = defaults.dropdown.displayBy;\n    /**\n     * @name identifyBy\n     */\n\n    this.identifyBy = defaults.dropdown.identifyBy;\n    /**\n     * @description a function a developer can use to implement custom matching for the autocomplete\n     * @name matchingFn\n     */\n\n    this.matchingFn = defaults.dropdown.matchingFn;\n    /**\n     * @name appendToBody\n     */\n\n    this.appendToBody = defaults.dropdown.appendToBody;\n    /**\n     * @name keepOpen\n     * @description option to leave dropdown open when adding a new item\n     */\n\n    this.keepOpen = defaults.dropdown.keepOpen;\n    /**\n     * @name dynamicUpdate\n     */\n\n    this.dynamicUpdate = defaults.dropdown.dynamicUpdate;\n    /**\n     * @name zIndex\n     */\n\n    this.zIndex = defaults.dropdown.zIndex;\n    /**\n     * list of items that match the current value of the input (for autocomplete)\n     * @name items\n     */\n\n    this.items = [];\n    /**\n     * @name tagInput\n     */\n\n    this.tagInput = this.injector.get(TagInputComponent);\n    /**\n     * @name _autocompleteItems\n     */\n\n    this._autocompleteItems = [];\n    /**\n     *\n     * @name show\n     */\n\n    this.show = function () {\n      var maxItemsReached = _this3.tagInput.items.length === _this3.tagInput.maxItems;\n\n      var value = _this3.getFormValue();\n\n      var hasMinimumText = value.trim().length >= _this3.minimumTextLength;\n\n      var position = _this3.calculatePosition();\n\n      var items = _this3.getMatchingItems(value);\n\n      var hasItems = items.length > 0;\n      var isHidden = _this3.isVisible === false;\n      var showDropdownIfEmpty = _this3.showDropdownIfEmpty && hasItems && !value;\n      var isDisabled = _this3.tagInput.disable;\n      var shouldShow = isHidden && (hasItems && hasMinimumText || showDropdownIfEmpty);\n      var shouldHide = _this3.isVisible && !hasItems;\n\n      if (_this3.autocompleteObservable && hasMinimumText) {\n        return _this3.getItemsFromObservable(value);\n      }\n\n      if (!_this3.showDropdownIfEmpty && !value || maxItemsReached || isDisabled) {\n        return _this3.dropdown.hide();\n      }\n\n      _this3.setItems(items);\n\n      if (shouldShow) {\n        _this3.dropdown.show(position);\n      } else if (shouldHide) {\n        _this3.hide();\n      }\n    };\n    /**\n     * @name requestAdding\n     * @param item {Ng2MenuItem}\n     */\n\n\n    this.requestAdding = function (item) {\n      return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var tag;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tag = this.createTagModel(item);\n                _context.next = 3;\n                return this.tagInput.onAddingRequested(true, tag).catch(function () {});\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    };\n    /**\n     * @name resetItems\n     */\n\n\n    this.resetItems = function () {\n      _this3.items = [];\n    };\n    /**\n     * @name getItemsFromObservable\n     * @param text\n     */\n\n\n    this.getItemsFromObservable = function (text) {\n      _this3.setLoadingState(true);\n\n      var subscribeFn = function subscribeFn(data) {\n        // hide loading animation\n        _this3.setLoadingState(false) // add items\n        .populateItems(data);\n\n        _this3.setItems(_this3.getMatchingItems(text));\n\n        if (_this3.items.length) {\n          _this3.dropdown.show(_this3.calculatePosition());\n        } else {\n          _this3.dropdown.hide();\n        }\n      };\n\n      _this3.autocompleteObservable(text).pipe(first()).subscribe(subscribeFn, function () {\n        return _this3.setLoadingState(false);\n      });\n    };\n  }\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n\n\n  _createClass(TagInputDropdown, [{\n    key: \"autocompleteItems\",\n    get:\n    /**\n     * @name autocompleteItems\n     * @desc array of items that will populate the autocomplete\n     */\n    function get() {\n      var _this4 = this;\n\n      var items = this._autocompleteItems;\n\n      if (!items) {\n        return [];\n      }\n\n      return items.map(function (item) {\n        var _ref2;\n\n        return typeof item === 'string' ? (_ref2 = {}, _defineProperty(_ref2, _this4.displayBy, item), _defineProperty(_ref2, _this4.identifyBy, item), _ref2) : item;\n      });\n    }\n    /**\n     * @name ngAfterviewInit\n     */\n    ,\n    set: function set(items) {\n      this._autocompleteItems = items;\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this5 = this;\n\n      this.onItemClicked().subscribe(function (item) {\n        _this5.requestAdding(item);\n      }); // reset itemsMatching array when the dropdown is hidden\n\n      this.onHide().subscribe(this.resetItems);\n      var DEBOUNCE_TIME = 200;\n      var KEEP_OPEN = this.keepOpen;\n      this.tagInput.onTextChange.asObservable().pipe(debounceTime(DEBOUNCE_TIME), filter(function (value) {\n        if (KEEP_OPEN === false) {\n          return value.length > 0;\n        }\n\n        return true;\n      })).subscribe(this.show);\n    }\n    /**\n     * @name updatePosition\n     */\n\n  }, {\n    key: \"updatePosition\",\n    value: function updatePosition() {\n      var position = this.tagInput.inputForm.getElementPosition();\n      this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n    }\n    /**\n     * @name isVisible\n     */\n\n  }, {\n    key: \"isVisible\",\n    get: function get() {\n      return this.dropdown.menu.dropdownState.menuState.isVisible;\n    }\n    /**\n     * @name onHide\n     */\n\n  }, {\n    key: \"onHide\",\n    value: function onHide() {\n      return this.dropdown.onHide;\n    }\n    /**\n     * @name onItemClicked\n     */\n\n  }, {\n    key: \"onItemClicked\",\n    value: function onItemClicked() {\n      return this.dropdown.onItemClicked;\n    }\n    /**\n     * @name selectedItem\n     */\n\n  }, {\n    key: \"selectedItem\",\n    get: function get() {\n      return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n    }\n    /**\n     * @name state\n     */\n\n  }, {\n    key: \"state\",\n    get: function get() {\n      return this.dropdown.menu.dropdownState;\n    }\n    /**\n     * @name hide\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.resetItems();\n      this.dropdown.hide();\n    }\n    /**\n     * @name scrollListener\n     */\n\n  }, {\n    key: \"scrollListener\",\n    value: function scrollListener() {\n      if (!this.isVisible || !this.dynamicUpdate) {\n        return;\n      }\n\n      this.updatePosition();\n    }\n    /**\n     * @name onWindowBlur\n     */\n\n  }, {\n    key: \"onWindowBlur\",\n    value: function onWindowBlur() {\n      this.dropdown.hide();\n    }\n    /**\n     * @name getFormValue\n     */\n\n  }, {\n    key: \"getFormValue\",\n    value: function getFormValue() {\n      var formValue = this.tagInput.formValue;\n      return formValue ? formValue.toString().trim() : '';\n    }\n    /**\n     * @name calculatePosition\n     */\n\n  }, {\n    key: \"calculatePosition\",\n    value: function calculatePosition() {\n      return this.tagInput.inputForm.getElementPosition();\n    }\n    /**\n     * @name createTagModel\n     * @param item\n     */\n\n  }, {\n    key: \"createTagModel\",\n    value: function createTagModel(item) {\n      var _Object$assign2;\n\n      var display = typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n      var value = typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n      return Object.assign({}, item.value, (_Object$assign2 = {}, _defineProperty(_Object$assign2, this.tagInput.displayBy, display), _defineProperty(_Object$assign2, this.tagInput.identifyBy, value), _Object$assign2));\n    }\n    /**\n     *\n     * @param value {string}\n     */\n\n  }, {\n    key: \"getMatchingItems\",\n    value: function getMatchingItems(value) {\n      var _this6 = this;\n\n      if (!value && !this.showDropdownIfEmpty) {\n        return [];\n      }\n\n      var dupesAllowed = this.tagInput.allowDupes;\n      return this.autocompleteItems.filter(function (item) {\n        var hasValue = dupesAllowed ? false : _this6.tagInput.tags.some(function (tag) {\n          var identifyBy = _this6.tagInput.identifyBy;\n          var model = typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n          return model === item[_this6.identifyBy];\n        });\n        return _this6.matchingFn(value, item) && hasValue === false;\n      });\n    }\n    /**\n     * @name setItems\n     */\n\n  }, {\n    key: \"setItems\",\n    value: function setItems(items) {\n      this.items = items.slice(0, this.limitItemsTo || items.length);\n    }\n    /**\n     * @name populateItems\n     * @param data\n     */\n\n  }, {\n    key: \"populateItems\",\n    value: function populateItems(data) {\n      var _this7 = this;\n\n      this.autocompleteItems = data.map(function (item) {\n        var _ref3;\n\n        return typeof item === 'string' ? (_ref3 = {}, _defineProperty(_ref3, _this7.displayBy, item), _defineProperty(_ref3, _this7.identifyBy, item), _ref3) : item;\n      });\n      return this;\n    }\n    /**\n     * @name setLoadingState\n     * @param state\n     */\n\n  }, {\n    key: \"setLoadingState\",\n    value: function setLoadingState(state) {\n      this.tagInput.isLoading = state;\n      return this;\n    }\n  }]);\n\n  return TagInputDropdown;\n}();\n\nTagInputDropdown.ɵfac = function TagInputDropdown_Factory(t) {\n  return new (t || TagInputDropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector));\n};\n\nTagInputDropdown.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TagInputDropdown,\n  selectors: [[\"tag-input-dropdown\"]],\n  contentQueries: function TagInputDropdown_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function TagInputDropdown_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(Ng2Dropdown, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n    }\n  },\n  hostBindings: function TagInputDropdown_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"scroll\", function TagInputDropdown_scroll_HostBindingHandler() {\n        return ctx.scrollListener();\n      }, false, ɵngcc0.ɵɵresolveWindow)(\"blur\", function TagInputDropdown_blur_HostBindingHandler() {\n        return ctx.onWindowBlur();\n      }, false, ɵngcc0.ɵɵresolveWindow);\n    }\n  },\n  inputs: {\n    offset: \"offset\",\n    focusFirstElement: \"focusFirstElement\",\n    showDropdownIfEmpty: \"showDropdownIfEmpty\",\n    minimumTextLength: \"minimumTextLength\",\n    limitItemsTo: \"limitItemsTo\",\n    displayBy: \"displayBy\",\n    identifyBy: \"identifyBy\",\n    matchingFn: \"matchingFn\",\n    appendToBody: \"appendToBody\",\n    keepOpen: \"keepOpen\",\n    dynamicUpdate: \"dynamicUpdate\",\n    zIndex: \"zIndex\",\n    autocompleteItems: \"autocompleteItems\",\n    autocompleteObservable: \"autocompleteObservable\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[3, \"dynamicUpdate\"], [3, \"focusFirstElement\", \"zIndex\", \"appendToBody\", \"offset\"], [3, \"value\", \"ngSwitch\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"ngSwitch\"], [3, \"innerHTML\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"innerHTML\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function TagInputDropdown_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"ng2-dropdown\", 0);\n      ɵngcc0.ɵɵelementStart(1, \"ng2-dropdown-menu\", 1);\n      ɵngcc0.ɵɵtemplate(2, TagInputDropdown_ng2_menu_item_2_Template, 3, 3, \"ng2-menu-item\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"dynamicUpdate\", ctx.dynamicUpdate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"focusFirstElement\", ctx.focusFirstElement)(\"zIndex\", ctx.zIndex)(\"appendToBody\", ctx.appendToBody)(\"offset\", ctx.offset);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items);\n    }\n  },\n  directives: [ɵngcc3.Ng2Dropdown, ɵngcc3.Ng2DropdownMenu, ɵngcc2.NgForOf, ɵngcc3.Ng2MenuItem, ɵngcc2.NgSwitch, ɵngcc2.NgSwitchCase, ɵngcc2.NgSwitchDefault, ɵngcc2.NgTemplateOutlet],\n  pipes: [HighlightPipe],\n  encapsulation: 2\n});\n\n__decorate([ViewChild(Ng2Dropdown, {\n  static: false\n}), __metadata(\"design:type\", Ng2Dropdown)], TagInputDropdown.prototype, \"dropdown\", void 0);\n\n__decorate([ContentChildren(TemplateRef), __metadata(\"design:type\", QueryList)], TagInputDropdown.prototype, \"templates\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputDropdown.prototype, \"offset\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"focusFirstElement\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"showDropdownIfEmpty\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Function)], TagInputDropdown.prototype, \"autocompleteObservable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"minimumTextLength\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], TagInputDropdown.prototype, \"limitItemsTo\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"displayBy\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"identifyBy\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Function)], TagInputDropdown.prototype, \"matchingFn\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"appendToBody\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"keepOpen\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"dynamicUpdate\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputDropdown.prototype, \"zIndex\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array), __metadata(\"design:paramtypes\", [Array])], TagInputDropdown.prototype, \"autocompleteItems\", null);\n\n__decorate([HostListener('window:scroll'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], TagInputDropdown.prototype, \"scrollListener\", null);\n\n__decorate([HostListener('window:blur'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], TagInputDropdown.prototype, \"onWindowBlur\", null);\n\nTagInputDropdown = __decorate([__metadata(\"design:paramtypes\", [Injector])], TagInputDropdown); // angular universal hacks\n\n/* tslint:disable-next-line */\n\nvar DragEvent = window.DragEvent;\nvar CUSTOM_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(function () {\n    return TagInputComponent;\n  }),\n  multi: true\n};\n\nvar TagInputComponent = /*#__PURE__*/function (_TagInputAccessor) {\n  _inherits(TagInputComponent, _TagInputAccessor);\n\n  var _super = _createSuper(TagInputComponent);\n\n  function TagInputComponent(renderer, dragProvider) {\n    var _this8$listeners;\n\n    var _this8;\n\n    _classCallCheck(this, TagInputComponent);\n\n    _this8 = _super.call(this);\n    _this8.renderer = renderer;\n    _this8.dragProvider = dragProvider;\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n\n    _this8.separatorKeys = defaults.tagInput.separatorKeys;\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n\n    _this8.separatorKeyCodes = defaults.tagInput.separatorKeyCodes;\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n\n    _this8.placeholder = defaults.tagInput.placeholder;\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n\n    _this8.secondaryPlaceholder = defaults.tagInput.secondaryPlaceholder;\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n\n    _this8.maxItems = defaults.tagInput.maxItems;\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n\n    _this8.validators = defaults.tagInput.validators;\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n\n    _this8.asyncValidators = defaults.tagInput.asyncValidators;\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n\n    _this8.onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n    /**\n     * @name errorMessages\n     */\n\n    _this8.errorMessages = defaults.tagInput.errorMessages;\n    /**\n     * @name theme\n     */\n\n    _this8.theme = defaults.tagInput.theme;\n    /**\n     * @name onTextChangeDebounce\n     */\n\n    _this8.onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n\n    _this8.inputId = defaults.tagInput.inputId;\n    /**\n     * - custom class assigned to the input\n     */\n\n    _this8.inputClass = defaults.tagInput.inputClass;\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n\n    _this8.clearOnBlur = defaults.tagInput.clearOnBlur;\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n\n    _this8.hideForm = defaults.tagInput.hideForm;\n    /**\n     * @name addOnBlur\n     */\n\n    _this8.addOnBlur = defaults.tagInput.addOnBlur;\n    /**\n     * @name addOnPaste\n     */\n\n    _this8.addOnPaste = defaults.tagInput.addOnPaste;\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n\n    _this8.pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n    /**\n     * @name blinkIfDupe\n     */\n\n    _this8.blinkIfDupe = defaults.tagInput.blinkIfDupe;\n    /**\n     * @name removable\n     */\n\n    _this8.removable = defaults.tagInput.removable;\n    /**\n     * @name editable\n     */\n\n    _this8.editable = defaults.tagInput.editable;\n    /**\n     * @name allowDupes\n     */\n\n    _this8.allowDupes = defaults.tagInput.allowDupes;\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n\n    _this8.modelAsStrings = defaults.tagInput.modelAsStrings;\n    /**\n     * @name trimTags\n     */\n\n    _this8.trimTags = defaults.tagInput.trimTags;\n    /**\n     * @name ripple\n     */\n\n    _this8.ripple = defaults.tagInput.ripple;\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n\n    _this8.tabindex = defaults.tagInput.tabIndex;\n    /**\n     * @name disable\n     */\n\n    _this8.disable = defaults.tagInput.disable;\n    /**\n     * @name dragZone\n     */\n\n    _this8.dragZone = defaults.tagInput.dragZone;\n    /**\n     * @name onRemoving\n     */\n\n    _this8.onRemoving = defaults.tagInput.onRemoving;\n    /**\n     * @name onAdding\n     */\n\n    _this8.onAdding = defaults.tagInput.onAdding;\n    /**\n     * @name animationDuration\n     */\n\n    _this8.animationDuration = defaults.tagInput.animationDuration;\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n\n    _this8.onAdd = new EventEmitter();\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n\n    _this8.onRemove = new EventEmitter();\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n\n    _this8.onSelect = new EventEmitter();\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n\n    _this8.onFocus = new EventEmitter();\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n\n    _this8.onBlur = new EventEmitter();\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n\n    _this8.onTextChange = new EventEmitter();\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n\n    _this8.onPaste = new EventEmitter();\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n\n    _this8.onValidationError = new EventEmitter();\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n\n    _this8.onTagEdited = new EventEmitter();\n    /**\n     * @name isLoading\n     */\n\n    _this8.isLoading = false;\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n\n    _this8.listeners = (_this8$listeners = {}, _defineProperty(_this8$listeners, KEYDOWN, []), _defineProperty(_this8$listeners, KEYUP, []), _this8$listeners);\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n\n    _this8.inputTextChange = new EventEmitter();\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n\n    _this8.inputTextValue = '';\n    _this8.errors = [];\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n\n    _this8.appendTag = function (tag) {\n      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this8.items.length;\n      var items = _this8.items;\n      var model = _this8.modelAsStrings ? tag[_this8.identifyBy] : tag;\n      _this8.items = [].concat(_toConsumableArray(items.slice(0, index)), [model], _toConsumableArray(items.slice(index, items.length)));\n    };\n    /**\n     * @name createTag\n     * @param model\n     */\n\n\n    _this8.createTag = function (model) {\n      var _Object$assign3;\n\n      var trim = function trim(val, key) {\n        return typeof val === 'string' ? val.trim() : val[key];\n      };\n\n      return Object.assign({}, typeof model !== 'string' ? model : {}, (_Object$assign3 = {}, _defineProperty(_Object$assign3, _this8.displayBy, _this8.trimTags ? trim(model, _this8.displayBy) : model), _defineProperty(_Object$assign3, _this8.identifyBy, _this8.trimTags ? trim(model, _this8.identifyBy) : model), _Object$assign3));\n    };\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n\n\n    _this8.isTagValid = function (tag) {\n      var fromAutocomplete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var selectedItem = _this8.dropdown ? _this8.dropdown.selectedItem : undefined;\n\n      var value = _this8.getItemDisplay(tag).trim();\n\n      if (selectedItem && !fromAutocomplete || !value) {\n        return false;\n      }\n\n      var dupe = _this8.findDupe(tag, fromAutocomplete); // if so, give a visual cue and return false\n\n\n      if (!_this8.allowDupes && dupe && _this8.blinkIfDupe) {\n        var model = _this8.tags.find(function (item) {\n          return _this8.getItemValue(item.model) === _this8.getItemValue(dupe);\n        });\n\n        if (model) {\n          model.blink();\n        }\n      }\n\n      var isFromAutocomplete = fromAutocomplete && _this8.onlyFromAutocomplete;\n      var assertions = [// 1. there must be no dupe OR dupes are allowed\n      !dupe || _this8.allowDupes, // 2. check max items has not been reached\n      !_this8.maxItemsReached, // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n      isFromAutocomplete || !_this8.onlyFromAutocomplete];\n      return assertions.filter(Boolean).length === assertions.length;\n    };\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n\n\n    _this8.onPasteCallback = function (data) {\n      return __awaiter(_assertThisInitialized(_this8), void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this9 = this;\n\n        var getText, text, requests, resetInput;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                getText = function getText() {\n                  var isIE = Boolean(window.clipboardData);\n                  var clipboardData = isIE ? window.clipboardData : data.clipboardData;\n                  var type = isIE ? 'Text' : 'text/plain';\n                  return clipboardData === null ? '' : clipboardData.getData(type) || '';\n                };\n\n                text = getText();\n                requests = text.split(this.pasteSplitPattern).map(function (item) {\n                  var tag = _this9.createTag(item);\n\n                  _this9.setInputValue(tag[_this9.displayBy]);\n\n                  return _this9.onAddingRequested(false, tag);\n                });\n\n                resetInput = function resetInput() {\n                  return setTimeout(function () {\n                    return _this9.setInputValue('');\n                  }, 50);\n                };\n\n                Promise.all(requests).then(function () {\n                  _this9.onPaste.emit(text);\n\n                  resetInput();\n                }).catch(resetInput);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    };\n\n    return _this8;\n  }\n  /**\n   * @name inputText\n   */\n\n\n  _createClass(TagInputComponent, [{\n    key: \"inputText\",\n    get: function get() {\n      return this.inputTextValue;\n    }\n    /**\n     * @name inputText\n     * @param text\n     */\n    ,\n    set: function set(text) {\n      this.inputTextValue = text;\n      this.inputTextChange.emit(text);\n    }\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n\n  }, {\n    key: \"tabindexAttr\",\n    get: function get() {\n      return this.tabindex !== '' ? '-1' : '';\n    }\n    /**\n     * @name ngAfterViewInit\n     */\n\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this10 = this;\n\n      // set up listeners\n      this.setUpKeypressListeners();\n      this.setupSeparatorKeysListener();\n      this.setUpInputKeydownListeners();\n\n      if (this.onTextChange.observers.length) {\n        this.setUpTextChangeSubscriber();\n      } // if clear on blur is set to true, subscribe to the event and clear the text's form\n\n\n      if (this.clearOnBlur || this.addOnBlur) {\n        this.setUpOnBlurSubscriber();\n      } // if addOnPaste is set to true, register the handler and add items\n\n\n      if (this.addOnPaste) {\n        this.setUpOnPasteListener();\n      }\n\n      var statusChanges$ = this.inputForm.form.statusChanges;\n      statusChanges$.pipe(filter(function (status) {\n        return status !== 'PENDING';\n      })).subscribe(function () {\n        _this10.errors = _this10.inputForm.getErrorMessages(_this10.errorMessages);\n      });\n      this.isProgressBarVisible$ = statusChanges$.pipe(map(function (status) {\n        return status === 'PENDING' || _this10.isLoading;\n      })); // if hideForm is set to true, remove the input\n\n      if (this.hideForm) {\n        this.inputForm.destroy();\n      }\n    }\n    /**\n     * @name ngOnInit\n     */\n\n  }, {\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      // if the number of items specified in the model is > of the value of maxItems\n      // degrade gracefully and let the max number of items to be the number of items in the model\n      // though, warn the user.\n      var hasReachedMaxItems = this.maxItems !== undefined && this.items && this.items.length > this.maxItems;\n\n      if (hasReachedMaxItems) {\n        this.maxItems = this.items.length;\n        console.warn(MAX_ITEMS_WARNING);\n      } // Setting editable to false to fix problem with tags in IE still being editable when\n      // onlyFromAutocomplete is true\n\n\n      this.editable = this.onlyFromAutocomplete ? false : this.editable;\n      this.setAnimationMetadata();\n    }\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n\n  }, {\n    key: \"onRemoveRequested\",\n    value: function onRemoveRequested(tag, index) {\n      var _this11 = this;\n\n      return new Promise(function (resolve) {\n        var subscribeFn = function subscribeFn(model) {\n          _this11.removeItem(model, index);\n\n          resolve(tag);\n        };\n\n        _this11.onRemoving ? _this11.onRemoving(tag).pipe(first()).subscribe(subscribeFn) : subscribeFn(tag);\n      });\n    }\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n\n  }, {\n    key: \"onAddingRequested\",\n    value: function onAddingRequested(fromAutocomplete, tag, index, giveupFocus) {\n      var _this12 = this;\n\n      return new Promise(function (resolve, reject) {\n        var subscribeFn = function subscribeFn(model) {\n          return _this12.addItem(fromAutocomplete, model, index, giveupFocus).then(resolve).catch(reject);\n        };\n\n        return _this12.onAdding ? _this12.onAdding(tag).pipe(first()).subscribe(subscribeFn, reject) : subscribeFn(tag);\n      });\n    }\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n\n  }, {\n    key: \"selectItem\",\n    value: function selectItem(item) {\n      var emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var isReadonly = item && typeof item !== 'string' && item.readonly;\n\n      if (isReadonly || this.selectedTag === item) {\n        return;\n      }\n\n      this.selectedTag = item;\n\n      if (emit) {\n        this.onSelect.emit(item);\n      }\n    }\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n\n  }, {\n    key: \"fireEvents\",\n    value: function fireEvents(eventName, $event) {\n      var _this13 = this;\n\n      this.listeners[eventName].forEach(function (listener) {\n        return listener.call(_this13, $event);\n      });\n    }\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n\n  }, {\n    key: \"handleKeydown\",\n    value: function handleKeydown(data) {\n      var event = data.event;\n      var key = event.keyCode || event.which;\n      var shiftKey = event.shiftKey || false;\n\n      switch (KEY_PRESS_ACTIONS[key]) {\n        case ACTIONS_KEYS.DELETE:\n          if (this.selectedTag && this.removable) {\n            var index = this.items.indexOf(this.selectedTag);\n            this.onRemoveRequested(this.selectedTag, index);\n          }\n\n          break;\n\n        case ACTIONS_KEYS.SWITCH_PREV:\n          this.moveToTag(data.model, PREV);\n          break;\n\n        case ACTIONS_KEYS.SWITCH_NEXT:\n          this.moveToTag(data.model, NEXT);\n          break;\n\n        case ACTIONS_KEYS.TAB:\n          if (shiftKey) {\n            if (this.isFirstTag(data.model)) {\n              return;\n            }\n\n            this.moveToTag(data.model, PREV);\n          } else {\n            if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n              return;\n            }\n\n            this.moveToTag(data.model, NEXT);\n          }\n\n          break;\n\n        default:\n          return;\n      } // prevent default behaviour\n\n\n      event.preventDefault();\n    }\n  }, {\n    key: \"onFormSubmit\",\n    value: function onFormSubmit() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return this.onAddingRequested(false, this.formValue);\n\n              case 3:\n                _context3.next = 8;\n                break;\n\n              case 5:\n                _context3.prev = 5;\n                _context3.t0 = _context3[\"catch\"](0);\n                return _context3.abrupt(\"return\");\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 5]]);\n      }));\n    }\n    /**\n     * @name setInputValue\n     * @param value\n     */\n\n  }, {\n    key: \"setInputValue\",\n    value: function setInputValue(value) {\n      var emitEvent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var control = this.getControl(); // update form value with the transformed item\n\n      control.setValue(value, {\n        emitEvent: emitEvent\n      });\n    }\n    /**\n     * @name getControl\n     */\n\n  }, {\n    key: \"getControl\",\n    value: function getControl() {\n      return this.inputForm.value;\n    }\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      var applyFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var displayAutocomplete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.dragProvider.getState('dragging')) {\n        return;\n      }\n\n      this.selectItem(undefined, false);\n\n      if (applyFocus) {\n        this.inputForm.focus();\n        this.onFocus.emit(this.formValue);\n      }\n    }\n    /**\n     * @name blur\n     */\n\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.onTouched();\n      this.onBlur.emit(this.formValue);\n    }\n    /**\n     * @name hasErrors\n     */\n\n  }, {\n    key: \"hasErrors\",\n    value: function hasErrors() {\n      return !!this.inputForm && this.inputForm.hasErrors();\n    }\n    /**\n     * @name isInputFocused\n     */\n\n  }, {\n    key: \"isInputFocused\",\n    value: function isInputFocused() {\n      return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n\n  }, {\n    key: \"hasCustomTemplate\",\n    value: function hasCustomTemplate() {\n      var template = this.templates ? this.templates.first : undefined;\n      var menuTemplate = this.dropdown && this.dropdown.templates ? this.dropdown.templates.first : undefined;\n      return Boolean(template && template !== menuTemplate);\n    }\n    /**\n     * @name maxItemsReached\n     */\n\n  }, {\n    key: \"maxItemsReached\",\n    get: function get() {\n      return this.maxItems !== undefined && this.items.length >= this.maxItems;\n    }\n    /**\n     * @name formValue\n     */\n\n  }, {\n    key: \"formValue\",\n    get: function get() {\n      var form = this.inputForm.value;\n      return form ? form.value : '';\n    }\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n\n  }, {\n    key: \"onDragStarted\",\n    value: function onDragStarted(event, tag, index) {\n      event.stopPropagation();\n      var item = {\n        zone: this.dragZone,\n        tag: tag,\n        index: index\n      };\n      this.dragProvider.setSender(this);\n      this.dragProvider.setDraggedItem(event, item);\n      this.dragProvider.setState({\n        dragging: true,\n        index: index\n      });\n    }\n    /**\n     * @name onDragOver\n     * @param event\n     */\n\n  }, {\n    key: \"onDragOver\",\n    value: function onDragOver(event, index) {\n      this.dragProvider.setState({\n        dropping: true\n      });\n      this.dragProvider.setReceiver(this);\n      event.preventDefault();\n    }\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n\n  }, {\n    key: \"onTagDropped\",\n    value: function onTagDropped(event, index) {\n      var item = this.dragProvider.getDraggedItem(event);\n\n      if (!item || item.zone !== this.dragZone) {\n        return;\n      }\n\n      this.dragProvider.onTagDropped(item.tag, item.index, index);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    /**\n     * @name isDropping\n     */\n\n  }, {\n    key: \"isDropping\",\n    value: function isDropping() {\n      var isReceiver = this.dragProvider.receiver === this;\n      var isDropping = this.dragProvider.getState('dropping');\n      return Boolean(isReceiver && isDropping);\n    }\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n\n  }, {\n    key: \"onTagBlurred\",\n    value: function onTagBlurred(changedElement, index) {\n      this.items[index] = changedElement;\n      this.blur();\n    }\n    /**\n     * @name trackBy\n     * @param items\n     */\n\n  }, {\n    key: \"trackBy\",\n    value: function trackBy(index, item) {\n      return item[this.identifyBy];\n    }\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n\n  }, {\n    key: \"updateEditedTag\",\n    value: function updateEditedTag(_ref4) {\n      var tag = _ref4.tag,\n          index = _ref4.index;\n      this.onTagEdited.emit(tag);\n    }\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n\n  }, {\n    key: \"moveToTag\",\n    value: function moveToTag(item, direction) {\n      var isLast = this.isLastTag(item);\n      var isFirst = this.isFirstTag(item);\n      var stopSwitch = direction === NEXT && isLast || direction === PREV && isFirst;\n\n      if (stopSwitch) {\n        this.focus(true);\n        return;\n      }\n\n      var offset = direction === NEXT ? 1 : -1;\n      var index = this.getTagIndex(item) + offset;\n      var tag = this.getTagAtIndex(index);\n      return tag.select.call(tag);\n    }\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n\n  }, {\n    key: \"isFirstTag\",\n    value: function isFirstTag(item) {\n      return this.tags.first.model === item;\n    }\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n\n  }, {\n    key: \"isLastTag\",\n    value: function isLastTag(item) {\n      return this.tags.last.model === item;\n    }\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n\n  }, {\n    key: \"getTagIndex\",\n    value: function getTagIndex(item) {\n      var tags = this.tags.toArray();\n      return tags.findIndex(function (tag) {\n        return tag.model === item;\n      });\n    }\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n\n  }, {\n    key: \"getTagAtIndex\",\n    value: function getTagAtIndex(index) {\n      var tags = this.tags.toArray();\n      return tags[index];\n    }\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(tag, index) {\n      this.items = this.getItemsWithout(index); // if the removed tag was selected, set it as undefined\n\n      if (this.selectedTag === tag) {\n        this.selectItem(undefined, false);\n      } // focus input\n\n\n      this.focus(true, false); // emit remove event\n\n      this.onRemove.emit(tag);\n    }\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n\n  }, {\n    key: \"addItem\",\n    value: function addItem() {\n      var _this14 = this;\n\n      var fromAutocomplete = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var item = arguments.length > 1 ? arguments[1] : undefined;\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var giveupFocus = arguments.length > 3 ? arguments[3] : undefined;\n      var display = this.getItemDisplay(item);\n      var tag = this.createTag(item);\n\n      if (fromAutocomplete) {\n        this.setInputValue(this.getItemValue(item, true));\n      }\n\n      return new Promise(function (resolve, reject) {\n        /**\n         * @name reset\n         */\n        var reset = function reset() {\n          // reset control and focus input\n          _this14.setInputValue('');\n\n          if (giveupFocus) {\n            _this14.focus(false, false);\n          } else {\n            // focus input\n            _this14.focus(true, false);\n          }\n\n          resolve(display);\n        };\n\n        var appendItem = function appendItem() {\n          _this14.appendTag(tag, index); // emit event\n\n\n          _this14.onAdd.emit(tag);\n\n          if (!_this14.dropdown) {\n            return;\n          }\n\n          _this14.dropdown.hide();\n\n          if (_this14.dropdown.showDropdownIfEmpty) {\n            _this14.dropdown.show();\n          }\n        };\n\n        var status = _this14.inputForm.form.status;\n\n        var isTagValid = _this14.isTagValid(tag, fromAutocomplete);\n\n        var onValidationError = function onValidationError() {\n          _this14.onValidationError.emit(tag);\n\n          return reject();\n        };\n\n        if (status === 'VALID' && isTagValid) {\n          appendItem();\n          return reset();\n        }\n\n        if (status === 'INVALID' || !isTagValid) {\n          reset();\n          return onValidationError();\n        }\n\n        if (status === 'PENDING') {\n          var statusUpdate$ = _this14.inputForm.form.statusChanges;\n          return statusUpdate$.pipe(filter(function (statusUpdate) {\n            return statusUpdate !== 'PENDING';\n          }), first()).subscribe(function (statusUpdate) {\n            if (statusUpdate === 'VALID' && isTagValid) {\n              appendItem();\n              return reset();\n            } else {\n              reset();\n              return onValidationError();\n            }\n          });\n        }\n      });\n    }\n    /**\n     * @name setupSeparatorKeysListener\n     */\n\n  }, {\n    key: \"setupSeparatorKeysListener\",\n    value: function setupSeparatorKeysListener() {\n      var _this15 = this;\n\n      var useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n\n      var listener = function listener($event) {\n        var hasKeyCode = _this15.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n        var hasKey = _this15.separatorKeys.indexOf($event.key) >= 0; // the keyCode of keydown event is 229 when IME is processing the key event.\n\n        var isIMEProcessing = $event.keyCode === 229;\n\n        if (hasKeyCode || hasKey && !isIMEProcessing) {\n          $event.preventDefault();\n\n          _this15.onAddingRequested(false, _this15.formValue).catch(function () {});\n        }\n      };\n\n      listen.call(this, KEYDOWN, listener, useSeparatorKeys);\n    }\n    /**\n     * @name setUpKeypressListeners\n     */\n\n  }, {\n    key: \"setUpKeypressListeners\",\n    value: function setUpKeypressListeners() {\n      var _this16 = this;\n\n      var listener = function listener($event) {\n        var isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n        if (isCorrectKey && !_this16.formValue && _this16.items.length) {\n          _this16.tags.last.select.call(_this16.tags.last);\n        }\n      }; // setting up the keypress listeners\n\n\n      listen.call(this, KEYDOWN, listener);\n    }\n    /**\n     * @name setUpKeydownListeners\n     */\n\n  }, {\n    key: \"setUpInputKeydownListeners\",\n    value: function setUpInputKeydownListeners() {\n      var _this17 = this;\n\n      this.inputForm.onKeydown.subscribe(function (event) {\n        if (event.key === 'Backspace' && _this17.formValue.trim() === '') {\n          event.preventDefault();\n        }\n      });\n    }\n    /**\n     * @name setUpOnPasteListener\n     */\n\n  }, {\n    key: \"setUpOnPasteListener\",\n    value: function setUpOnPasteListener() {\n      var _this18 = this;\n\n      var input = this.inputForm.input.nativeElement; // attach listener to input\n\n      this.renderer.listen(input, 'paste', function (event) {\n        _this18.onPasteCallback(event);\n\n        event.preventDefault();\n        return true;\n      });\n    }\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n\n  }, {\n    key: \"setUpTextChangeSubscriber\",\n    value: function setUpTextChangeSubscriber() {\n      var _this19 = this;\n\n      this.inputForm.form.valueChanges.pipe(debounceTime(this.onTextChangeDebounce)).subscribe(function (value) {\n        _this19.onTextChange.emit(value.item);\n      });\n    }\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n\n  }, {\n    key: \"setUpOnBlurSubscriber\",\n    value: function setUpOnBlurSubscriber() {\n      var _this20 = this;\n\n      var filterFn = function filterFn() {\n        var isVisible = _this20.dropdown && _this20.dropdown.isVisible;\n        return !isVisible && !!_this20.formValue;\n      };\n\n      this.inputForm.onBlur.pipe(debounceTime(100), filter(filterFn)).subscribe(function () {\n        var reset = function reset() {\n          return _this20.setInputValue('');\n        };\n\n        if (_this20.addOnBlur) {\n          return _this20.onAddingRequested(false, _this20.formValue, undefined, true).then(reset).catch(reset);\n        }\n\n        reset();\n      });\n    }\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n\n  }, {\n    key: \"findDupe\",\n    value: function findDupe(tag, isFromAutocomplete) {\n      var _this21 = this;\n\n      var identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n      var id = tag[identifyBy];\n      return this.items.find(function (item) {\n        return _this21.getItemValue(item) === id;\n      });\n    }\n    /**\n     * @name setAnimationMetadata\n     */\n\n  }, {\n    key: \"setAnimationMetadata\",\n    value: function setAnimationMetadata() {\n      this.animationMetadata = {\n        value: 'in',\n        params: Object.assign({}, this.animationDuration)\n      };\n    }\n  }]);\n\n  return TagInputComponent;\n}(TagInputAccessor);\n\nTagInputComponent.ɵfac = function TagInputComponent_Factory(t) {\n  return new (t || TagInputComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(DragProvider));\n};\n\nTagInputComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: TagInputComponent,\n  selectors: [[\"tag-input\"]],\n  contentQueries: function TagInputComponent_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TagInputDropdown, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, false);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdown = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    }\n  },\n  viewQuery: function TagInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TagInputForm, true);\n      ɵngcc0.ɵɵviewQuery(TagComponent, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputForm = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tags = _t);\n    }\n  },\n  hostVars: 1,\n  hostBindings: function TagInputComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵattribute(\"tabindex\", ctx.tabindexAttr);\n    }\n  },\n  inputs: {\n    separatorKeys: \"separatorKeys\",\n    separatorKeyCodes: \"separatorKeyCodes\",\n    placeholder: \"placeholder\",\n    secondaryPlaceholder: \"secondaryPlaceholder\",\n    maxItems: \"maxItems\",\n    validators: \"validators\",\n    asyncValidators: \"asyncValidators\",\n    onlyFromAutocomplete: \"onlyFromAutocomplete\",\n    errorMessages: \"errorMessages\",\n    theme: \"theme\",\n    onTextChangeDebounce: \"onTextChangeDebounce\",\n    inputId: \"inputId\",\n    inputClass: \"inputClass\",\n    clearOnBlur: \"clearOnBlur\",\n    hideForm: \"hideForm\",\n    addOnBlur: \"addOnBlur\",\n    addOnPaste: \"addOnPaste\",\n    pasteSplitPattern: \"pasteSplitPattern\",\n    blinkIfDupe: \"blinkIfDupe\",\n    removable: \"removable\",\n    editable: \"editable\",\n    allowDupes: \"allowDupes\",\n    modelAsStrings: \"modelAsStrings\",\n    trimTags: \"trimTags\",\n    ripple: \"ripple\",\n    tabindex: \"tabindex\",\n    disable: \"disable\",\n    dragZone: \"dragZone\",\n    onRemoving: \"onRemoving\",\n    onAdding: \"onAdding\",\n    animationDuration: \"animationDuration\",\n    inputText: \"inputText\"\n  },\n  outputs: {\n    onAdd: \"onAdd\",\n    onRemove: \"onRemove\",\n    onSelect: \"onSelect\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\",\n    onTextChange: \"onTextChange\",\n    onPaste: \"onPaste\",\n    onValidationError: \"onValidationError\",\n    onTagEdited: \"onTagEdited\",\n    inputTextChange: \"inputTextChange\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([CUSTOM_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c3,\n  decls: 8,\n  vars: 27,\n  consts: [[1, \"ng2-tag-input\", 3, \"ngClass\", \"click\", \"drop\", \"dragenter\", \"dragover\", \"dragend\"], [1, \"ng2-tags-container\"], [3, \"draggable\", \"canAddTag\", \"disabled\", \"hasRipple\", \"index\", \"removable\", \"editable\", \"displayBy\", \"identifyBy\", \"template\", \"model\", \"onSelect\", \"onRemove\", \"onKeyDown\", \"onTagEdited\", \"onBlur\", \"dragstart\", \"drop\", \"dragenter\", \"dragover\", \"dragleave\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"inputText\", \"disabled\", \"validators\", \"asyncValidators\", \"hidden\", \"placeholder\", \"inputClass\", \"inputId\", \"tabindex\", \"onSubmit\", \"onBlur\", \"click\", \"onKeydown\", \"onKeyup\", \"inputTextChange\"], [\"class\", \"progress-bar\", 4, \"ngIf\"], [\"class\", \"error-messages\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"draggable\", \"canAddTag\", \"disabled\", \"hasRipple\", \"index\", \"removable\", \"editable\", \"displayBy\", \"identifyBy\", \"template\", \"model\", \"onSelect\", \"onRemove\", \"onKeyDown\", \"onTagEdited\", \"onBlur\", \"dragstart\", \"drop\", \"dragenter\", \"dragover\", \"dragleave\"], [1, \"progress-bar\"], [1, \"error-messages\", 3, \"ngClass\"], [\"class\", \"error-message\", 4, \"ngFor\", \"ngForOf\"], [1, \"error-message\"]],\n  template: function TagInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵlistener(\"click\", function TagInputComponent_Template_div_click_0_listener() {\n        return ctx.focus(true, false);\n      })(\"drop\", function TagInputComponent_Template_div_drop_0_listener($event) {\n        return ctx.dragZone ? ctx.onTagDropped($event, undefined) : undefined;\n      })(\"dragenter\", function TagInputComponent_Template_div_dragenter_0_listener($event) {\n        return ctx.dragZone ? ctx.onDragOver($event) : undefined;\n      })(\"dragover\", function TagInputComponent_Template_div_dragover_0_listener($event) {\n        return ctx.dragZone ? ctx.onDragOver($event) : undefined;\n      })(\"dragend\", function TagInputComponent_Template_div_dragend_0_listener() {\n        return ctx.dragZone ? ctx.dragProvider.onDragEnd() : undefined;\n      });\n      ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n      ɵngcc0.ɵɵtemplate(2, TagInputComponent_tag_2_Template, 1, 14, \"tag\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"tag-input-form\", 3);\n      ɵngcc0.ɵɵlistener(\"onSubmit\", function TagInputComponent_Template_tag_input_form_onSubmit_3_listener() {\n        return ctx.onFormSubmit();\n      })(\"onBlur\", function TagInputComponent_Template_tag_input_form_onBlur_3_listener() {\n        return ctx.blur();\n      })(\"click\", function TagInputComponent_Template_tag_input_form_click_3_listener() {\n        return ctx.dropdown ? ctx.dropdown.show() : undefined;\n      })(\"onKeydown\", function TagInputComponent_Template_tag_input_form_onKeydown_3_listener($event) {\n        return ctx.fireEvents(\"keydown\", $event);\n      })(\"onKeyup\", function TagInputComponent_Template_tag_input_form_onKeyup_3_listener($event) {\n        return ctx.fireEvents(\"keyup\", $event);\n      })(\"inputTextChange\", function TagInputComponent_Template_tag_input_form_inputTextChange_3_listener($event) {\n        return ctx.inputText = $event;\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(4, TagInputComponent_div_4_Template, 1, 0, \"div\", 4);\n      ɵngcc0.ɵɵpipe(5, \"async\");\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, TagInputComponent_div_6_Template, 2, 2, \"div\", 5);\n      ɵngcc0.ɵɵprojection(7);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"ng2-tag-input--dropping\", ctx.isDropping())(\"ng2-tag-input--disabled\", ctx.disable)(\"ng2-tag-input--loading\", ctx.isLoading)(\"ng2-tag-input--invalid\", ctx.hasErrors())(\"ng2-tag-input--focused\", ctx.isInputFocused());\n      ɵngcc0.ɵɵproperty(\"ngClass\", ctx.theme);\n      ɵngcc0.ɵɵattribute(\"tabindex\", -1);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.items)(\"ngForTrackBy\", ctx.trackBy);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"inputText\", ctx.inputText)(\"disabled\", ctx.disable)(\"validators\", ctx.validators)(\"asyncValidators\", ctx.asyncValidators)(\"hidden\", ctx.maxItemsReached)(\"placeholder\", ctx.items.length ? ctx.placeholder : ctx.secondaryPlaceholder)(\"inputClass\", ctx.inputClass)(\"inputId\", ctx.inputId)(\"tabindex\", ctx.tabindex);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ɵngcc0.ɵɵpipeBind1(5, 25, ctx.isProgressBarVisible$));\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.hasErrors());\n    }\n  },\n  directives: [ɵngcc2.NgClass, ɵngcc2.NgForOf, TagInputForm, ɵngcc2.NgIf, TagComponent],\n  pipes: [ɵngcc2.AsyncPipe],\n  styles: [\".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}.progress-bar[_ngcontent-%COMP%], .progress-bar[_ngcontent-%COMP%]:before{height:2px;width:100%;margin:0}.progress-bar[_ngcontent-%COMP%]{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar[_ngcontent-%COMP%]:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress;animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:.3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#2196f3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly[_ngcontent-%COMP%]{cursor:default}tag.readonly[_ngcontent-%COMP%]:focus, tag[_ngcontent-%COMP%]:focus{outline:0}tag.tag--editing[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active, .minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:initial}.minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.minimal[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .minimal[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.minimal[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.dark[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.dark[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active, .bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):active, .bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]{cursor:default}.bootstrap3-info[_ngcontent-%COMP%]   tag.readonly[_ngcontent-%COMP%]:focus, .bootstrap3-info[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info[_ngcontent-%COMP%]   tag.tag--editing[_ngcontent-%COMP%]{cursor:text}[_nghost-%COMP%]{display:block}\"],\n  data: {\n    animation: animations\n  }\n});\n\n__decorate([Input(), __metadata(\"design:type\", Array)], TagInputComponent.prototype, \"separatorKeys\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], TagInputComponent.prototype, \"separatorKeyCodes\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputComponent.prototype, \"placeholder\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputComponent.prototype, \"secondaryPlaceholder\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Number)], TagInputComponent.prototype, \"maxItems\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], TagInputComponent.prototype, \"validators\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Array)], TagInputComponent.prototype, \"asyncValidators\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onlyFromAutocomplete\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"errorMessages\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputComponent.prototype, \"theme\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onTextChangeDebounce\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"inputId\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputComponent.prototype, \"inputClass\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"clearOnBlur\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"hideForm\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"addOnBlur\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"addOnPaste\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"pasteSplitPattern\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"blinkIfDupe\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"removable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"editable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"allowDupes\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"modelAsStrings\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"trimTags\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [String])], TagInputComponent.prototype, \"inputText\", null);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"ripple\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputComponent.prototype, \"tabindex\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Boolean)], TagInputComponent.prototype, \"disable\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", String)], TagInputComponent.prototype, \"dragZone\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onRemoving\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onAdding\", void 0);\n\n__decorate([Input(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"animationDuration\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onAdd\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onRemove\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onSelect\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onFocus\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onBlur\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onTextChange\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onPaste\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onValidationError\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", Object)], TagInputComponent.prototype, \"onTagEdited\", void 0);\n\n__decorate([ContentChild(TagInputDropdown, {\n  static: false\n}), __metadata(\"design:type\", TagInputDropdown)], TagInputComponent.prototype, \"dropdown\", void 0);\n\n__decorate([ContentChildren(TemplateRef, {\n  descendants: false\n}), __metadata(\"design:type\", QueryList)], TagInputComponent.prototype, \"templates\", void 0);\n\n__decorate([ViewChild(TagInputForm, {\n  static: false\n}), __metadata(\"design:type\", TagInputForm)], TagInputComponent.prototype, \"inputForm\", void 0);\n\n__decorate([ViewChildren(TagComponent), __metadata(\"design:type\", QueryList)], TagInputComponent.prototype, \"tags\", void 0);\n\n__decorate([Output(), __metadata(\"design:type\", EventEmitter)], TagInputComponent.prototype, \"inputTextChange\", void 0);\n\n__decorate([HostBinding('attr.tabindex'), __metadata(\"design:type\", String), __metadata(\"design:paramtypes\", [])], TagInputComponent.prototype, \"tabindexAttr\", null);\n\nTagInputComponent = __decorate([__metadata(\"design:paramtypes\", [Renderer2, DragProvider])], TagInputComponent);\n\nvar DeleteIconComponent = function DeleteIconComponent() {\n  _classCallCheck(this, DeleteIconComponent);\n};\n\nDeleteIconComponent.ɵfac = function DeleteIconComponent_Factory(t) {\n  return new (t || DeleteIconComponent)();\n};\n\nDeleteIconComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: DeleteIconComponent,\n  selectors: [[\"delete-icon\"]],\n  decls: 3,\n  vars: 0,\n  consts: [[\"height\", \"16px\", \"viewBox\", \"0 0 32 32\", \"width\", \"16px\"], [\"d\", \"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\", \"fill\", \"#121313\"]],\n  template: function DeleteIconComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"span\");\n      ɵngcc0.ɵɵnamespaceSVG();\n      ɵngcc0.ɵɵelementStart(1, \"svg\", 0);\n      ɵngcc0.ɵɵelement(2, \"path\", 1);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".dark[_ngcontent-%COMP%]   tag[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   .form-control[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.dark.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused[_ngcontent-%COMP%]{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping[_ngcontent-%COMP%]{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid[_ngcontent-%COMP%]{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading[_ngcontent-%COMP%]{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled[_ngcontent-%COMP%]{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{margin:.1em 0}.bootstrap3-info.ng2-tag-input[_ngcontent-%COMP%]   .ng2-tags-container[_ngcontent-%COMP%]{flex-wrap:wrap;display:flex}.error-message[_ngcontent-%COMP%]{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap[_ngcontent-%COMP%]   .error-message[_ngcontent-%COMP%]{color:#d9534f}delete-icon[_nghost-%COMP%]{width:20px;height:16px;transition:.15s;display:inline-block;text-align:right}delete-icon[_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}delete-icon[_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}delete-icon[_nghost-%COMP%]:hover{-webkit-transform:scale(1.5) translateY(-3px);transform:scale(1.5) translateY(-3px)}.dark[_nghost-%COMP%], .dark   [_nghost-%COMP%]{text-align:right}.dark[_nghost-%COMP%]   path[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.dark[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .dark   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.minimal[_nghost-%COMP%], .minimal   [_nghost-%COMP%]{text-align:right}.minimal[_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#444}.minimal[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .minimal   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}.bootstrap[_nghost-%COMP%], .bootstrap   [_nghost-%COMP%]{text-align:right}.bootstrap[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap[_nghost-%COMP%]   svg[_ngcontent-%COMP%], .bootstrap   [_nghost-%COMP%]   svg[_ngcontent-%COMP%]{vertical-align:bottom;height:34px}tag[_nghost-%COMP%]:active   path[_ngcontent-%COMP%], tag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], tag[_nghost-%COMP%]:focus   path[_ngcontent-%COMP%], tag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.darktag[_nghost-%COMP%]:active   path[_ngcontent-%COMP%], .darktag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .darktag[_nghost-%COMP%]:focus   path[_ngcontent-%COMP%], .darktag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.minimaltag[_nghost-%COMP%]:active   path[_ngcontent-%COMP%], .minimaltag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .minimaltag[_nghost-%COMP%]:focus   path[_ngcontent-%COMP%], .minimaltag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#000}.bootstraptag[_nghost-%COMP%]:active   path[_ngcontent-%COMP%], .bootstraptag:active   [_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstraptag[_nghost-%COMP%]:focus   path[_ngcontent-%COMP%], .bootstraptag:focus   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}.bootstrap3-info[_nghost-%COMP%], .bootstrap3-info   [_nghost-%COMP%]{height:inherit}.bootstrap3-info[_nghost-%COMP%]   path[_ngcontent-%COMP%], .bootstrap3-info   [_nghost-%COMP%]   path[_ngcontent-%COMP%]{fill:#fff}\"]\n});\nvar optionsProvider = new OptionsProvider();\n\nvar TagInputModule = /*#__PURE__*/function () {\n  function TagInputModule() {\n    _classCallCheck(this, TagInputModule);\n  }\n\n  _createClass(TagInputModule, null, [{\n    key: \"withDefaults\",\n    value:\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    function withDefaults(options) {\n      optionsProvider.setOptions(options);\n    }\n  }]);\n\n  return TagInputModule;\n}();\n\nTagInputModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: TagInputModule\n});\nTagInputModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function TagInputModule_Factory(t) {\n    return new (t || TagInputModule)();\n  },\n  providers: [DragProvider, {\n    provide: COMPOSITION_BUFFER_MODE,\n    useValue: false\n  }],\n  imports: [[CommonModule, ReactiveFormsModule, FormsModule, Ng2DropdownModule]]\n});\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(HighlightPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'highlight'\n    }]\n  }], null, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DragProvider, [{\n    type: Injectable\n  }], function () {\n    return [];\n  }, null);\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagInputForm, [{\n    type: Component,\n    args: [{\n      selector: 'tag-input-form',\n      template: \"<!-- form -->\\n<form (ngSubmit)=\\\"submit($event)\\\" [formGroup]=\\\"form\\\">\\n    <input #input\\n\\n           type=\\\"text\\\"\\n           class=\\\"ng2-tag-input__text-input\\\"\\n           autocomplete=\\\"off\\\"\\n           tabindex=\\\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\\\"\\n           minlength=\\\"1\\\"\\n           formControlName=\\\"item\\\"\\n\\n           [ngClass]=\\\"inputClass\\\"\\n           [attr.id]=\\\"inputId\\\"\\n           [attr.placeholder]=\\\"placeholder\\\"\\n           [attr.aria-label]=\\\"placeholder\\\"\\n           [attr.tabindex]=\\\"tabindex\\\"\\n           [attr.disabled]=\\\"disabled ? disabled : null\\\"\\n\\n           (focus)=\\\"onFocus.emit($event)\\\"\\n           (blur)=\\\"onBlur.emit($event)\\\"\\n           (keydown)=\\\"onKeyDown($event)\\\"\\n           (keyup)=\\\"onKeyUp($event)\\\"\\n    />\\n</form>\\n\",\n      styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.ng2-tag-input__text-input{display:inline;vertical-align:middle;border:none;padding:0 .5rem;height:38px;font-size:1em;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.ng2-tag-input__text-input:focus{outline:0}.ng2-tag-input__text-input[disabled=true]{opacity:.5;background:#fff}\"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    onSubmit: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onKeyup: [{\n      type: Output\n    }],\n    onKeydown: [{\n      type: Output\n    }],\n    inputTextChange: [{\n      type: Output\n    }],\n    validators: [{\n      type: Input\n    }],\n    asyncValidators: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    inputText: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    input: [{\n      type: ViewChild,\n      args: ['input', {\n        static: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagRipple, [{\n    type: Component,\n    args: [{\n      selector: 'tag-ripple',\n      template: \"\\n        <div class=\\\"tag-ripple\\\" [@ink]=\\\"state\\\"></div>\\n    \",\n      animations: [trigger('ink', [state('none', style({\n        width: 0,\n        opacity: 0\n      })), transition('none => clicked', [animate(300, keyframes([style({\n        opacity: 1,\n        offset: 0,\n        width: '30%',\n        borderRadius: '100%'\n      }), style({\n        opacity: 1,\n        offset: 0.5,\n        width: '50%'\n      }), style({\n        opacity: 0.5,\n        offset: 1,\n        width: '100%',\n        borderRadius: '16px'\n      })]))])])],\n      styles: [\"\\n        :host {\\n            width: 100%;\\n            height: 100%;\\n            left: 0;\\n            overflow: hidden;\\n            position: absolute;\\n        }\\n\\n        .tag-ripple {\\n            background: rgba(0, 0, 0, 0.1);\\n            top: 50%;\\n            left: 50%;\\n            height: 100%;\\n            transform: translate(-50%, -50%);\\n            position: absolute;\\n        }\\n    \"]\n    }]\n  }], function () {\n    return [];\n  }, {\n    state: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tag',\n      template: \"<div (click)=\\\"select($event)\\\"\\n     (dblclick)=\\\"toggleEditMode()\\\"\\n     (mousedown)=\\\"rippleState='clicked'\\\"\\n     (mouseup)=\\\"rippleState='none'\\\"\\n     [ngSwitch]=\\\"!!template\\\"\\n     [class.disabled]=\\\"disabled\\\"\\n     [attr.tabindex]=\\\"-1\\\"\\n     [attr.aria-label]=\\\"getDisplayValue(model)\\\">\\n\\n    <div *ngSwitchCase=\\\"true\\\" [attr.contenteditable]=\\\"editing\\\">\\n        <!-- CUSTOM TEMPLATE -->\\n        <ng-template\\n            [ngTemplateOutletContext]=\\\"{ item: model, index: index }\\\"\\n            [ngTemplateOutlet]=\\\"template\\\">\\n        </ng-template>\\n    </div>\\n\\n    <div *ngSwitchCase=\\\"false\\\" class=\\\"tag-wrapper\\\">\\n        <!-- TAG NAME -->\\n        <div [attr.contenteditable]=\\\"editing\\\"\\n             [attr.title]=\\\"getDisplayValue(model)\\\"\\n             class=\\\"tag__text inline\\\"\\n             spellcheck=\\\"false\\\"\\n             (keydown.enter)=\\\"disableEditMode($event)\\\"\\n             (keydown.escape)=\\\"disableEditMode($event)\\\"\\n             (click)=\\\"editing ? $event.stopPropagation() : undefined\\\"\\n             (blur)=\\\"onBlurred($event)\\\">\\n            {{ getDisplayValue(model) }}\\n        </div>\\n\\n        <!-- 'X' BUTTON -->\\n        <delete-icon\\n            aria-label=\\\"Remove tag\\\"\\n            role=\\\"button\\\"\\n            (click)=\\\"remove($event)\\\"\\n            *ngIf=\\\"isDeleteIconVisible()\\\">\\n        </delete-icon>\\n    </div>\\n</div>\\n\\n<tag-ripple [state]=\\\"rippleState\\\"\\n            [attr.tabindex]=\\\"-1\\\"\\n            *ngIf=\\\"isRippleVisible\\\">\\n</tag-ripple>\\n\",\n      styles: [\":host,:host>div,:host>div:focus{outline:0;overflow:hidden;transition:opacity 1s;z-index:1}:host{max-width:400px}:host.blink{-webkit-animation:.3s ease-in-out forwards blink;animation:.3s ease-in-out forwards blink}@-webkit-keyframes blink{0%{opacity:.3}}@keyframes blink{0%{opacity:.3}}:host .disabled{cursor:not-allowed}:host [contenteditable=true]{outline:0}.tag-wrapper{flex-direction:row;display:flex}.tag__text{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onKeyDown: [{\n      type: Output\n    }],\n    onTagEdited: [{\n      type: Output\n    }],\n    moving: [{\n      type: HostBinding,\n      args: ['class.moving']\n    }],\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    keydown: [{\n      type: HostListener,\n      args: ['keydown', ['$event']]\n    }],\n    model: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    template: [{\n      type: Input\n    }],\n    displayBy: [{\n      type: Input\n    }],\n    identifyBy: [{\n      type: Input\n    }],\n    index: [{\n      type: Input\n    }],\n    hasRipple: [{\n      type: Input\n    }],\n    canAddTag: [{\n      type: Input\n    }],\n    ripple: [{\n      type: ViewChild,\n      args: [TagRipple, {\n        static: false\n      }]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagInputDropdown, [{\n    type: Component,\n    args: [{\n      selector: 'tag-input-dropdown',\n      template: \"<ng2-dropdown [dynamicUpdate]=\\\"dynamicUpdate\\\">\\n    <ng2-dropdown-menu [focusFirstElement]=\\\"focusFirstElement\\\"\\n                       [zIndex]=\\\"zIndex\\\"\\n                       [appendToBody]=\\\"appendToBody\\\"\\n                       [offset]=\\\"offset\\\">\\n        <ng2-menu-item *ngFor=\\\"let item of items; let index = index; let last = last\\\"\\n                       [value]=\\\"item\\\"\\n                       [ngSwitch]=\\\"!!templates.length\\\">\\n\\n            <span *ngSwitchCase=\\\"false\\\"\\n                  [innerHTML]=\\\"item[displayBy] | highlight : tagInput.inputForm.value.value\\\">\\n            </span>\\n\\n            <ng-template *ngSwitchDefault\\n                      [ngTemplateOutlet]=\\\"templates.first\\\"\\n                      [ngTemplateOutletContext]=\\\"{ item: item, index: index, last: last }\\\">\\n            </ng-template>\\n        </ng2-menu-item>\\n    </ng2-dropdown-menu>\\n</ng2-dropdown>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Injector\n    }];\n  }, {\n    offset: [{\n      type: Input\n    }],\n    focusFirstElement: [{\n      type: Input\n    }],\n    showDropdownIfEmpty: [{\n      type: Input\n    }],\n    minimumTextLength: [{\n      type: Input\n    }],\n    limitItemsTo: [{\n      type: Input\n    }],\n    displayBy: [{\n      type: Input\n    }],\n    identifyBy: [{\n      type: Input\n    }],\n    matchingFn: [{\n      type: Input\n    }],\n    appendToBody: [{\n      type: Input\n    }],\n    keepOpen: [{\n      type: Input\n    }],\n    dynamicUpdate: [{\n      type: Input\n    }],\n    zIndex: [{\n      type: Input\n    }],\n    autocompleteItems: [{\n      type: Input\n    }],\n\n    /**\n     * @name scrollListener\n     */\n    scrollListener: [{\n      type: HostListener,\n      args: ['window:scroll']\n    }],\n\n    /**\n     * @name onWindowBlur\n     */\n    onWindowBlur: [{\n      type: HostListener,\n      args: ['window:blur']\n    }],\n    dropdown: [{\n      type: ViewChild,\n      args: [Ng2Dropdown, {\n        static: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [TemplateRef]\n    }],\n    autocompleteObservable: [{\n      type: Input\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'tag-input',\n      providers: [CUSTOM_ACCESSOR],\n      template: \"<div\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"ng2-tag-input\\\"\\n    (click)=\\\"focus(true, false)\\\"\\n    [attr.tabindex]=\\\"-1\\\"\\n    (drop)=\\\"dragZone ? onTagDropped($event, undefined) : undefined\\\"\\n    (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragover)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n    (dragend)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n    [class.ng2-tag-input--dropping]=\\\"isDropping()\\\"\\n    [class.ng2-tag-input--disabled]=\\\"disable\\\"\\n    [class.ng2-tag-input--loading]=\\\"isLoading\\\"\\n    [class.ng2-tag-input--invalid]=\\\"hasErrors()\\\"\\n    [class.ng2-tag-input--focused]=\\\"isInputFocused()\\\"\\n>\\n\\n    <!-- TAGS -->\\n    <div class=\\\"ng2-tags-container\\\">\\n        <tag\\n            *ngFor=\\\"let item of items; let i = index; trackBy: trackBy\\\"\\n            (onSelect)=\\\"selectItem(item)\\\"\\n            (onRemove)=\\\"onRemoveRequested(item, i)\\\"\\n            (onKeyDown)=\\\"handleKeydown($event)\\\"\\n            (onTagEdited)=\\\"updateEditedTag($event)\\\"\\n            (onBlur)=\\\"onTagBlurred($event, i)\\\"\\n            draggable=\\\"{{ editable }}\\\"\\n            (dragstart)=\\\"dragZone ? onDragStarted($event, item, i) : undefined\\\"\\n            (drop)=\\\"dragZone ? onTagDropped($event, i) : undefined\\\"\\n            (dragenter)=\\\"dragZone ? onDragOver($event) : undefined\\\"\\n            (dragover)=\\\"dragZone ? onDragOver($event, i) : undefined\\\"\\n            (dragleave)=\\\"dragZone ? dragProvider.onDragEnd() : undefined\\\"\\n            [canAddTag]=\\\"isTagValid\\\"\\n            [attr.tabindex]=\\\"0\\\"\\n            [disabled]=\\\"disable\\\"\\n            [@animation]=\\\"animationMetadata\\\"\\n            [hasRipple]=\\\"ripple\\\"\\n            [index]=\\\"i\\\"\\n            [removable]=\\\"removable\\\"\\n            [editable]=\\\"editable\\\"\\n            [displayBy]=\\\"displayBy\\\"\\n            [identifyBy]=\\\"identifyBy\\\"\\n            [template]=\\\"!!hasCustomTemplate() ? templates.first : undefined\\\"\\n            [draggable]=\\\"dragZone\\\"\\n            [model]=\\\"item\\\"\\n        >\\n        </tag>\\n\\n        <tag-input-form\\n            (onSubmit)=\\\"onFormSubmit()\\\"\\n            (onBlur)=\\\"blur()\\\"\\n            (click)=\\\"dropdown ? dropdown.show() : undefined\\\"\\n            (onKeydown)=\\\"fireEvents('keydown', $event)\\\"\\n            (onKeyup)=\\\"fireEvents('keyup', $event)\\\"\\n            [(inputText)]=\\\"inputText\\\"\\n            [disabled]=\\\"disable\\\"\\n            [validators]=\\\"validators\\\"\\n            [asyncValidators]=\\\"asyncValidators\\\"\\n            [hidden]=\\\"maxItemsReached\\\"\\n            [placeholder]=\\\"items.length ? placeholder : secondaryPlaceholder\\\"\\n            [inputClass]=\\\"inputClass\\\"\\n            [inputId]=\\\"inputId\\\"\\n            [tabindex]=\\\"tabindex\\\"\\n        >\\n        </tag-input-form>\\n    </div>\\n\\n    <div\\n        class=\\\"progress-bar\\\"\\n        *ngIf=\\\"isProgressBarVisible$ | async\\\"\\n    ></div>\\n</div>\\n\\n<!-- ERRORS -->\\n<div\\n    *ngIf=\\\"hasErrors()\\\"\\n    [ngClass]=\\\"theme\\\"\\n    class=\\\"error-messages\\\"\\n>\\n    <p\\n        *ngFor=\\\"let error of errors\\\"\\n        class=\\\"error-message\\\"\\n    >\\n        <span>{{ error }}</span>\\n    </p>\\n</div>\\n<ng-content></ng-content>\",\n      animations: animations,\n      styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}.progress-bar,.progress-bar:before{height:2px;width:100%;margin:0}.progress-bar{background-color:#2196f3;display:flex;position:absolute;bottom:0}.progress-bar:before{background-color:#82c4f8;content:\\\"\\\";-webkit-animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress;animation:2s cubic-bezier(.4,0,.2,1) infinite running-progress}@-webkit-keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}@keyframes running-progress{0%{margin-left:0;margin-right:100%}50%{margin-left:25%;margin-right:0}100%{margin-left:100%;margin-right:0}}tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif;font-weight:400;font-size:1em;letter-spacing:.05rem;color:#444;border-radius:16px;transition:.3s;margin:.1rem .3rem .1rem 0;padding:.08rem .45rem;height:32px;line-height:34px;background:#efefef;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}tag:not(.readonly):not(.tag--editing):focus{background:#2196f3;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(.readonly):not(.tag--editing):active{background:#0d8aee;color:#fff;box-shadow:0 2px 3px 1px #d4d1d1}tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#e2e2e2;color:initial;box-shadow:0 2px 3px 1px #d4d1d1}tag.readonly{cursor:default}tag.readonly:focus,tag:focus{outline:0}tag.tag--editing{background-color:#fff;border:1px solid #ccc;cursor:text}.minimal tag{display:flex;flex-direction:row;flex-wrap:wrap;border-radius:0;background:#f9f9f9;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.minimal tag:not(.readonly):not(.tag--editing):active,.minimal tag:not(.readonly):not(.tag--editing):focus{background:#d0d0d0;color:initial}.minimal tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#ececec}.minimal tag.readonly{cursor:default}.minimal tag.readonly:focus,.minimal tag:focus{outline:0}.minimal tag.tag--editing{cursor:text}.dark tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:3px;background:#444;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.dark tag:not(.readonly):not(.tag--editing):focus{background:#efefef;color:#444}.dark tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#2b2b2b;color:#f9f9f9}.dark tag.readonly{cursor:default}.dark tag.readonly:focus,.dark tag:focus{outline:0}.dark tag.tag--editing{cursor:text}.bootstrap tag{display:flex;flex-direction:row;flex-wrap:wrap;color:#f9f9f9;border-radius:.25rem;background:#0275d8;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative}.bootstrap tag:not(.readonly):not(.tag--editing):active,.bootstrap tag:not(.readonly):not(.tag--editing):focus{background:#025aa5}.bootstrap tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#0267bf;color:#f9f9f9}.bootstrap tag.readonly{cursor:default}.bootstrap tag.readonly:focus,.bootstrap tag:focus{outline:0}.bootstrap tag.tag--editing{cursor:text}.bootstrap3-info tag{display:flex;flex-direction:row;flex-wrap:wrap;font-family:inherit;font-weight:400;font-size:95%;color:#fff;border-radius:.25em;background:#5bc0de;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;overflow:hidden;outline:0;cursor:pointer;position:relative;padding:.25em .6em;text-align:center;white-space:nowrap}.bootstrap3-info tag:not(.readonly):not(.tag--editing):active,.bootstrap3-info tag:not(.readonly):not(.tag--editing):focus{background:#28a1c5}.bootstrap3-info tag:not(:focus):not(.tag--editing):not(:active):not(.readonly):hover{background:#46b8da;color:#fff}.bootstrap3-info tag.readonly{cursor:default}.bootstrap3-info tag.readonly:focus,.bootstrap3-info tag:focus{outline:0}.bootstrap3-info tag.tag--editing{cursor:text}:host{display:block}\"]\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: DragProvider\n    }];\n  }, {\n    separatorKeys: [{\n      type: Input\n    }],\n    separatorKeyCodes: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    secondaryPlaceholder: [{\n      type: Input\n    }],\n    maxItems: [{\n      type: Input\n    }],\n    validators: [{\n      type: Input\n    }],\n    asyncValidators: [{\n      type: Input\n    }],\n    onlyFromAutocomplete: [{\n      type: Input\n    }],\n    errorMessages: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    onTextChangeDebounce: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    inputClass: [{\n      type: Input\n    }],\n    clearOnBlur: [{\n      type: Input\n    }],\n    hideForm: [{\n      type: Input\n    }],\n    addOnBlur: [{\n      type: Input\n    }],\n    addOnPaste: [{\n      type: Input\n    }],\n    pasteSplitPattern: [{\n      type: Input\n    }],\n    blinkIfDupe: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input\n    }],\n    editable: [{\n      type: Input\n    }],\n    allowDupes: [{\n      type: Input\n    }],\n    modelAsStrings: [{\n      type: Input\n    }],\n    trimTags: [{\n      type: Input\n    }],\n    ripple: [{\n      type: Input\n    }],\n    tabindex: [{\n      type: Input\n    }],\n    disable: [{\n      type: Input\n    }],\n    dragZone: [{\n      type: Input\n    }],\n    onRemoving: [{\n      type: Input\n    }],\n    onAdding: [{\n      type: Input\n    }],\n    animationDuration: [{\n      type: Input\n    }],\n    onAdd: [{\n      type: Output\n    }],\n    onRemove: [{\n      type: Output\n    }],\n    onSelect: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    onTextChange: [{\n      type: Output\n    }],\n    onPaste: [{\n      type: Output\n    }],\n    onValidationError: [{\n      type: Output\n    }],\n    onTagEdited: [{\n      type: Output\n    }],\n    inputTextChange: [{\n      type: Output\n    }],\n    inputText: [{\n      type: Input\n    }],\n    tabindexAttr: [{\n      type: HostBinding,\n      args: ['attr.tabindex']\n    }],\n    dropdown: [{\n      type: ContentChild,\n      args: [TagInputDropdown, {\n        static: false\n      }]\n    }],\n    templates: [{\n      type: ContentChildren,\n      args: [TemplateRef, {\n        descendants: false\n      }]\n    }],\n    inputForm: [{\n      type: ViewChild,\n      args: [TagInputForm, {\n        static: false\n      }]\n    }],\n    tags: [{\n      type: ViewChildren,\n      args: [TagComponent]\n    }]\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(DeleteIconComponent, [{\n    type: Component,\n    args: [{\n      selector: 'delete-icon',\n      template: \"<span>\\n    <svg\\n        height=\\\"16px\\\"\\n        viewBox=\\\"0 0 32 32\\\"\\n        width=\\\"16px\\\"\\n    >\\n        <path\\n            d=\\\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\\\"\\n            fill=\\\"#121313\\\"\\n        />\\n    </svg>\\n</span>\",\n      styles: [\".dark tag:focus{box-shadow:0 0 0 1px #323232}.ng2-tag-input.bootstrap3-info{background-color:#fff;display:inline-block;color:#555;vertical-align:middle;max-width:100%;height:42px;line-height:44px}.ng2-tag-input.bootstrap3-info input{border:none;box-shadow:none;outline:0;background-color:transparent;padding:0 6px;margin:0;width:auto;max-width:inherit}.ng2-tag-input.bootstrap3-info .form-control input::-moz-placeholder{color:#777;opacity:1}.ng2-tag-input.bootstrap3-info .form-control input:-ms-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info .form-control input::-webkit-input-placeholder{color:#777}.ng2-tag-input.bootstrap3-info input:focus{border:none;box-shadow:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--focused{box-shadow:inset 0 1px 1px rgba(0,0,0,.4);border:1px solid #ccc}.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;transition:.25s;padding:.25rem 0;min-height:32px;cursor:text;border-bottom:2px solid #efefef}.ng2-tag-input:focus{outline:0}.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #2196f3}.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #f44336}.ng2-tag-input.ng2-tag-input--loading{border:none}.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.ng2-tag-input form{margin:.1em 0}.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.minimal.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:1px solid transparent}.minimal.ng2-tag-input:focus{outline:0}.minimal.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.minimal.ng2-tag-input.ng2-tag-input--loading{border:none}.minimal.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.minimal.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.dark.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #444}.dark.ng2-tag-input:focus{outline:0}.dark.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.dark.ng2-tag-input.ng2-tag-input--loading{border:none}.dark.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.dark.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;cursor:text;border-bottom:2px solid #efefef}.bootstrap.ng2-tag-input:focus{outline:0}.bootstrap.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap.ng2-tag-input.ng2-tag-input--focused{border-bottom:2px solid #0275d8}.bootstrap.ng2-tag-input.ng2-tag-input--invalid{border-bottom:2px solid #d9534f}.bootstrap.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.bootstrap3-info.ng2-tag-input{display:block;flex-direction:row;flex-wrap:wrap;position:relative;padding:4px;cursor:text;box-shadow:inset 0 1px 1px rgba(0,0,0,.075);border-radius:4px}.bootstrap3-info.ng2-tag-input:focus{outline:0}.bootstrap3-info.ng2-tag-input.ng2-tag-input--dropping{opacity:.7}.bootstrap3-info.ng2-tag-input.ng2-tag-input--invalid{box-shadow:inset 0 1px 1px #d9534f;border-bottom:1px solid #d9534f}.bootstrap3-info.ng2-tag-input.ng2-tag-input--loading{border:none}.bootstrap3-info.ng2-tag-input.ng2-tag-input--disabled{opacity:.5;cursor:not-allowed}.bootstrap3-info.ng2-tag-input form{margin:.1em 0}.bootstrap3-info.ng2-tag-input .ng2-tags-container{flex-wrap:wrap;display:flex}.error-message{font-size:.8em;color:#f44336;margin:.5em 0 0}.bootstrap .error-message{color:#d9534f}:host(delete-icon){width:20px;height:16px;transition:.15s;display:inline-block;text-align:right}:host(delete-icon) path{fill:#444}:host(delete-icon) svg{vertical-align:bottom;height:34px}:host(delete-icon):hover{-webkit-transform:scale(1.5) translateY(-3px);transform:scale(1.5) translateY(-3px)}:host-context(.dark){text-align:right}:host-context(.dark) path{fill:#fff}:host-context(.dark) svg{vertical-align:bottom;height:34px}:host-context(.minimal){text-align:right}:host-context(.minimal) path{fill:#444}:host-context(.minimal) svg{vertical-align:bottom;height:34px}:host-context(.bootstrap){text-align:right}:host-context(.bootstrap) path{fill:#fff}:host-context(.bootstrap) svg{vertical-align:bottom;height:34px}:host-context(tag:active) path,:host-context(tag:focus) path{fill:#fff}:host-context(.darktag:active) path,:host-context(.darktag:focus) path{fill:#000}:host-context(.minimaltag:active) path,:host-context(.minimaltag:focus) path{fill:#000}:host-context(.bootstraptag:active) path,:host-context(.bootstraptag:focus) path{fill:#fff}:host-context(.bootstrap3-info){height:inherit}:host-context(.bootstrap3-info) path{fill:#fff}\"]\n    }]\n  }], null, null);\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TagInputModule, {\n    declarations: function declarations() {\n      return [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple];\n    },\n    imports: function imports() {\n      return [CommonModule, ReactiveFormsModule, FormsModule, Ng2DropdownModule];\n    },\n    exports: function exports() {\n      return [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(TagInputModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule, FormsModule, Ng2DropdownModule],\n      declarations: [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple],\n      exports: [TagInputComponent, DeleteIconComponent, TagInputForm, TagComponent, HighlightPipe, TagInputDropdown, TagRipple],\n      providers: [DragProvider, {\n        provide: COMPOSITION_BUFFER_MODE,\n        useValue: false\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DeleteIconComponent, TagComponent, TagInputComponent, TagInputDropdown, TagInputForm, TagInputModule, TagRipple, TagInputAccessor as ɵa, animations as ɵb, DragProvider as ɵc, HighlightPipe as ɵd };","map":{"version":3,"sources":["ngx-chips/core/pipes/highlight.pipe.ts","ngx-chips/core/constants/index.ts","ngx-chips/core/providers/drag-provider.ts","ngx-chips/defaults.ts","ngx-chips/core/providers/options-provider.ts","ngx-chips/core/accessor.ts","ngx-chips/core/helpers/listen.ts","ngx-chips/components/tag-input-form/tag-input-form.component.ts","ngx-chips/components/tag/tag-ripple.component.ts","ngx-chips/components/tag/tag.component.ts","ngx-chips/components/tag-input/animations.ts","ngx-chips/components/dropdown/tag-input-dropdown.component.ts","ngx-chips/components/tag-input/tag-input.ts","ngx-chips/components/icon/icon.ts","ngx-chips/tag-input.module.ts","ngx-chips/ngx-chips.ts"],"names":["tslib_1.__decorate","constants.KEYDOWN","constants.KEYUP","constants.MAX_ITEMS_WARNING","constants.KEY_PRESS_ACTIONS","constants.ACTIONS_KEYS","constants.PREV","constants.NEXT"],"mappings":"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","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    /**\n     * @name transform\n     * @param value {string}\n     * @param arg {string}\n     */\n    public transform(value: string, arg: string): string {\n        if (!arg.trim()) {\n            return value;\n        }\n\n        try {\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\n            return value.replace(regex, '<b>$1</b>');\n        } catch (e) {\n            return value;\n        }\n    }\n}\n","/*\n** constants and default values for <tag-input>\n */\n\nexport const PLACEHOLDER = '+ Tag';\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\nexport const KEYDOWN = 'keydown';\nexport const KEYUP = 'keyup';\nexport const FOCUS = 'focus';\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\n\nexport const ACTIONS_KEYS = {\n    DELETE: 'DELETE',\n    SWITCH_PREV: 'SWITCH_PREV',\n    SWITCH_NEXT: 'SWITCH_NEXT',\n    TAB: 'TAB'\n};\n\nexport const KEY_PRESS_ACTIONS = {\n    8: ACTIONS_KEYS.DELETE,\n    37: ACTIONS_KEYS.SWITCH_PREV,\n    39: ACTIONS_KEYS.SWITCH_NEXT,\n    9: ACTIONS_KEYS.TAB\n};\n\nexport const DRAG_AND_DROP_KEY = 'Text';\nexport const NEXT = 'NEXT';\nexport const PREV = 'PREV';\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\nimport { TagModel } from '../accessor';\n\nimport { Injectable } from '@angular/core';\n\nexport declare interface DraggedTag {\n    index: number;\n    tag: TagModel;\n    zone: string;\n}\n\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\n\nexport declare interface State {\n    dragging: boolean;\n    dropping: boolean;\n    index: number | undefined;\n}\n\nexport declare type StateProperty = keyof State;\n\n@Injectable()\nexport class DragProvider {\n    public sender: TagInputComponent;\n    public receiver: TagInputComponent;\n\n    public state: State = {\n        dragging: false,\n        dropping: false,\n        index: undefined\n    };\n\n    /**\n     * @name setDraggedItem\n     * @param event\n     * @param tag\n     */\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\n        if (event && event.dataTransfer) {\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\n        }\n    }\n\n    /**\n     * @name getDraggedItem\n     * @param event\n     */\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\n        if (event && event.dataTransfer) {\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\n            try {\n                return JSON.parse(data) as DraggedTag;\n            } catch {\n                return;\n            }\n        }\n    }\n\n    /**\n     * @name setSender\n     * @param sender\n     */\n    public setSender(sender: TagInputComponent): void {\n        this.sender = sender;\n    }\n\n    /**\n     * @name setReceiver\n     * @param receiver\n     */\n    public setReceiver(receiver: TagInputComponent): void {\n        this.receiver = receiver;\n    }\n\n    /**\n     * @name onTagDropped\n     * @param tag\n     * @param indexDragged\n     * @param indexDropped\n     */\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\n        this.onDragEnd();\n\n        this.sender.onRemoveRequested(tag, indexDragged);\n        this.receiver.onAddingRequested(false, tag, indexDropped);\n    }\n\n    /**\n     * @name setState\n     * @param state\n     */\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\n        this.state = { ...this.state, ...state };\n    }\n\n    /**\n     * @name getState\n     * @param key\n     */\n    public getState(key?: StateProperty): State | State[StateProperty] {\n        return key ? this.state[key] : this.state;\n    }\n\n    /**\n     * @name onDragEnd\n     */\n    public onDragEnd(): void {\n        this.setState({\n            dragging: false,\n            dropping: false,\n            index: undefined\n        });\n    }\n}\n","import { Observable } from 'rxjs';\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\n\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagModel } from './core/accessor';\n\nexport interface TagInputOptions {\n    separatorKeys: string[];\n    separatorKeyCodes: number[];\n    maxItems: number;\n    placeholder: string;\n    secondaryPlaceholder: string;\n    validators: ValidatorFn[];\n    asyncValidators: AsyncValidatorFn[];\n    onlyFromAutocomplete: boolean;\n    errorMessages: { [key: string]: string; };\n    theme: '';\n    onTextChangeDebounce: number;\n    inputId: string | null;\n    inputClass: string;\n    clearOnBlur: boolean;\n    hideForm: boolean;\n    addOnBlur: boolean;\n    addOnPaste: boolean;\n    pasteSplitPattern: string | RegExp;\n    blinkIfDupe: boolean;\n    removable: boolean;\n    editable: boolean;\n    allowDupes: boolean;\n    modelAsStrings: boolean;\n    trimTags: boolean;\n    ripple: boolean;\n    tabIndex: string;\n    disable: boolean;\n    dragZone: string;\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\n    displayBy: string;\n    identifyBy: string;\n    animationDuration: {\n        enter: string,\n        leave: string\n    };\n}\n\nexport interface TagInputDropdownOptions {\n    displayBy: string;\n    identifyBy: string;\n    appendToBody: boolean;\n    offset: string;\n    focusFirstElement: boolean;\n    showDropdownIfEmpty: boolean;\n    minimumTextLength: number;\n    limitItemsTo: number;\n    keepOpen: boolean;\n    zIndex: number;\n    dynamicUpdate: boolean;\n    matchingFn: (value: string, target: TagModel) => boolean;\n}\n\nexport const defaults = {\n    tagInput: <TagInputOptions>{\n        separatorKeys: [],\n        separatorKeyCodes: [],\n        maxItems: Infinity,\n        placeholder: PLACEHOLDER,\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\n        validators: [],\n        asyncValidators: [],\n        onlyFromAutocomplete: false,\n        errorMessages: {},\n        theme: '',\n        onTextChangeDebounce: 250,\n        inputId: null,\n        inputClass: '',\n        clearOnBlur: false,\n        hideForm: false,\n        addOnBlur: false,\n        addOnPaste: false,\n        pasteSplitPattern: ',',\n        blinkIfDupe: true,\n        removable: true,\n        editable: false,\n        allowDupes: false,\n        modelAsStrings: false,\n        trimTags: true,\n        ripple: true,\n        tabIndex: '',\n        disable: false,\n        dragZone: '',\n        onRemoving: undefined,\n        onAdding: undefined,\n        displayBy: 'display',\n        identifyBy: 'value',\n        animationDuration: {\n            enter: '250ms',\n            leave: '150ms'\n        }\n    },\n    dropdown: <TagInputDropdownOptions>{\n        displayBy: 'display',\n        identifyBy: 'value',\n        appendToBody: true,\n        offset: '50 0',\n        focusFirstElement: false,\n        showDropdownIfEmpty: false,\n        minimumTextLength: 1,\n        limitItemsTo: Infinity,\n        keepOpen: true,\n        dynamicUpdate: true,\n        zIndex: 1000,\n        matchingFn\n    }\n};\n\n/**\n * @name matchingFn\n * @param this\n * @param value\n * @param target\n */\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\n    const targetValue = target[this.displayBy].toString();\n\n    return targetValue && targetValue\n        .toLowerCase()\n        .indexOf(value.toLowerCase()) >= 0;\n}\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\n\nexport type Options = {\n    tagInput?: {\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\n    };\n    dropdown?: {\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\n    }\n};\n\nexport class OptionsProvider {\n    public static defaults = defaults;\n\n    public setOptions(options: Options): void {\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\n    }\n}\n\nexport { TagInputDropdownOptions, TagInputOptions };\n","import { ControlValueAccessor } from '@angular/forms';\nimport { Input } from '@angular/core';\nimport { OptionsProvider } from './providers/options-provider';\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\n\nexport class TagModelClass {\n    [key: string]: any;\n}\n\nexport type TagModel = string | TagModelClass;\n\nexport function isObject(obj: any): boolean {\n    return obj === Object(obj);\n}\n\nexport class TagInputAccessor implements ControlValueAccessor {\n    private _items: TagModel[] = [];\n    private _onTouchedCallback: () => void;\n    private _onChangeCallback: (items: TagModel[]) => void;\n\n    public dropdown: TagInputDropdown;\n\n    /**\n     * @name displayBy\n     */\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\n\n    /**\n     * @name identifyBy\n     */\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\n\n    public get items(): TagModel[] {\n        return this._items;\n    }\n\n    public set items(items: TagModel[]) {\n        this._items = items;\n        this._onChangeCallback(this._items);\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(items: any[]) {\n        this._items = items || [];\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    /**\n     * @name getItemValue\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemValue(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemDisplay\n     * @param item\n     * @param fromDropdown\n     */\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\n        return isObject(item) ? item[property] : item;\n    }\n\n    /**\n     * @name getItemsWithout\n     * @param index\n     */\n    protected getItemsWithout(index: number): TagModel[] {\n        return this.items.filter((item, position) => position !== index);\n    }\n}\n","\n/**\n * @name listen\n * @param listenerType\n * @param action\n * @param condition\n */\nexport function listen(listenerType: string, action: () => any, condition = true): void {\n    // if the event provided does not exist, throw an error\n    if (!this.listeners.hasOwnProperty(listenerType)) {\n        throw new Error('The event entered may be wrong');\n    }\n\n    // if a condition is present and is false, exit early\n    if (!condition) {\n        return;\n    }\n\n    // fire listener\n    this.listeners[listenerType].push(action);\n}\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\n\n@Component({\n    selector: 'tag-input-form',\n    styleUrls: ['./tag-input-form.style.scss'],\n    templateUrl: './tag-input-form.template.html'\n})\nexport class TagInputForm implements OnInit, OnChanges {\n    /**\n     * @name onSubmit\n     */\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onBlur\n     */\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onFocus\n     */\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeyup\n     */\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name onKeydown\n     */\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\n\n    /**\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    // inputs\n\n    /**\n     * @name placeholder\n     */\n    @Input() public placeholder: string;\n\n    /**\n     * @name validators\n     */\n    @Input() public validators: ValidatorFn[] = [];\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\n\n    /**\n     * @name inputId\n     */\n    @Input() public inputId: string;\n\n    /**\n     * @name inputClass\n     */\n    @Input() public inputClass: string;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex = '';\n\n    /**\n     * @name disabled\n     */\n    @Input() public disabled = false;\n\n    /**\n     * @name input\n     */\n    @ViewChild('input', { static: false }) public input;\n\n    /**\n     * @name form\n     */\n    public form: FormGroup;\n\n    /**\n     * @name inputText\n     */\n    @Input()\n    public get inputText(): string {\n        return this.item.value;\n    }\n\n    /**\n     * @name inputText\n     * @param text {string}\n     */\n    public set inputText(text: string) {\n        this.item.setValue(text);\n\n        this.inputTextChange.emit(text);\n    }\n\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\n\n    ngOnInit() {\n        this.item.setValidators(this.validators);\n        this.item.setAsyncValidators(this.asyncValidators);\n\n        // creating form\n        this.form = new FormGroup({\n            item: this.item\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.disabled && !changes.disabled.firstChange) {\n            if (changes.disabled.currentValue) {\n                this.form.controls['item'].disable();\n            } else {\n                this.form.controls['item'].enable();\n            }\n        }\n    }\n\n    /**\n     * @name value\n     */\n    public get value(): FormControl {\n        return this.form.get('item') as FormControl;\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        const doc = typeof document !== 'undefined' ? document : undefined;\n        return doc ? doc.activeElement === this.input.nativeElement : false;\n    }\n\n    /**\n     * @name getErrorMessages\n     * @param messages\n     */\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\n        return Object.keys(messages)\n            .filter(err => this.value.hasError(err))\n            .map(err => messages[err]);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        const { dirty, value, valid } = this.form;\n        return dirty && value.item && !valid;\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.input.nativeElement.focus();\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.input.nativeElement.blur();\n    }\n\n    /**\n     * @name getElementPosition\n     */\n    public getElementPosition(): ClientRect {\n        return this.input.nativeElement.getBoundingClientRect();\n    }\n\n    /**\n     * - removes input from the component\n     * @name destroy\n     */\n    public destroy(): void {\n        const input = this.input.nativeElement;\n        input.parentElement.removeChild(input);\n    }\n\n    /**\n     * @name onKeyDown\n     * @param $event\n     */\n    public onKeyDown($event) {\n        this.inputText = this.value.value;\n        if ($event.key === 'Enter') {\n            this.submit($event);\n        } else {\n          return this.onKeydown.emit($event);\n        }\n    }\n\n    /**\n     * @name onKeyUp\n     * @param $event\n     */\n    public onKeyUp($event) {\n        this.inputText = this.value.value;\n        return this.onKeyup.emit($event);\n    }\n\n    /**\n     * @name submit\n     */\n    public submit($event: any): void {\n        $event.preventDefault();\n        this.onSubmit.emit($event);\n    }\n}\n","import {\n    Component,\n    Input\n} from '@angular/core';\n\n\nimport {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state\n} from '@angular/animations';\n\n@Component({\n    selector: 'tag-ripple',\n    styles: [`\n        :host {\n            width: 100%;\n            height: 100%;\n            left: 0;\n            overflow: hidden;\n            position: absolute;\n        }\n\n        .tag-ripple {\n            background: rgba(0, 0, 0, 0.1);\n            top: 50%;\n            left: 50%;\n            height: 100%;\n            transform: translate(-50%, -50%);\n            position: absolute;\n        }\n    `],\n    template: `\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\n    `,\n    animations: [\n        trigger('ink', [\n            state('none', style({width: 0, opacity: 0})),\n            transition('none => clicked', [\n                animate(300, keyframes([\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\n                ]))\n            ])\n        ])\n    ]\n})\nexport class TagRipple {\n    @Input() public state = 'none';\n}\n","import {\n    Component,\n    Input,\n    Output,\n    EventEmitter,\n    TemplateRef,\n    ElementRef,\n    HostListener,\n    HostBinding,\n    ViewChild,\n    ChangeDetectorRef,\n    Renderer2\n} from '@angular/core';\n\nimport { TagModel } from '../../core/accessor';\nimport { TagRipple } from '../tag/tag-ripple.component';\nimport { EventLike } from '../../core/helpers/event-like';\n\n// mocking navigator\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\n    userAgent: 'Chrome',\n    vendor: 'Google Inc'\n};\n\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n\n@Component({\n    selector: 'tag',\n    templateUrl: './tag.template.html',\n    styleUrls: ['./tag-component.style.scss']\n})\nexport class TagComponent {\n    /**\n     * @name model {TagModel}\n     */\n    @Input()\n    public model: TagModel;\n\n    /**\n     * @name removable {boolean}\n     */\n    @Input()\n    public removable: boolean;\n\n    /**\n     * @name editable {boolean}\n     */\n    @Input()\n    public editable: boolean;\n\n    /**\n     * @name template {TemplateRef<any>}\n     */\n    @Input()\n    public template: TemplateRef<any>;\n\n    /**\n     * @name displayBy {string}\n     */\n    @Input()\n    public displayBy: string;\n\n    /**\n     * @name identifyBy {string}\n     */\n    @Input()\n    public identifyBy: string;\n\n    /**\n     * @name index {number}\n     */\n    @Input()\n    public index: number;\n\n    /**\n     * @name hasRipple\n     */\n    @Input()\n    public hasRipple: boolean;\n\n    /**\n     * @name disabled\n     */\n    @Input()\n    public disabled = false;\n\n    /**\n     * @name canAddTag\n     */\n    @Input()\n    public canAddTag: (tag: TagModel) => boolean;\n\n    /**\n     * @name onSelect\n     */\n    @Output()\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     */\n    @Output()\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onBlur\n     */\n    @Output()\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name onKeyDown\n     */\n    @Output()\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\n\n    /**\n     * @name onTagEdited\n     */\n    @Output()\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\n\n    /**\n     * @name readonly {boolean}\n     */\n    public get readonly(): boolean {\n        return typeof this.model !== 'string' && this.model.readonly === true;\n    }\n\n    /**\n     * @name editing\n     */\n    public editing = false;\n\n    /**\n     * @name moving\n     */\n    @HostBinding('class.moving')\n    public moving: boolean;\n\n    /**\n     * @name rippleState\n     */\n    public rippleState = 'none';\n\n    /**\n     * @name ripple {TagRipple}\n     */\n    @ViewChild(TagRipple, { static: false })\n    public ripple: TagRipple;\n\n    constructor(\n        public element: ElementRef,\n        public renderer: Renderer2,\n        private cdRef: ChangeDetectorRef\n    ) {}\n\n    /**\n     * @name select\n     */\n    public select($event?: MouseEvent): void {\n        if (this.readonly || this.disabled) {\n            return;\n        }\n\n        if ($event) {\n            $event.stopPropagation();\n        }\n\n        this.focus();\n\n        this.onSelect.emit(this.model);\n    }\n\n    /**\n     * @name remove\n     */\n    public remove($event: MouseEvent): void {\n        $event.stopPropagation();\n        this.onRemove.emit(this);\n    }\n\n    /**\n     * @name focus\n     */\n    public focus(): void {\n        this.element.nativeElement.focus();\n    }\n\n    public move(): void {\n        this.moving = true;\n    }\n\n    /**\n     * @name keydown\n     * @param event\n     */\n    @HostListener('keydown', ['$event'])\n    public keydown(event: EventLike): void {\n        if (this.editing) {\n            if (event.keyCode === 13) {\n                return this.disableEditMode(event);\n            }\n        } else {\n            this.onKeyDown.emit({ event, model: this.model });\n        }\n    }\n\n    /**\n     * @name blink\n     */\n    public blink(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('blink');\n\n        setTimeout(() => classList.remove('blink'), 50);\n    }\n\n    /**\n     * @name toggleEditMode\n     */\n    public toggleEditMode(): void {\n        if (this.editable) {\n            return this.editing ? undefined : this.activateEditMode();\n        }\n    }\n\n    /**\n     * @name onBlurred\n     * @param event\n     */\n    public onBlurred(event: any): void {\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\n        if (!this.editable) {\n            return;\n        }\n\n        this.disableEditMode();\n\n        const value: string = event.target.innerText;\n        const result =\n            typeof this.model === 'string'\n                ? value\n                : { ...this.model, [this.displayBy]: value };\n\n        this.onBlur.emit(result);\n    }\n\n    /**\n     * @name getDisplayValue\n     * @param item\n     */\n    public getDisplayValue(item: TagModel): string {\n        return typeof item === 'string' ? item : item[this.displayBy];\n    }\n\n    /**\n     * @desc returns whether the ripple is visible or not\n     * only works in Chrome\n     * @name isRippleVisible\n     */\n    public get isRippleVisible(): boolean {\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\n    }\n\n    /**\n     * @name disableEditMode\n     * @param $event\n     */\n    public disableEditMode($event?: EventLike): void {\n        const classList = this.element.nativeElement.classList;\n        const input = this.getContentEditableText();\n\n        this.editing = false;\n        classList.remove('tag--editing');\n\n        if (!input) {\n            this.setContentEditableText(this.model);\n            return;\n        }\n\n        this.storeNewValue(input);\n        this.cdRef.detectChanges();\n\n        if ($event) {\n            $event.preventDefault();\n        }\n    }\n\n    /**\n     * @name isDeleteIconVisible\n     */\n    public isDeleteIconVisible(): boolean {\n        return (\n            !this.readonly && !this.disabled && this.removable && !this.editing\n        );\n    }\n\n    /**\n     * @name getContentEditableText\n     */\n    private getContentEditableText(): string {\n        const input = this.getContentEditable();\n\n        return input ? input.innerText.trim() : '';\n    }\n\n    /**\n     * @name setContentEditableText\n     * @param model\n     */\n    private setContentEditableText(model: TagModel) {\n        const input = this.getContentEditable();\n        const value = this.getDisplayValue(model);\n\n        input.innerText = value;\n    }\n\n    /**\n     * @name\n     */\n    private activateEditMode(): void {\n        const classList = this.element.nativeElement.classList;\n        classList.add('tag--editing');\n\n        this.editing = true;\n    }\n\n    /**\n     * @name storeNewValue\n     * @param input\n     */\n    private storeNewValue(input: string): void {\n        const exists = (tag: TagModel) => {\n            return typeof tag === 'string'\n                ? tag === input\n                : tag[this.displayBy] === input;\n        };\n\n        const hasId = () => {\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\n        };\n\n        // if the value changed, replace the value in the model\n        if (exists(this.model)) {\n            return;\n        }\n\n        const model =\n            typeof this.model === 'string'\n                ? input\n                : {\n                      index: this.index,\n                      [this.identifyBy]: hasId()\n                          ? this.model[this.identifyBy]\n                          : input,\n                      [this.displayBy]: input\n                  };\n\n        if (this.canAddTag(model)) {\n            this.onTagEdited.emit({ tag: model, index: this.index });\n        } else {\n            this.setContentEditableText(this.model);\n        }\n    }\n\n    /**\n     * @name getContentEditable\n     */\n    private getContentEditable(): HTMLInputElement {\n        return this.element.nativeElement.querySelector('[contenteditable]');\n    }\n}\n","import {\n    animate,\n    trigger,\n    style,\n    transition,\n    keyframes,\n    state,\n    AnimationTriggerMetadata\n} from '@angular/animations';\n\n/**\n * @name animations\n */\nexport const animations = [\n    trigger('animation', [\n        state('in', style({\n            opacity: 1\n        })),\n        state('out', style({\n            opacity: 0\n        })),\n        transition(':enter', [\n            animate('{{ enter }}', keyframes([\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\n            ]))\n        ]),\n        transition(':leave', [\n            animate('{{ leave }}', keyframes([\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\n            ]))\n        ])\n    ])\n];\n","import {\n  Component,\n  ContentChildren,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  AfterViewInit\n} from '@angular/core';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { filter, first, debounceTime } from 'rxjs/operators';\n\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\nimport { defaults } from '../../defaults';\nimport { TagModel } from '../../core/accessor';\nimport { TagInputComponent } from '../tag-input/tag-input';\n\n@Component({\n  selector: 'tag-input-dropdown',\n  templateUrl: './tag-input-dropdown.template.html'\n})\nexport class TagInputDropdown implements AfterViewInit {\n  /**\n   * @name dropdown\n   */\n  @ViewChild(Ng2Dropdown, { static: false }) public dropdown: Ng2Dropdown;\n\n  /**\n   * @name menuTemplate\n   * @desc reference to the template if provided by the user\n   */\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\n\n  /**\n   * @name offset\n   */\n  @Input() public offset: string = defaults.dropdown.offset;\n\n  /**\n   * @name focusFirstElement\n   */\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\n\n  /**\n   * - show autocomplete dropdown if the value of input is empty\n   * @name showDropdownIfEmpty\n   */\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\n\n  /**\n   * @description observable passed as input which populates the autocomplete items\n   * @name autocompleteObservable\n   */\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\n\n  /**\n   * - desc minimum text length in order to display the autocomplete dropdown\n   * @name minimumTextLength\n   */\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\n\n  /**\n   * - number of items to display in the autocomplete dropdown\n   * @name limitItemsTo\n   */\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\n\n  /**\n   * @name displayBy\n   */\n  @Input() public displayBy = defaults.dropdown.displayBy;\n\n  /**\n   * @name identifyBy\n   */\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\n\n  /**\n   * @description a function a developer can use to implement custom matching for the autocomplete\n   * @name matchingFn\n   */\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\n    defaults.dropdown.matchingFn;\n\n  /**\n   * @name appendToBody\n   */\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\n\n  /**\n   * @name keepOpen\n   * @description option to leave dropdown open when adding a new item\n   */\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\n\n  /**\n   * @name dynamicUpdate\n   */\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\n\n  /**\n   * @name zIndex\n   */\n  @Input() public zIndex = defaults.dropdown.zIndex;\n\n  /**\n   * list of items that match the current value of the input (for autocomplete)\n   * @name items\n   */\n  public items: TagModel[] = [];\n\n  /**\n   * @name tagInput\n   */\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\n\n  /**\n   * @name _autocompleteItems\n   */\n  private _autocompleteItems: TagModel[] = [];\n\n  /**\n   * @name autocompleteItems\n   * @param items\n   */\n  public set autocompleteItems(items: TagModel[]) {\n    this._autocompleteItems = items;\n  }\n\n  /**\n   * @name autocompleteItems\n   * @desc array of items that will populate the autocomplete\n   */\n  @Input() public get autocompleteItems(): TagModel[] {\n    const items = this._autocompleteItems;\n\n    if (!items) {\n      return [];\n    }\n\n    return items.map((item: TagModel) => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n  }\n\n  constructor(private readonly injector: Injector) {}\n\n  /**\n   * @name ngAfterviewInit\n   */\n  ngAfterViewInit(): void {\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\n      this.requestAdding(item);\n    });\n\n    // reset itemsMatching array when the dropdown is hidden\n    this.onHide().subscribe(this.resetItems);\n\n    const DEBOUNCE_TIME = 200;\n    const KEEP_OPEN = this.keepOpen;\n\n    this.tagInput.onTextChange\n      .asObservable()\n      .pipe(\n        debounceTime(DEBOUNCE_TIME),\n        filter((value: string) => {\n          if (KEEP_OPEN === false) {\n            return value.length > 0;\n          }\n\n          return true;\n        })\n      )\n      .subscribe(this.show);\n  }\n\n  /**\n   * @name updatePosition\n   */\n  public updatePosition(): void {\n    const position = this.tagInput.inputForm.getElementPosition();\n\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\n  }\n\n  /**\n   * @name isVisible\n   */\n  public get isVisible(): boolean {\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\n  }\n\n  /**\n   * @name onHide\n   */\n  public onHide(): EventEmitter<Ng2Dropdown> {\n    return this.dropdown.onHide;\n  }\n\n  /**\n   * @name onItemClicked\n   */\n  public onItemClicked(): EventEmitter<string> {\n    return this.dropdown.onItemClicked;\n  }\n\n  /**\n   * @name selectedItem\n   */\n  public get selectedItem(): Ng2MenuItem {\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\n  }\n\n  /**\n   * @name state\n   */\n  public get state(): any {\n    return this.dropdown.menu.dropdownState;\n  }\n\n  /**\n   *\n   * @name show\n   */\n  public show = (): void => {\n    const maxItemsReached =\n      this.tagInput.items.length === this.tagInput.maxItems;\n    const value = this.getFormValue();\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\n    const position = this.calculatePosition();\n    const items = this.getMatchingItems(value);\n    const hasItems = items.length > 0;\n    const isHidden = this.isVisible === false;\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\n    const isDisabled = this.tagInput.disable;\n\n    const shouldShow =\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\n    const shouldHide = this.isVisible && !hasItems;\n\n    if (this.autocompleteObservable && hasMinimumText) {\n      return this.getItemsFromObservable(value);\n    }\n\n    if (\n      (!this.showDropdownIfEmpty && !value) ||\n      maxItemsReached ||\n      isDisabled\n    ) {\n      return this.dropdown.hide();\n    }\n\n    this.setItems(items);\n\n    if (shouldShow) {\n      this.dropdown.show(position);\n    } else if (shouldHide) {\n      this.hide();\n    }\n  };\n\n  /**\n   * @name hide\n   */\n  public hide(): void {\n    this.resetItems();\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name scrollListener\n   */\n  @HostListener('window:scroll')\n  public scrollListener(): void {\n    if (!this.isVisible || !this.dynamicUpdate) {\n      return;\n    }\n\n    this.updatePosition();\n  }\n\n  /**\n   * @name onWindowBlur\n   */\n  @HostListener('window:blur')\n  public onWindowBlur(): void {\n    this.dropdown.hide();\n  }\n\n  /**\n   * @name getFormValue\n   */\n  private getFormValue(): string {\n    const formValue = this.tagInput.formValue;\n    return formValue ? formValue.toString().trim() : '';\n  }\n\n  /**\n   * @name calculatePosition\n   */\n  private calculatePosition(): ClientRect {\n    return this.tagInput.inputForm.getElementPosition();\n  }\n\n  /**\n   * @name requestAdding\n   * @param item {Ng2MenuItem}\n   */\n  private requestAdding = async (item: Ng2MenuItem) => {\n    const tag = this.createTagModel(item);\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\n  };\n\n  /**\n   * @name createTagModel\n   * @param item\n   */\n  private createTagModel(item: Ng2MenuItem): TagModel {\n    const display =\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\n    const value =\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\n\n    return {\n      ...item.value,\n      [this.tagInput.displayBy]: display,\n      [this.tagInput.identifyBy]: value\n    };\n  }\n\n  /**\n   *\n   * @param value {string}\n   */\n  private getMatchingItems(value: string): TagModel[] {\n    if (!value && !this.showDropdownIfEmpty) {\n      return [];\n    }\n\n    const dupesAllowed = this.tagInput.allowDupes;\n\n    return this.autocompleteItems.filter((item: TagModel) => {\n      const hasValue = dupesAllowed\n        ? false\n        : this.tagInput.tags.some(tag => {\n            const identifyBy = this.tagInput.identifyBy;\n            const model =\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\n\n            return model === item[this.identifyBy];\n          });\n\n      return this.matchingFn(value, item) && hasValue === false;\n    });\n  }\n\n  /**\n   * @name setItems\n   */\n  private setItems(items: TagModel[]): void {\n    this.items = items.slice(0, this.limitItemsTo || items.length);\n  }\n\n  /**\n   * @name resetItems\n   */\n  private resetItems = (): void => {\n    this.items = [];\n  };\n\n  /**\n   * @name populateItems\n   * @param data\n   */\n  private populateItems(data: any): TagInputDropdown {\n    this.autocompleteItems = data.map(item => {\n      return typeof item === 'string'\n        ? {\n            [this.displayBy]: item,\n            [this.identifyBy]: item\n          }\n        : item;\n    });\n\n    return this;\n  }\n\n  /**\n   * @name getItemsFromObservable\n   * @param text\n   */\n  private getItemsFromObservable = (text: string): void => {\n    this.setLoadingState(true);\n\n    const subscribeFn = (data: any[]) => {\n      // hide loading animation\n      this.setLoadingState(false)\n        // add items\n        .populateItems(data);\n\n      this.setItems(this.getMatchingItems(text));\n\n      if (this.items.length) {\n        this.dropdown.show(this.calculatePosition());\n      } else {\n        this.dropdown.hide();\n      }\n    };\n\n    this.autocompleteObservable(text)\n      .pipe(first())\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\n  };\n\n  /**\n   * @name setLoadingState\n   * @param state\n   */\n  private setLoadingState(state: boolean): TagInputDropdown {\n    this.tagInput.isLoading = state;\n\n    return this;\n  }\n}\n","// angular\nimport {\n    Component,\n    forwardRef,\n    HostBinding,\n    Input,\n    Output,\n    EventEmitter,\n    Renderer2,\n    ViewChild,\n    ViewChildren,\n    ContentChildren,\n    ContentChild,\n    OnInit,\n    TemplateRef,\n    QueryList,\n    AfterViewInit\n} from '@angular/core';\n\nimport {\n    AsyncValidatorFn,\n    FormControl,\n    NG_VALUE_ACCESSOR,\n    ValidatorFn\n} from '@angular/forms';\n\n// rx\nimport { Observable } from 'rxjs';\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\n\n// ng2-tag-input\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\nimport { listen } from '../../core/helpers/listen';\nimport * as constants from '../../core/constants';\n\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\n\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\nimport { TagComponent } from '../tag/tag.component';\n\nimport { animations } from './animations';\nimport { defaults } from '../../defaults';\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\n\n// angular universal hacks\n/* tslint:disable-next-line */\nconst DragEvent = (window as any).DragEvent;\n\nconst CUSTOM_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => TagInputComponent),\n    multi: true\n};\n@Component({\n    selector: 'tag-input',\n    providers: [CUSTOM_ACCESSOR],\n    styleUrls: ['./tag-input.style.scss'],\n    templateUrl: './tag-input.template.html',\n    animations\n})\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\n    /**\n     * @name separatorKeys\n     * @desc keyboard keys with which a user can separate items\n     */\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\n\n    /**\n     * @name separatorKeyCodes\n     * @desc keyboard key codes with which a user can separate items\n     */\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\n\n    /**\n     * @name placeholder\n     * @desc the placeholder of the input text\n     */\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\n\n    /**\n     * @name secondaryPlaceholder\n     * @desc placeholder to appear when the input is empty\n     */\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\n\n    /**\n     * @name maxItems\n     * @desc maximum number of items that can be added\n     */\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\n\n    /**\n     * @name validators\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\n\n    /**\n     * @name asyncValidators\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\n     */\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\n\n    /**\n    * - if set to true, it will only possible to add items from the autocomplete\n    * @name onlyFromAutocomplete\n    */\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\n\n    /**\n     * @name errorMessages\n     */\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\n\n    /**\n     * @name theme\n     */\n    @Input() public theme: string = defaults.tagInput.theme;\n\n    /**\n     * @name onTextChangeDebounce\n     */\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\n\n    /**\n     * - custom id assigned to the input\n     * @name id\n     */\n    @Input() public inputId = defaults.tagInput.inputId;\n\n    /**\n     * - custom class assigned to the input\n     */\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\n\n    /**\n     * - option to clear text input when the form is blurred\n     * @name clearOnBlur\n     */\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\n\n    /**\n     * - hideForm\n     * @name clearOnBlur\n     */\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\n\n    /**\n     * @name addOnBlur\n     */\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\n\n    /**\n     * @name addOnPaste\n     */\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\n\n    /**\n     * - pattern used with the native method split() to separate patterns in the string pasted\n     * @name pasteSplitPattern\n     */\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\n\n    /**\n     * @name blinkIfDupe\n     */\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\n\n    /**\n     * @name removable\n     */\n    @Input() public removable = defaults.tagInput.removable;\n\n    /**\n     * @name editable\n     */\n    @Input() public editable: boolean = defaults.tagInput.editable;\n\n    /**\n     * @name allowDupes\n     */\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\n\n    /**\n     * @description if set to true, the newly added tags will be added as strings, and not objects\n     * @name modelAsStrings\n     */\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\n\n    /**\n     * @name trimTags\n     */\n    @Input() public trimTags = defaults.tagInput.trimTags;\n\n    /**\n     * @name inputText\n     */\n    @Input() public get inputText(): string {\n        return this.inputTextValue;\n    }\n\n    /**\n     * @name ripple\n     */\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\n\n    /**\n     * @name tabindex\n     * @desc pass through the specified tabindex to the input\n     */\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\n\n    /**\n     * @name disable\n     */\n    @Input() public disable: boolean = defaults.tagInput.disable;\n\n    /**\n     * @name dragZone\n     */\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\n\n    /**\n     * @name onRemoving\n     */\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\n\n    /**\n     * @name onAdding\n     */\n    @Input() public onAdding = defaults.tagInput.onAdding;\n\n    /**\n     * @name animationDuration\n     */\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\n\n    /**\n     * @name onAdd\n     * @desc event emitted when adding a new item\n     */\n    @Output() public onAdd = new EventEmitter<TagModel>();\n\n    /**\n     * @name onRemove\n     * @desc event emitted when removing an existing item\n     */\n    @Output() public onRemove = new EventEmitter<TagModel>();\n\n    /**\n     * @name onSelect\n     * @desc event emitted when selecting an item\n     */\n    @Output() public onSelect = new EventEmitter<TagModel>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is focused\n     */\n    @Output() public onFocus = new EventEmitter<string>();\n\n    /**\n     * @name onFocus\n     * @desc event emitted when the input is blurred\n     */\n    @Output() public onBlur = new EventEmitter<string>();\n\n    /**\n     * @name onTextChange\n     * @desc event emitted when the input value changes\n     */\n    @Output() public onTextChange = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when text is pasted in the form\n     * @name onPaste\n     */\n    @Output() public onPaste = new EventEmitter<string>();\n\n    /**\n     * - output triggered when tag entered is not valid\n     * @name onValidationError\n     */\n    @Output() public onValidationError = new EventEmitter<TagModel>();\n\n    /**\n     * - output triggered when tag is edited\n     * @name onTagEdited\n     */\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\n\n    /**\n     * @name dropdown\n     */\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\n    @ContentChild(TagInputDropdown, { static: false }) public dropdown: TagInputDropdown;\n    /**\n     * @name template\n     * @desc reference to the template if provided by the user\n     */\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\n\n    /**\n     * @name inputForm\n     */\n    @ViewChild(TagInputForm, { static: false }) public inputForm: TagInputForm;\n\n    /**\n     * @name selectedTag\n     * @desc reference to the current selected tag\n     */\n    public selectedTag: TagModel | undefined;\n\n    /**\n     * @name isLoading\n     */\n    public isLoading = false;\n\n    /**\n     * @name inputText\n     * @param text\n     */\n    public set inputText(text: string) {\n        this.inputTextValue = text;\n        this.inputTextChange.emit(text);\n    }\n\n    /**\n     * @name tags\n     * @desc list of Element items\n     */\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\n\n    /**\n     * @name listeners\n     * @desc array of events that get fired using @fireEvents\n     */\n    private listeners = {\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\n        [constants.KEYUP]: <{ (fun): any }[]>[]\n    };\n\n    /**\n     * @description emitter for the 2-way data binding inputText value\n     * @name inputTextChange\n     */\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\n\n    /**\n     * @description private variable to bind get/set\n     * @name inputTextValue\n     */\n    public inputTextValue = '';\n\n    /**\n     * @desc removes the tab index if it is set - it will be passed through to the input\n     * @name tabindexAttr\n     */\n    @HostBinding('attr.tabindex')\n    public get tabindexAttr(): string {\n        return this.tabindex !== '' ? '-1' : '';\n    }\n\n    /**\n     * @name animationMetadata\n     */\n    public animationMetadata: { value: string, params: object };\n\n    public errors: string[] = [];\n\n    public isProgressBarVisible$: Observable<boolean>;\n\n    constructor(private readonly renderer: Renderer2,\n        public readonly dragProvider: DragProvider) {\n        super();\n    }\n\n    /**\n     * @name ngAfterViewInit\n     */\n    public ngAfterViewInit(): void {\n        // set up listeners\n\n        this.setUpKeypressListeners();\n        this.setupSeparatorKeysListener();\n        this.setUpInputKeydownListeners();\n\n        if (this.onTextChange.observers.length) {\n            this.setUpTextChangeSubscriber();\n        }\n\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\n        if (this.clearOnBlur || this.addOnBlur) {\n            this.setUpOnBlurSubscriber();\n        }\n\n        // if addOnPaste is set to true, register the handler and add items\n        if (this.addOnPaste) {\n            this.setUpOnPasteListener();\n        }\n\n        const statusChanges$ = this.inputForm.form.statusChanges;\n\n        statusChanges$.pipe(\n            filter((status: string) => status !== 'PENDING')\n        ).subscribe(() => {\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\n        });\n\n        this.isProgressBarVisible$ = statusChanges$.pipe(\n            map((status: string) => {\n                return status === 'PENDING' || this.isLoading;\n            })\n        );\n\n        // if hideForm is set to true, remove the input\n        if (this.hideForm) {\n            this.inputForm.destroy();\n        }\n    }\n\n    /**\n     * @name ngOnInit\n     */\n    public ngOnInit(): void {\n        // if the number of items specified in the model is > of the value of maxItems\n        // degrade gracefully and let the max number of items to be the number of items in the model\n        // though, warn the user.\n        const hasReachedMaxItems = this.maxItems !== undefined &&\n            this.items &&\n            this.items.length > this.maxItems;\n\n        if (hasReachedMaxItems) {\n            this.maxItems = this.items.length;\n            console.warn(constants.MAX_ITEMS_WARNING);\n        }\n\n        // Setting editable to false to fix problem with tags in IE still being editable when\n        // onlyFromAutocomplete is true\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\n\n        this.setAnimationMetadata();\n    }\n\n    /**\n     * @name onRemoveRequested\n     * @param tag\n     * @param index\n     */\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\n        return new Promise(resolve => {\n            const subscribeFn = (model: TagModel) => {\n                this.removeItem(model, index);\n                resolve(tag);\n            };\n\n            this.onRemoving ?\n                this.onRemoving(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name onAddingRequested\n     * @param fromAutocomplete {boolean}\n     * @param tag {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\n        return new Promise((resolve, reject) => {\n            const subscribeFn = (model: TagModel) => {\n                return this\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            return this.onAdding ?\n                this.onAdding(tag)\n                    .pipe(first())\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\n        });\n    }\n\n    /**\n     * @name appendTag\n     * @param tag {TagModel}\n     */\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\n        const items = this.items;\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\n\n        this.items = [\n            ...items.slice(0, index),\n            model,\n            ...items.slice(index, items.length)\n        ];\n    }\n\n    /**\n     * @name createTag\n     * @param model\n     */\n    public createTag = (model: TagModel): TagModel => {\n        const trim = (val: TagModel, key: string): TagModel => {\n            return typeof val === 'string' ? val.trim() : val[key];\n        };\n\n        return {\n            ...typeof model !== 'string' ? model : {},\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\n        };\n    }\n\n    /**\n     * @name selectItem\n     * @desc selects item passed as parameter as the selected tag\n     * @param item\n     * @param emit\n     */\n    public selectItem(item: TagModel | undefined, emit = true): void {\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\n\n        if (isReadonly || this.selectedTag === item) {\n            return;\n        }\n\n        this.selectedTag = item;\n\n        if (emit) {\n            this.onSelect.emit(item);\n        }\n    }\n\n    /**\n     * @name fireEvents\n     * @desc goes through the list of the events for a given eventName, and fires each of them\n     * @param eventName\n     * @param $event\n     */\n    public fireEvents(eventName: string, $event?): void {\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\n    }\n\n    /**\n     * @name handleKeydown\n     * @desc handles action when the user hits a keyboard key\n     * @param data\n     */\n    public handleKeydown(data: any): void {\n        const event = data.event;\n        const key = event.keyCode || event.which;\n        const shiftKey = event.shiftKey || false;\n\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\n            case constants.ACTIONS_KEYS.DELETE:\n                if (this.selectedTag && this.removable) {\n                    const index = this.items.indexOf(this.selectedTag);\n                    this.onRemoveRequested(this.selectedTag, index);\n                }\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\n                this.moveToTag(data.model, constants.PREV);\n                break;\n\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\n                this.moveToTag(data.model, constants.NEXT);\n                break;\n\n            case constants.ACTIONS_KEYS.TAB:\n                if (shiftKey) {\n                    if (this.isFirstTag(data.model)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.PREV);\n                } else {\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\n                        return;\n                    }\n\n                    this.moveToTag(data.model, constants.NEXT);\n                }\n                break;\n\n            default:\n                return;\n        }\n\n        // prevent default behaviour\n        event.preventDefault();\n    }\n\n    public async onFormSubmit() {\n        try {\n            await this.onAddingRequested(false, this.formValue);\n        } catch {\n            return;\n        }\n    }\n\n    /**\n     * @name setInputValue\n     * @param value\n     */\n    public setInputValue(value: string, emitEvent = true): void {\n        const control = this.getControl();\n\n        // update form value with the transformed item\n        control.setValue(value, { emitEvent });\n    }\n\n    /**\n     * @name getControl\n     */\n    private getControl(): FormControl {\n        return this.inputForm.value as FormControl;\n    }\n\n    /**\n     * @name focus\n     * @param applyFocus\n     * @param displayAutocomplete\n     */\n    public focus(applyFocus = false, displayAutocomplete = false): void {\n        if (this.dragProvider.getState('dragging')) {\n            return;\n        }\n\n        this.selectItem(undefined, false);\n\n        if (applyFocus) {\n            this.inputForm.focus();\n            this.onFocus.emit(this.formValue);\n        }\n    }\n\n    /**\n     * @name blur\n     */\n    public blur(): void {\n        this.onTouched();\n\n        this.onBlur.emit(this.formValue);\n    }\n\n    /**\n     * @name hasErrors\n     */\n    public hasErrors(): boolean {\n        return !!this.inputForm && this.inputForm.hasErrors();\n    }\n\n    /**\n     * @name isInputFocused\n     */\n    public isInputFocused(): boolean {\n        return !!this.inputForm && this.inputForm.isInputFocused();\n    }\n\n    /**\n     * - this is the one way I found to tell if the template has been passed and it is not\n     * the template for the menu item\n     * @name hasCustomTemplate\n     */\n    public hasCustomTemplate(): boolean {\n        const template = this.templates ? this.templates.first : undefined;\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\n            this.dropdown.templates.first : undefined;\n\n        return Boolean(template && template !== menuTemplate);\n    }\n\n    /**\n     * @name maxItemsReached\n     */\n    public get maxItemsReached(): boolean {\n        return this.maxItems !== undefined &&\n            this.items.length >= this.maxItems;\n    }\n\n    /**\n     * @name formValue\n     */\n    public get formValue(): string {\n        const form = this.inputForm.value;\n\n        return form ? form.value : '';\n    }\n\n    /**3\n     * @name onDragStarted\n     * @param event\n     * @param index\n     */\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\n        event.stopPropagation();\n\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\n\n        this.dragProvider.setSender(this);\n        this.dragProvider.setDraggedItem(event, item);\n        this.dragProvider.setState({ dragging: true, index });\n    }\n\n    /**\n     * @name onDragOver\n     * @param event\n     */\n    public onDragOver(event: DragEvent, index?: number): void {\n        this.dragProvider.setState({ dropping: true });\n        this.dragProvider.setReceiver(this);\n\n        event.preventDefault();\n    }\n\n    /**\n     * @name onTagDropped\n     * @param event\n     * @param index\n     */\n    public onTagDropped(event: DragEvent, index?: number): void {\n        const item = this.dragProvider.getDraggedItem(event);\n\n        if (!item || item.zone !== this.dragZone) {\n            return;\n        }\n\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\n\n        event.preventDefault();\n        event.stopPropagation();\n    }\n\n    /**\n     * @name isDropping\n     */\n    public isDropping(): boolean {\n        const isReceiver = this.dragProvider.receiver === this;\n        const isDropping = this.dragProvider.getState('dropping');\n\n        return Boolean(isReceiver && isDropping);\n    }\n\n    /**\n     * @name onTagBlurred\n     * @param changedElement {TagModel}\n     * @param index {number}\n     */\n    public onTagBlurred(changedElement: TagModel, index: number): void {\n        this.items[index] = changedElement;\n        this.blur();\n    }\n\n    /**\n     * @name trackBy\n     * @param items\n     */\n    public trackBy(index: number, item: TagModel): string {\n        return item[this.identifyBy];\n    }\n\n    /**\n     * @name updateEditedTag\n     * @param tag\n     */\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\n        this.onTagEdited.emit(tag);\n    }\n\n    /**\n     *\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\n        const value = this.getItemDisplay(tag).trim();\n\n        if (selectedItem && !fromAutocomplete || !value) {\n            return false;\n        }\n\n        const dupe = this.findDupe(tag, fromAutocomplete);\n\n        // if so, give a visual cue and return false\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\n            const model = this.tags.find(item => {\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\n            });\n\n            if (model) {\n                model.blink();\n            }\n        }\n\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\n\n        const assertions = [\n            // 1. there must be no dupe OR dupes are allowed\n            !dupe || this.allowDupes,\n\n            // 2. check max items has not been reached\n            !this.maxItemsReached,\n\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\n        ];\n\n        return assertions.filter(Boolean).length === assertions.length;\n    }\n\n    /**\n     * @name moveToTag\n     * @param item\n     * @param direction\n     */\n    private moveToTag(item: TagModel, direction: string): void {\n        const isLast = this.isLastTag(item);\n        const isFirst = this.isFirstTag(item);\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\n            (direction === constants.PREV && isFirst);\n\n        if (stopSwitch) {\n            this.focus(true);\n            return;\n        }\n\n        const offset = direction === constants.NEXT ? 1 : -1;\n        const index = this.getTagIndex(item) + offset;\n        const tag = this.getTagAtIndex(index);\n\n        return tag.select.call(tag);\n    }\n\n    /**\n     * @name isFirstTag\n     * @param item {TagModel}\n     */\n    private isFirstTag(item: TagModel): boolean {\n        return this.tags.first.model === item;\n    }\n\n    /**\n     * @name isLastTag\n     * @param item {TagModel}\n     */\n    private isLastTag(item: TagModel): boolean {\n        return this.tags.last.model === item;\n    }\n\n    /**\n     * @name getTagIndex\n     * @param item\n     */\n    private getTagIndex(item: TagModel): number {\n        const tags = this.tags.toArray();\n\n        return tags.findIndex(tag => tag.model === item);\n    }\n\n    /**\n     * @name getTagAtIndex\n     * @param index\n     */\n    private getTagAtIndex(index: number) {\n        const tags = this.tags.toArray();\n\n        return tags[index];\n    }\n\n    /**\n     * @name removeItem\n     * @desc removes an item from the array of the model\n     * @param tag {TagModel}\n     * @param index {number}\n     */\n    public removeItem(tag: TagModel, index: number): void {\n        this.items = this.getItemsWithout(index);\n\n        // if the removed tag was selected, set it as undefined\n        if (this.selectedTag === tag) {\n            this.selectItem(undefined, false);\n        }\n\n        // focus input\n        this.focus(true, false);\n\n        // emit remove event\n        this.onRemove.emit(tag);\n    }\n\n    /**\n     * @name addItem\n     * @desc adds the current text model to the items array\n     * @param fromAutocomplete {boolean}\n     * @param item {TagModel}\n     * @param index? {number}\n     * @param giveupFocus? {boolean}\n     */\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\n        Promise<TagModel> {\n        const display = this.getItemDisplay(item);\n        const tag = this.createTag(item);\n\n        if (fromAutocomplete) {\n            this.setInputValue(this.getItemValue(item, true));\n        }\n\n        return new Promise((resolve, reject) => {\n            /**\n             * @name reset\n             */\n            const reset = (): void => {\n                // reset control and focus input\n                this.setInputValue('');\n\n                if (giveupFocus) {\n                    this.focus(false, false);\n                } else {\n                    // focus input\n                    this.focus(true, false);\n                }\n\n                resolve(display);\n            };\n\n            const appendItem = (): void => {\n                this.appendTag(tag, index);\n\n                // emit event\n                this.onAdd.emit(tag);\n\n                if (!this.dropdown) {\n                    return;\n                }\n\n                this.dropdown.hide();\n\n                if (this.dropdown.showDropdownIfEmpty) {\n                    this.dropdown.show();\n                }\n            };\n\n            const status = this.inputForm.form.status;\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\n\n            const onValidationError = () => {\n                this.onValidationError.emit(tag);\n                return reject();\n            };\n\n            if (status === 'VALID' && isTagValid) {\n                appendItem();\n                return reset();\n            }\n\n            if (status === 'INVALID' || !isTagValid) {\n                reset();\n                return onValidationError();\n            }\n\n            if (status === 'PENDING') {\n                const statusUpdate$ = this.inputForm.form.statusChanges;\n\n                return statusUpdate$\n                    .pipe(\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\n                        first()\n                    )\n                    .subscribe((statusUpdate) => {\n                        if (statusUpdate === 'VALID' && isTagValid) {\n                            appendItem();\n                            return reset();\n                        } else {\n                            reset();\n                            return onValidationError();\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * @name setupSeparatorKeysListener\n     */\n    private setupSeparatorKeysListener(): void {\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\n        const listener = ($event) => {\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\n            // the keyCode of keydown event is 229 when IME is processing the key event.\n            const isIMEProcessing = $event.keyCode === 229;\n\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\n                $event.preventDefault();\n                this.onAddingRequested(false, this.formValue)\n                    .catch(() => { });\n            }\n        };\n\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\n    }\n\n    /**\n     * @name setUpKeypressListeners\n     */\n    private setUpKeypressListeners(): void {\n        const listener = ($event) => {\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\n\n            if (isCorrectKey &&\n                !this.formValue &&\n                this.items.length) {\n                this.tags.last.select.call(this.tags.last);\n            }\n        };\n\n        // setting up the keypress listeners\n        listen.call(this, constants.KEYDOWN, listener);\n    }\n\n    /**\n     * @name setUpKeydownListeners\n     */\n    private setUpInputKeydownListeners(): void {\n        this.inputForm.onKeydown.subscribe(event => {\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\n                event.preventDefault();\n            }\n        });\n    }\n\n    /**\n     * @name setUpOnPasteListener\n     */\n    private setUpOnPasteListener() {\n        const input = this.inputForm.input.nativeElement;\n\n        // attach listener to input\n        this.renderer.listen(input, 'paste', (event) => {\n            this.onPasteCallback(event);\n\n            event.preventDefault();\n            return true;\n        });\n    }\n\n    /**\n     * @name setUpTextChangeSubscriber\n     */\n    private setUpTextChangeSubscriber(): void {\n        this.inputForm.form\n            .valueChanges\n            .pipe(\n                debounceTime(this.onTextChangeDebounce)\n            )\n            .subscribe((value: { item: string }) => {\n                this.onTextChange.emit(value.item);\n            });\n    }\n\n    /**\n     * @name setUpOnBlurSubscriber\n     */\n    private setUpOnBlurSubscriber(): void {\n        const filterFn = (): boolean => {\n            const isVisible = this.dropdown && this.dropdown.isVisible;\n            return !isVisible && !!this.formValue;\n        };\n\n        this.inputForm\n            .onBlur\n            .pipe(\n                debounceTime(100),\n                filter(filterFn)\n            )\n            .subscribe(() => {\n                const reset = () => this.setInputValue('');\n\n                if (this.addOnBlur) {\n                    return this\n                        .onAddingRequested(false, this.formValue, undefined, true)\n                        .then(reset)\n                        .catch(reset);\n                }\n\n                reset();\n            });\n    }\n\n    /**\n     * @name findDupe\n     * @param tag\n     * @param isFromAutocomplete\n     */\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\n        const id = tag[identifyBy];\n\n        return this.items.find(item => this.getItemValue(item) === id);\n    }\n\n    /**\n     * @name onPasteCallback\n     * @param data\n     */\n    private onPasteCallback = async (data: ClipboardEvent) => {\n        interface IEWindow extends Window {\n            clipboardData: DataTransfer;\n        }\n\n        const getText = (): string => {\n            const isIE = Boolean((window as IEWindow).clipboardData);\n            const clipboardData = isIE ? (\n                (window as IEWindow).clipboardData\n            ) : data.clipboardData;\n            const type = isIE ? 'Text' : 'text/plain';\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\n        };\n\n        const text = getText();\n\n        const requests = text\n            .split(this.pasteSplitPattern)\n            .map(item => {\n                const tag = this.createTag(item);\n                this.setInputValue(tag[this.displayBy]);\n                return this.onAddingRequested(false, tag);\n            });\n\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\n\n        Promise.all(requests).then(() => {\n            this.onPaste.emit(text);\n            resetInput();\n        })\n            .catch(resetInput);\n    }\n\n    /**\n     * @name setAnimationMetadata\n     */\n    private setAnimationMetadata(): void {\n        this.animationMetadata = {\n            value: 'in',\n            params: { ...this.animationDuration }\n        };\n    }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'delete-icon',\n    templateUrl: './icon.html',\n    styleUrls: ['./icon.scss']\n})\nexport class DeleteIconComponent {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\nimport { DragProvider } from './core/providers/drag-provider';\nimport { OptionsProvider, Options } from './core/providers/options-provider';\nimport { TagInputComponent } from './components/tag-input/tag-input';\nimport { DeleteIconComponent } from './components/icon/icon';\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\nimport { TagComponent } from './components/tag/tag.component';\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\nimport { TagRipple } from './components/tag/tag-ripple.component';\n\nconst optionsProvider = new OptionsProvider();\n\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        FormsModule,\n        Ng2DropdownModule\n    ],\n    declarations: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    exports: [\n        TagInputComponent,\n        DeleteIconComponent,\n        TagInputForm,\n        TagComponent,\n        HighlightPipe,\n        TagInputDropdown,\n        TagRipple\n    ],\n    providers: [\n        DragProvider,\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\n    ]\n})\nexport class TagInputModule {\n    /**\n     * @name withDefaults\n     * @param options {Options}\n     */\n    public static withDefaults(options: Options): void {\n        optionsProvider.setOptions(options);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {animations as Éµb} from './components/tag-input/animations';\nexport {TagInputAccessor as Éµa} from './core/accessor';\nexport {HighlightPipe as Éµd} from './core/pipes/highlight.pipe';\nexport {DragProvider as Éµc} from './core/providers/drag-provider';"]},"metadata":{},"sourceType":"module"}