{"ast":null,"code":"import _classCallCheck from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/HP/workspace/2copo-fe/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, QueryList, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n  }\n}\n\nvar _c0 = [\"*\"];\n\nvar CdkStepHeader = /*#__PURE__*/function () {\n  function CdkStepHeader(_elementRef) {\n    _classCallCheck(this, CdkStepHeader);\n\n    this._elementRef = _elementRef;\n  }\n  /** Focuses the step header. */\n\n\n  _createClass(CdkStepHeader, [{\n    key: \"focus\",\n    value: function focus() {\n      this._elementRef.nativeElement.focus();\n    }\n  }]);\n\n  return CdkStepHeader;\n}();\n\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) {\n  return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nCdkStepHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepHeader,\n  selectors: [[\"\", \"cdkStepHeader\", \"\"]],\n  hostAttrs: [\"role\", \"tab\"]\n});\n\nCdkStepHeader.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepHeader]',\n      host: {\n        'role': 'tab'\n      }\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CdkStepLabel = function CdkStepLabel(\n/** @docs-private */\ntemplate) {\n  _classCallCheck(this, CdkStepLabel);\n\n  this.template = template;\n};\n\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) {\n  return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef));\n};\n\nCdkStepLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepLabel,\n  selectors: [[\"\", \"cdkStepLabel\", \"\"]]\n});\n\nCdkStepLabel.ctorParameters = function () {\n  return [{\n    type: TemplateRef\n  }];\n};\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepLabel]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.TemplateRef\n    }];\n  }, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Used to generate unique ID for each stepper component. */\n\n\nvar nextId = 0;\n/** Change event emitted on selection changes. */\n\nvar StepperSelectionEvent = function StepperSelectionEvent() {\n  _classCallCheck(this, StepperSelectionEvent);\n};\n/** Enum to represent the different states of the steps. */\n\n\nvar STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n/** InjectionToken that can be used to specify the global stepper options. */\n\nvar STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\n\nvar MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\nvar CdkStep = /*#__PURE__*/function () {\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  function CdkStep(_stepper, stepperOptions) {\n    _classCallCheck(this, CdkStep);\n\n    this._stepper = _stepper;\n    /** Whether user has seen the expanded step content or not. */\n\n    this.interacted = false;\n    this._editable = true;\n    this._optional = false;\n    this._completedOverride = null;\n    this._customError = null;\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n  /** Whether the user can return to this step once it has been marked as completed. */\n\n\n  _createClass(CdkStep, [{\n    key: \"editable\",\n    get: function get() {\n      return this._editable;\n    },\n    set: function set(value) {\n      this._editable = coerceBooleanProperty(value);\n    }\n    /** Whether the completion of step is optional. */\n\n  }, {\n    key: \"optional\",\n    get: function get() {\n      return this._optional;\n    },\n    set: function set(value) {\n      this._optional = coerceBooleanProperty(value);\n    }\n    /** Whether step is marked as completed. */\n\n  }, {\n    key: \"completed\",\n    get: function get() {\n      return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    },\n    set: function set(value) {\n      this._completedOverride = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"_getDefaultCompleted\",\n    value: function _getDefaultCompleted() {\n      return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /** Whether step has an error. */\n\n  }, {\n    key: \"hasError\",\n    get: function get() {\n      return this._customError == null ? this._getDefaultError() : this._customError;\n    },\n    set: function set(value) {\n      this._customError = coerceBooleanProperty(value);\n    }\n  }, {\n    key: \"_getDefaultError\",\n    value: function _getDefaultError() {\n      return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /** Selects this step component. */\n\n  }, {\n    key: \"select\",\n    value: function select() {\n      this._stepper.selected = this;\n    }\n    /** Resets the step to its initial state. Note that this includes resetting form data. */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.interacted = false;\n\n      if (this._completedOverride != null) {\n        this._completedOverride = false;\n      }\n\n      if (this._customError != null) {\n        this._customError = false;\n      }\n\n      if (this.stepControl) {\n        this.stepControl.reset();\n      }\n    }\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges() {\n      // Since basically all inputs of the MatStep get proxied through the view down to the\n      // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n      this._stepper._stateChanged();\n    }\n  }]);\n\n  return CdkStep;\n}();\n\nCdkStep.ɵfac = function CdkStep_Factory(t) {\n  return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(function () {\n    return CdkStepper;\n  })), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8));\n};\n\nCdkStep.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CdkStep,\n  selectors: [[\"cdk-step\"]],\n  contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    }\n  },\n  viewQuery: function CdkStep_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵstaticViewQuery(TemplateRef, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    }\n  },\n  inputs: {\n    editable: \"editable\",\n    optional: \"optional\",\n    completed: \"completed\",\n    hasError: \"hasError\",\n    stepControl: \"stepControl\",\n    label: \"label\",\n    errorMessage: \"errorMessage\",\n    ariaLabel: [\"aria-label\", \"ariaLabel\"],\n    ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"],\n    state: \"state\"\n  },\n  exportAs: [\"cdkStep\"],\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c0,\n  decls: 1,\n  vars: 0,\n  template: function CdkStep_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    }\n  },\n  encapsulation: 2,\n  changeDetection: 0\n});\n\nCdkStep.ctorParameters = function () {\n  return [{\n    type: CdkStepper,\n    decorators: [{\n      type: Inject,\n      args: [forwardRef(function () {\n        return CdkStepper;\n      })]\n    }]\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Optional\n    }, {\n      type: Inject,\n      args: [STEPPER_GLOBAL_OPTIONS]\n    }]\n  }];\n};\n\nCdkStep.propDecorators = {\n  stepLabel: [{\n    type: ContentChild,\n    args: [CdkStepLabel]\n  }],\n  content: [{\n    type: ViewChild,\n    args: [TemplateRef, {\n      static: true\n    }]\n  }],\n  stepControl: [{\n    type: Input\n  }],\n  label: [{\n    type: Input\n  }],\n  errorMessage: [{\n    type: Input\n  }],\n  ariaLabel: [{\n    type: Input,\n    args: ['aria-label']\n  }],\n  ariaLabelledby: [{\n    type: Input,\n    args: ['aria-labelledby']\n  }],\n  state: [{\n    type: Input\n  }],\n  editable: [{\n    type: Input\n  }],\n  optional: [{\n    type: Input\n  }],\n  completed: [{\n    type: Input\n  }],\n  hasError: [{\n    type: Input\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n    type: Component,\n    args: [{\n      selector: 'cdk-step',\n      exportAs: 'cdkStep',\n      template: '<ng-template><ng-content></ng-content></ng-template>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper,\n      decorators: [{\n        type: Inject,\n        args: [forwardRef(function () {\n          return CdkStepper;\n        })]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [STEPPER_GLOBAL_OPTIONS]\n      }]\n    }];\n  }, {\n    editable: [{\n      type: Input\n    }],\n    optional: [{\n      type: Input\n    }],\n    completed: [{\n      type: Input\n    }],\n    hasError: [{\n      type: Input\n    }],\n    stepLabel: [{\n      type: ContentChild,\n      args: [CdkStepLabel]\n    }],\n    content: [{\n      type: ViewChild,\n      args: [TemplateRef, {\n        static: true\n      }]\n    }],\n    stepControl: [{\n      type: Input\n    }],\n    label: [{\n      type: Input\n    }],\n    errorMessage: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    state: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CdkStepper = /*#__PURE__*/function () {\n  function CdkStepper(_dir, _changeDetectorRef, // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n  _elementRef, _document) {\n    _classCallCheck(this, CdkStepper);\n\n    this._dir = _dir;\n    this._changeDetectorRef = _changeDetectorRef;\n    this._elementRef = _elementRef;\n    /** Emits when the component is destroyed. */\n\n    this._destroyed = new Subject();\n    /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n\n    this.steps = new QueryList();\n    this._linear = false;\n    this._selectedIndex = 0;\n    /** Event emitted when the selected step has changed. */\n\n    this.selectionChange = new EventEmitter();\n    this._orientation = 'horizontal';\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n  /** Whether the validity of previous steps should be checked or not. */\n\n\n  _createClass(CdkStepper, [{\n    key: \"linear\",\n    get: function get() {\n      return this._linear;\n    },\n    set: function set(value) {\n      this._linear = coerceBooleanProperty(value);\n    }\n    /** The index of the selected step. */\n\n  }, {\n    key: \"selectedIndex\",\n    get: function get() {\n      return this._selectedIndex;\n    },\n    set: function set(index) {\n      var newIndex = coerceNumberProperty(index);\n\n      if (this.steps && this._steps) {\n        // Ensure that the index can't be out of bounds.\n        if ((newIndex < 0 || newIndex > this.steps.length - 1) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n        }\n\n        if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) && (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n          this._updateSelectedItemIndex(index);\n        }\n      } else {\n        this._selectedIndex = newIndex;\n      }\n    }\n    /** The step that is selected. */\n\n  }, {\n    key: \"selected\",\n    get: function get() {\n      // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n      return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined;\n    },\n    set: function set(step) {\n      this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n  }, {\n    key: \"ngAfterContentInit\",\n    value: function ngAfterContentInit() {\n      var _this = this;\n\n      this._steps.changes.pipe(startWith(this._steps), takeUntil(this._destroyed)).subscribe(function (steps) {\n        _this.steps.reset(steps.filter(function (step) {\n          return step._stepper === _this;\n        }));\n\n        _this.steps.notifyOnChanges();\n      });\n    }\n  }, {\n    key: \"ngAfterViewInit\",\n    value: function ngAfterViewInit() {\n      var _this2 = this;\n\n      // Note that while the step headers are content children by default, any components that\n      // extend this one might have them as view children. We initialize the keyboard handling in\n      // AfterViewInit so we're guaranteed for both view and content children to be defined.\n      this._keyManager = new FocusKeyManager(this._stepHeader).withWrap().withHomeAndEnd().withVerticalOrientation(this._orientation === 'vertical');\n      (this._dir ? this._dir.change : of()).pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed)).subscribe(function (direction) {\n        return _this2._keyManager.withHorizontalOrientation(direction);\n      });\n\n      this._keyManager.updateActiveItem(this._selectedIndex); // No need to `takeUntil` here, because we're the ones destroying `steps`.\n\n\n      this.steps.changes.subscribe(function () {\n        if (!_this2.selected) {\n          _this2._selectedIndex = Math.max(_this2._selectedIndex - 1, 0);\n        }\n      });\n    }\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.steps.destroy();\n\n      this._destroyed.next();\n\n      this._destroyed.complete();\n    }\n    /** Selects and focuses the next step in list. */\n\n  }, {\n    key: \"next\",\n    value: function next() {\n      this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /** Selects and focuses the previous step in list. */\n\n  }, {\n    key: \"previous\",\n    value: function previous() {\n      this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._updateSelectedItemIndex(0);\n\n      this.steps.forEach(function (step) {\n        return step.reset();\n      });\n\n      this._stateChanged();\n    }\n    /** Returns a unique id for each step label element. */\n\n  }, {\n    key: \"_getStepLabelId\",\n    value: function _getStepLabelId(i) {\n      return \"cdk-step-label-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /** Returns unique id for each step content element. */\n\n  }, {\n    key: \"_getStepContentId\",\n    value: function _getStepContentId(i) {\n      return \"cdk-step-content-\".concat(this._groupId, \"-\").concat(i);\n    }\n    /** Marks the component to be change detected. */\n\n  }, {\n    key: \"_stateChanged\",\n    value: function _stateChanged() {\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns position state of the step with the given index. */\n\n  }, {\n    key: \"_getAnimationDirection\",\n    value: function _getAnimationDirection(index) {\n      var position = index - this._selectedIndex;\n\n      if (position < 0) {\n        return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n      } else if (position > 0) {\n        return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n      }\n\n      return 'current';\n    }\n    /** Returns the type of icon to be displayed. */\n\n  }, {\n    key: \"_getIndicatorType\",\n    value: function _getIndicatorType(index) {\n      var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : STEP_STATE.NUMBER;\n      var step = this.steps.toArray()[index];\n\n      var isCurrentStep = this._isCurrentStep(index);\n\n      return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) : this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n  }, {\n    key: \"_getDefaultIndicatorLogic\",\n    value: function _getDefaultIndicatorLogic(step, isCurrentStep) {\n      if (step._showError && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (!step.completed || isCurrentStep) {\n        return STEP_STATE.NUMBER;\n      } else {\n        return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n      }\n    }\n  }, {\n    key: \"_getGuidelineLogic\",\n    value: function _getGuidelineLogic(step, isCurrentStep) {\n      var state = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : STEP_STATE.NUMBER;\n\n      if (step._showError && step.hasError && !isCurrentStep) {\n        return STEP_STATE.ERROR;\n      } else if (step.completed && !isCurrentStep) {\n        return STEP_STATE.DONE;\n      } else if (step.completed && isCurrentStep) {\n        return state;\n      } else if (step.editable && isCurrentStep) {\n        return STEP_STATE.EDIT;\n      } else {\n        return state;\n      }\n    }\n  }, {\n    key: \"_isCurrentStep\",\n    value: function _isCurrentStep(index) {\n      return this._selectedIndex === index;\n    }\n    /** Returns the index of the currently-focused step header. */\n\n  }, {\n    key: \"_getFocusIndex\",\n    value: function _getFocusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n  }, {\n    key: \"_updateSelectedItemIndex\",\n    value: function _updateSelectedItemIndex(newIndex) {\n      var stepsArray = this.steps.toArray();\n      this.selectionChange.emit({\n        selectedIndex: newIndex,\n        previouslySelectedIndex: this._selectedIndex,\n        selectedStep: stepsArray[newIndex],\n        previouslySelectedStep: stepsArray[this._selectedIndex]\n      }); // If focus is inside the stepper, move it to the next header, otherwise it may become\n      // lost when the active step content is hidden. We can't be more granular with the check\n      // (e.g. checking whether focus is inside the active step), because we don't have a\n      // reference to the elements that are rendering out the content.\n\n      this._containsFocus() ? this._keyManager.setActiveItem(newIndex) : this._keyManager.updateActiveItem(newIndex);\n      this._selectedIndex = newIndex;\n\n      this._stateChanged();\n    }\n  }, {\n    key: \"_onKeydown\",\n    value: function _onKeydown(event) {\n      var hasModifier = hasModifierKey(event);\n      var keyCode = event.keyCode;\n      var manager = this._keyManager;\n\n      if (manager.activeItemIndex != null && !hasModifier && (keyCode === SPACE || keyCode === ENTER)) {\n        this.selectedIndex = manager.activeItemIndex;\n        event.preventDefault();\n      } else {\n        manager.onKeydown(event);\n      }\n    }\n  }, {\n    key: \"_anyControlsInvalidOrPending\",\n    value: function _anyControlsInvalidOrPending(index) {\n      var steps = this.steps.toArray();\n      steps[this._selectedIndex].interacted = true;\n\n      if (this._linear && index >= 0) {\n        return steps.slice(0, index).some(function (step) {\n          var control = step.stepControl;\n          var isIncomplete = control ? control.invalid || control.pending || !step.interacted : !step.completed;\n          return isIncomplete && !step.optional && !step._completedOverride;\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"_layoutDirection\",\n    value: function _layoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Checks whether the stepper contains the focused element. */\n\n  }, {\n    key: \"_containsFocus\",\n    value: function _containsFocus() {\n      if (!this._document || !this._elementRef) {\n        return false;\n      }\n\n      var stepperElement = this._elementRef.nativeElement;\n      var focusedElement = this._document.activeElement;\n      return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n  }]);\n\n  return CdkStepper;\n}();\n\nCdkStepper.ɵfac = function CdkStepper_Factory(t) {\n  return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nCdkStepper.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepper,\n  selectors: [[\"\", \"cdkStepper\", \"\"]],\n  contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, true);\n      ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, true);\n    }\n\n    if (rf & 2) {\n      var _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    }\n  },\n  inputs: {\n    linear: \"linear\",\n    selectedIndex: \"selectedIndex\",\n    selected: \"selected\"\n  },\n  outputs: {\n    selectionChange: \"selectionChange\"\n  },\n  exportAs: [\"cdkStepper\"]\n});\n\nCdkStepper.ctorParameters = function () {\n  return [{\n    type: Directionality,\n    decorators: [{\n      type: Optional\n    }]\n  }, {\n    type: ChangeDetectorRef\n  }, {\n    type: ElementRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nCdkStepper.propDecorators = {\n  _steps: [{\n    type: ContentChildren,\n    args: [CdkStep, {\n      descendants: true\n    }]\n  }],\n  _stepHeader: [{\n    type: ContentChildren,\n    args: [CdkStepHeader, {\n      descendants: true\n    }]\n  }],\n  linear: [{\n    type: Input\n  }],\n  selectedIndex: [{\n    type: Input\n  }],\n  selected: [{\n    type: Input\n  }],\n  selectionChange: [{\n    type: Output\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkStepper]',\n      exportAs: 'cdkStepper'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc1.Directionality,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: ɵngcc0.ElementRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    selectionChange: [{\n      type: Output\n    }],\n    linear: [{\n      type: Input\n    }],\n    selectedIndex: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    _steps: [{\n      type: ContentChildren,\n      args: [CdkStep, {\n        descendants: true\n      }]\n    }],\n    _stepHeader: [{\n      type: ContentChildren,\n      args: [CdkStepHeader, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** Button that moves to the next step in a stepper workflow. */\n\n\nvar CdkStepperNext = /*#__PURE__*/function () {\n  function CdkStepperNext(_stepper) {\n    _classCallCheck(this, CdkStepperNext);\n\n    this._stepper = _stepper;\n    /** Type of the next button. Defaults to \"submit\" if not specified. */\n\n    this.type = 'submit';\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _createClass(CdkStepperNext, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      this._stepper.next();\n    }\n  }]);\n\n  return CdkStepperNext;\n}();\n\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) {\n  return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperNext.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepperNext,\n  selectors: [[\"button\", \"cdkStepperNext\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperNext_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n\nCdkStepperNext.ctorParameters = function () {\n  return [{\n    type: CdkStepper\n  }];\n};\n\nCdkStepperNext.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  _handleClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperNext]',\n      host: {\n        '[type]': 'type'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n/** Button that moves to the previous step in a stepper workflow. */\n\n\nvar CdkStepperPrevious = /*#__PURE__*/function () {\n  function CdkStepperPrevious(_stepper) {\n    _classCallCheck(this, CdkStepperPrevious);\n\n    this._stepper = _stepper;\n    /** Type of the previous button. Defaults to \"button\" if not specified. */\n\n    this.type = 'button';\n  } // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n\n\n  _createClass(CdkStepperPrevious, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      this._stepper.previous();\n    }\n  }]);\n\n  return CdkStepperPrevious;\n}();\n\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) {\n  return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper));\n};\n\nCdkStepperPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CdkStepperPrevious,\n  selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]],\n  hostVars: 1,\n  hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() {\n        return ctx._handleClick();\n      });\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    }\n  },\n  inputs: {\n    type: \"type\"\n  }\n});\n\nCdkStepperPrevious.ctorParameters = function () {\n  return [{\n    type: CdkStepper\n  }];\n};\n\nCdkStepperPrevious.propDecorators = {\n  type: [{\n    type: Input\n  }],\n  _handleClick: [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n/*@__PURE__*/\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n    type: Directive,\n    args: [{\n      selector: 'button[cdkStepperPrevious]',\n      host: {\n        '[type]': 'type'\n      }\n    }]\n  }], function () {\n    return [{\n      type: CdkStepper\n    }];\n  }, {\n    type: [{\n      type: Input\n    }],\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleClick: [{\n      type: HostListener,\n      args: ['click']\n    }]\n  });\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n\nvar CdkStepperModule = function CdkStepperModule() {\n  _classCallCheck(this, CdkStepperModule);\n};\n\nCdkStepperModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CdkStepperModule\n});\nCdkStepperModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CdkStepperModule_Factory(t) {\n    return new (t || CdkStepperModule)();\n  },\n  imports: [[BidiModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, {\n    declarations: function declarations() {\n      return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious];\n    },\n    imports: function imports() {\n      return [BidiModule];\n    },\n    exports: function exports() {\n      return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious];\n    }\n  });\n})();\n/*@__PURE__*/\n\n\n(function () {\n  ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n    type: NgModule,\n    args: [{\n      imports: [BidiModule],\n      exports: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious],\n      declarations: [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]\n    }]\n  }], null, null);\n})();\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };","map":{"version":3,"sources":["../../../../../../src/cdk/stepper/step-header.ts","../../../../../../src/cdk/stepper/step-label.ts","../../../../../../src/cdk/stepper/stepper.ts","../../../../../../src/cdk/stepper/stepper-button.ts","../../../../../../src/cdk/stepper/stepper-module.ts","../../../../../../src/cdk/stepper/public-api.ts","../../../../../../src/cdk/stepper/index.ts"],"names":["observableOf"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef} from '@angular/core';\nimport {FocusableOption} from '@angular/cdk/a11y';\n\n\n@Directive({\n  selector: '[cdkStepHeader]',\n  host: {\n    'role': 'tab',\n  },\n})\nexport class CdkStepHeader implements FocusableOption {\n  constructor(protected _elementRef: ElementRef<HTMLElement>) {}\n\n  /** Focuses the step header. */\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, TemplateRef} from '@angular/core';\n\n@Directive({\n  selector: '[cdkStepLabel]',\n})\nexport class CdkStepLabel {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {ENTER, hasModifierKey, SPACE} from '@angular/cdk/keycodes';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  TemplateRef,\n  ViewChild,\n  ViewEncapsulation,\n  AfterContentInit,\n} from '@angular/core';\nimport {Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\nimport {CdkStepHeader} from './step-header';\nimport {CdkStepLabel} from './step-label';\n\n/** Used to generate unique ID for each stepper component. */\nlet nextId = 0;\n\n/**\n * Position state of the content of each step in stepper that is used for transitioning\n * the content into correct position upon step selection change.\n */\nexport type StepContentPositionState = 'previous'|'current'|'next';\n\n/** Possible orientation of a stepper. */\nexport type StepperOrientation = 'horizontal'|'vertical';\n\n/** Change event emitted on selection changes. */\nexport class StepperSelectionEvent {\n  /** Index of the step now selected. */\n  selectedIndex: number;\n\n  /** Index of the step previously selected. */\n  previouslySelectedIndex: number;\n\n  /** The step instance now selected. */\n  selectedStep: CdkStep;\n\n  /** The step instance previously selected. */\n  previouslySelectedStep: CdkStep;\n}\n\n/** The state of each step. */\nexport type StepState = 'number'|'edit'|'done'|'error'|string;\n\n/** Enum to represent the different states of the steps. */\nexport const STEP_STATE = {\n  NUMBER: 'number',\n  EDIT: 'edit',\n  DONE: 'done',\n  ERROR: 'error'\n};\n\n/** InjectionToken that can be used to specify the global stepper options. */\nexport const STEPPER_GLOBAL_OPTIONS = new InjectionToken<StepperOptions>('STEPPER_GLOBAL_OPTIONS');\n\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * @breaking-change 8.0.0.\n */\nexport const MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n\n/** Configurable options for stepper. */\nexport interface StepperOptions {\n  /**\n   * Whether the stepper should display an error state or not.\n   * Default behavior is assumed to be false.\n   */\n  showError?: boolean;\n\n  /**\n   * Whether the stepper should display the default indicator type\n   * or not.\n   * Default behavior is assumed to be true.\n   */\n  displayDefaultIndicatorType?: boolean;\n}\n\n@Component({\n  selector: 'cdk-step',\n  exportAs: 'cdkStep',\n  template: '<ng-template><ng-content></ng-content></ng-template>',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CdkStep implements OnChanges {\n  private _stepperOptions: StepperOptions;\n  _showError: boolean;\n  _displayDefaultIndicatorType: boolean;\n\n  /** Template for step label if it exists. */\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\n\n  /** Template for step content. */\n  @ViewChild(TemplateRef, {static: true}) content: TemplateRef<any>;\n\n  /** The top level abstract control of the step. */\n  @Input() stepControl: AbstractControlLike;\n\n  /** Whether user has seen the expanded step content or not. */\n  interacted = false;\n\n  /** Plain text label of the step. */\n  @Input() label: string;\n\n  /** Error message to display when there's an error. */\n  @Input() errorMessage: string;\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** State of the step. */\n  @Input() state: StepState;\n\n  /** Whether the user can return to this step once it has been marked as completed. */\n  @Input()\n  get editable(): boolean {\n    return this._editable;\n  }\n  set editable(value: boolean) {\n    this._editable = coerceBooleanProperty(value);\n  }\n  private _editable = true;\n\n  /** Whether the completion of step is optional. */\n  @Input()\n  get optional(): boolean {\n    return this._optional;\n  }\n  set optional(value: boolean) {\n    this._optional = coerceBooleanProperty(value);\n  }\n  private _optional = false;\n\n  /** Whether step is marked as completed. */\n  @Input()\n  get completed(): boolean {\n    return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n  }\n  set completed(value: boolean) {\n    this._completedOverride = coerceBooleanProperty(value);\n  }\n  _completedOverride: boolean|null = null;\n\n  private _getDefaultCompleted() {\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n  }\n\n  /** Whether step has an error. */\n  @Input()\n  get hasError(): boolean {\n    return this._customError == null ? this._getDefaultError() : this._customError;\n  }\n  set hasError(value: boolean) {\n    this._customError = coerceBooleanProperty(value);\n  }\n  private _customError: boolean|null = null;\n\n  private _getDefaultError() {\n    return this.stepControl && this.stepControl.invalid && this.interacted;\n  }\n\n  /** @breaking-change 8.0.0 remove the `?` after `stepperOptions` */\n  constructor(\n      @Inject(forwardRef(() => CdkStepper)) public _stepper: CdkStepper,\n      @Optional() @Inject(STEPPER_GLOBAL_OPTIONS) stepperOptions?: StepperOptions) {\n    this._stepperOptions = stepperOptions ? stepperOptions : {};\n    this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n    this._showError = !!this._stepperOptions.showError;\n  }\n\n  /** Selects this step component. */\n  select(): void {\n    this._stepper.selected = this;\n  }\n\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\n  reset(): void {\n    this.interacted = false;\n\n    if (this._completedOverride != null) {\n      this._completedOverride = false;\n    }\n\n    if (this._customError != null) {\n      this._customError = false;\n    }\n\n    if (this.stepControl) {\n      this.stepControl.reset();\n    }\n  }\n\n  ngOnChanges() {\n    // Since basically all inputs of the MatStep get proxied through the view down to the\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n    this._stepper._stateChanged();\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n}\n\n@Directive({\n  selector: '[cdkStepper]',\n  exportAs: 'cdkStepper',\n})\nexport class CdkStepper implements AfterContentInit, AfterViewInit, OnDestroy {\n  /** Emits when the component is destroyed. */\n  protected _destroyed = new Subject<void>();\n\n  /** Used for managing keyboard focus. */\n  private _keyManager: FocusKeyManager<FocusableOption>;\n\n  /**\n   * @breaking-change 8.0.0 Remove `| undefined` once the `_document`\n   * constructor param is required.\n   */\n  private _document: Document|undefined;\n\n  /** Full list of steps inside the stepper, including inside nested steppers. */\n  @ContentChildren(CdkStep, {descendants: true}) _steps: QueryList<CdkStep>;\n\n  /** Steps that belong to the current stepper, excluding ones from nested steppers. */\n  readonly steps: QueryList<CdkStep> = new QueryList<CdkStep>();\n\n  /**\n   * The list of step headers of the steps in the stepper.\n   * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n   * @breaking-change 8.0.0\n   */\n  @ContentChildren(CdkStepHeader, {descendants: true}) _stepHeader: QueryList<FocusableOption>;\n\n  /** Whether the validity of previous steps should be checked or not. */\n  @Input()\n  get linear(): boolean {\n    return this._linear;\n  }\n  set linear(value: boolean) {\n    this._linear = coerceBooleanProperty(value);\n  }\n  private _linear = false;\n\n  /** The index of the selected step. */\n  @Input()\n  get selectedIndex() {\n    return this._selectedIndex;\n  }\n  set selectedIndex(index: number) {\n    const newIndex = coerceNumberProperty(index);\n\n    if (this.steps && this._steps) {\n      // Ensure that the index can't be out of bounds.\n      if ((newIndex < 0 || newIndex > this.steps.length - 1) &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n      }\n\n      if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n          (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n        this._updateSelectedItemIndex(index);\n      }\n    } else {\n      this._selectedIndex = newIndex;\n    }\n  }\n  private _selectedIndex = 0;\n\n  /** The step that is selected. */\n  @Input()\n  get selected(): CdkStep {\n    // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n    return this.steps ? this.steps.toArray()[this.selectedIndex] : undefined!;\n  }\n  set selected(step: CdkStep) {\n    this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n  }\n\n  /** Event emitted when the selected step has changed. */\n  @Output()\n  selectionChange: EventEmitter<StepperSelectionEvent> = new EventEmitter<StepperSelectionEvent>();\n\n  /** Used to track unique ID for each stepper component. */\n  _groupId: number;\n\n  protected _orientation: StepperOrientation = 'horizontal';\n\n  constructor(\n      @Optional() private _dir: Directionality, private _changeDetectorRef: ChangeDetectorRef,\n      // @breaking-change 8.0.0 `_elementRef` and `_document` parameters to become required.\n      private _elementRef?: ElementRef<HTMLElement>, @Inject(DOCUMENT) _document?: any) {\n    this._groupId = nextId++;\n    this._document = _document;\n  }\n\n  ngAfterContentInit() {\n    this._steps.changes\n      .pipe(startWith(this._steps), takeUntil(this._destroyed))\n      .subscribe((steps: QueryList<CdkStep>) => {\n        this.steps.reset(steps.filter(step => step._stepper === this));\n        this.steps.notifyOnChanges();\n      });\n  }\n\n  ngAfterViewInit() {\n    // Note that while the step headers are content children by default, any components that\n    // extend this one might have them as view children. We initialize the keyboard handling in\n    // AfterViewInit so we're guaranteed for both view and content children to be defined.\n    this._keyManager = new FocusKeyManager<FocusableOption>(this._stepHeader)\n                           .withWrap()\n                           .withHomeAndEnd()\n                           .withVerticalOrientation(this._orientation === 'vertical');\n\n    (this._dir ? (this._dir.change as Observable<Direction>) : observableOf<Direction>())\n        .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n        .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n\n    this._keyManager.updateActiveItem(this._selectedIndex);\n\n    // No need to `takeUntil` here, because we're the ones destroying `steps`.\n    this.steps.changes.subscribe(() => {\n      if (!this.selected) {\n        this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.steps.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  /** Selects and focuses the next step in list. */\n  next(): void {\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n  }\n\n  /** Selects and focuses the previous step in list. */\n  previous(): void {\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n  }\n\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\n  reset(): void {\n    this._updateSelectedItemIndex(0);\n    this.steps.forEach(step => step.reset());\n    this._stateChanged();\n  }\n\n  /** Returns a unique id for each step label element. */\n  _getStepLabelId(i: number): string {\n    return `cdk-step-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns unique id for each step content element. */\n  _getStepContentId(i: number): string {\n    return `cdk-step-content-${this._groupId}-${i}`;\n  }\n\n  /** Marks the component to be change detected. */\n  _stateChanged() {\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Returns position state of the step with the given index. */\n  _getAnimationDirection(index: number): StepContentPositionState {\n    const position = index - this._selectedIndex;\n    if (position < 0) {\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n    } else if (position > 0) {\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n    }\n    return 'current';\n  }\n\n  /** Returns the type of icon to be displayed. */\n  _getIndicatorType(index: number, state: StepState = STEP_STATE.NUMBER): StepState {\n    const step = this.steps.toArray()[index];\n    const isCurrentStep = this._isCurrentStep(index);\n\n    return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n                                               this._getGuidelineLogic(step, isCurrentStep, state);\n  }\n\n  private _getDefaultIndicatorLogic(step: CdkStep, isCurrentStep: boolean): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (!step.completed || isCurrentStep) {\n      return STEP_STATE.NUMBER;\n    } else {\n      return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n    }\n  }\n\n  private _getGuidelineLogic(\n      step: CdkStep, isCurrentStep: boolean, state: StepState = STEP_STATE.NUMBER): StepState {\n    if (step._showError && step.hasError && !isCurrentStep) {\n      return STEP_STATE.ERROR;\n    } else if (step.completed && !isCurrentStep) {\n      return STEP_STATE.DONE;\n    } else if (step.completed && isCurrentStep) {\n      return state;\n    } else if (step.editable && isCurrentStep) {\n      return STEP_STATE.EDIT;\n    } else {\n      return state;\n    }\n  }\n\n  private _isCurrentStep(index: number) {\n    return this._selectedIndex === index;\n  }\n\n  /** Returns the index of the currently-focused step header. */\n  _getFocusIndex() {\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n  }\n\n  private _updateSelectedItemIndex(newIndex: number): void {\n    const stepsArray = this.steps.toArray();\n    this.selectionChange.emit({\n      selectedIndex: newIndex,\n      previouslySelectedIndex: this._selectedIndex,\n      selectedStep: stepsArray[newIndex],\n      previouslySelectedStep: stepsArray[this._selectedIndex],\n    });\n\n    // If focus is inside the stepper, move it to the next header, otherwise it may become\n    // lost when the active step content is hidden. We can't be more granular with the check\n    // (e.g. checking whether focus is inside the active step), because we don't have a\n    // reference to the elements that are rendering out the content.\n    this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n                            this._keyManager.updateActiveItem(newIndex);\n\n    this._selectedIndex = newIndex;\n    this._stateChanged();\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const hasModifier = hasModifierKey(event);\n    const keyCode = event.keyCode;\n    const manager = this._keyManager;\n\n    if (manager.activeItemIndex != null && !hasModifier &&\n        (keyCode === SPACE || keyCode === ENTER)) {\n      this.selectedIndex = manager.activeItemIndex;\n      event.preventDefault();\n    } else {\n      manager.onKeydown(event);\n    }\n  }\n\n  private _anyControlsInvalidOrPending(index: number): boolean {\n    const steps = this.steps.toArray();\n\n    steps[this._selectedIndex].interacted = true;\n\n    if (this._linear && index >= 0) {\n      return steps.slice(0, index).some(step => {\n        const control = step.stepControl;\n        const isIncomplete =\n            control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n        return isIncomplete && !step.optional && !step._completedOverride;\n      });\n    }\n\n    return false;\n  }\n\n  private _layoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Checks whether the stepper contains the focused element. */\n  private _containsFocus(): boolean {\n    if (!this._document || !this._elementRef) {\n      return false;\n    }\n\n    const stepperElement = this._elementRef.nativeElement;\n    const focusedElement = this._document.activeElement;\n    return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n  }\n\n  static ngAcceptInputType_editable: BooleanInput;\n  static ngAcceptInputType_optional: BooleanInput;\n  static ngAcceptInputType_completed: BooleanInput;\n  static ngAcceptInputType_hasError: BooleanInput;\n  static ngAcceptInputType_linear: BooleanInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n\n\n/**\n * Simplified representation of an \"AbstractControl\" from @angular/forms.\n * Used to avoid having to bring in @angular/forms for a single optional interface.\n * @docs-private\n */\ninterface AbstractControlLike {\n  asyncValidator: ((control: any) => any) | null;\n  dirty: boolean;\n  disabled: boolean;\n  enabled: boolean;\n  errors: {[key: string]: any} | null;\n  invalid: boolean;\n  parent: any;\n  pending: boolean;\n  pristine: boolean;\n  root: AbstractControlLike;\n  status: string;\n  statusChanges: Observable<any>;\n  touched: boolean;\n  untouched: boolean;\n  updateOn: any;\n  valid: boolean;\n  validator: ((control: any) => any) | null;\n  value: any;\n  valueChanges: Observable<any>;\n  clearAsyncValidators(): void;\n  clearValidators(): void;\n  disable(opts?: any): void;\n  enable(opts?: any): void;\n  get(path: (string | number)[] | string): AbstractControlLike | null;\n  getError(errorCode: string, path?: (string | number)[] | string): any;\n  hasError(errorCode: string, path?: (string | number)[] | string): boolean;\n  markAllAsTouched(): void;\n  markAsDirty(opts?: any): void;\n  markAsPending(opts?: any): void;\n  markAsPristine(opts?: any): void;\n  markAsTouched(opts?: any): void;\n  markAsUntouched(opts?: any): void;\n  patchValue(value: any, options?: Object): void;\n  reset(value?: any, options?: Object): void;\n  setAsyncValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setErrors(errors: {[key: string]: any} | null, opts?: any): void;\n  setParent(parent: any): void;\n  setValidators(newValidator: (control: any) => any |\n    ((control: any) => any)[] | null): void;\n  setValue(value: any, options?: Object): void;\n  updateValueAndValidity(opts?: any): void;\n  patchValue(value: any, options?: any): void;\n  reset(formState?: any, options?: any): void;\n  setValue(value: any, options?: any): void;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, HostListener, Input} from '@angular/core';\n\nimport {CdkStepper} from './stepper';\n\n/** Button that moves to the next step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperNext]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperNext {\n  /** Type of the next button. Defaults to \"submit\" if not specified. */\n  @Input() type: string = 'submit';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.next();\n  }\n}\n\n/** Button that moves to the previous step in a stepper workflow. */\n@Directive({\n  selector: 'button[cdkStepperPrevious]',\n  host: {\n    '[type]': 'type',\n  }\n})\nexport class CdkStepperPrevious {\n  /** Type of the previous button. Defaults to \"button\" if not specified. */\n  @Input() type: string = 'button';\n\n  constructor(public _stepper: CdkStepper) {}\n\n  // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n  // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n  // ViewEngine they're overwritten.\n  // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n  // tslint:disable-next-line:no-host-decorator-in-concrete\n  @HostListener('click')\n  _handleClick() {\n    this._stepper.previous();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {CdkStepper, CdkStep} from './stepper';\nimport {CdkStepLabel} from './step-label';\nimport {CdkStepperNext, CdkStepperPrevious} from './stepper-button';\nimport {CdkStepHeader} from './step-header';\nimport {BidiModule} from '@angular/cdk/bidi';\n\n@NgModule({\n  imports: [BidiModule],\n  exports: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ],\n  declarations: [\n    CdkStep,\n    CdkStepper,\n    CdkStepHeader,\n    CdkStepLabel,\n    CdkStepperNext,\n    CdkStepperPrevious,\n  ]\n})\nexport class CdkStepperModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './stepper';\nexport * from './step-label';\nexport * from './stepper-button';\nexport * from './stepper-module';\nexport * from './step-header';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]},"metadata":{},"sourceType":"module"}